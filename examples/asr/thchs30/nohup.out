Creating csv
INFO:absl:force process is set to be true
INFO:absl:Processing the thchs30 subset train in /data/thchs30/data_thchs30
INFO:absl:Processing audio and transcript for train
INFO:absl:Successfully generated csv file examples/asr/thchs30/data/train.csv
INFO:absl:Finished processing thchs30 subset train
INFO:absl:force process is set to be true
INFO:absl:Processing the thchs30 subset dev in /data/thchs30/data_thchs30
INFO:absl:Processing audio and transcript for dev
INFO:absl:Successfully generated csv file examples/asr/thchs30/data/dev.csv
INFO:absl:Finished processing thchs30 subset dev
INFO:absl:force process is set to be true
INFO:absl:Processing the thchs30 subset test in /data/thchs30/data_thchs30
INFO:absl:Processing audio and transcript for test
INFO:absl:Successfully generated csv file examples/asr/thchs30/data/test.csv
INFO:absl:Finished processing thchs30 subset test
Prepare vocab
2667
Finished created vocab
Computing cmvn
INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mpc'), ('cls', 'main'), ('dataset_builder', 'speech_dataset'), ('decode_config', None), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'input_length_range': [10, 15000]}), ('model', 'mpc'), ('model_config', {'return_encoder_output': False, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 12, 'dff': 1280, 'rate': 0.1, 'chunk_size': 1, 'keep_probability': 0.8}), ('num_classes', 40), ('num_data_threads', 1), ('num_epochs', 50), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 2000, 'k': 0.3}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [0]), ('sorta_epoch', 5), ('summary_dir', 'examples/asr/thchs30/ckpts/mpc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'input_length_range': [10, 15000]})]
INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_set.SpeechDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/train.csv'), ('input_length_range', [10, 15000])]
INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
INFO:absl:Loading data from examples/asr/thchs30/data/train.csv
INFO:absl:Loading data from examples/asr/thchs30/data/all.csv
Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
Fine-tuning
[1,1]<stderr>:INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/'), ('cls', 'main'), ('dataset_builder', 'speech_recognition_dataset'), ('decode_config', {'beam_search': True, 'beam_size': 10, 'ctc_weight': 0.5, 'lm_weight': 0.7, 'lm_type': 'rnn', 'lm_path': 'examples/asr/thchs30/configs/rnnlm.json'}), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('model', 'mtl_transformer_ctc'), ('model_config', {'model': 'speech_transformer', 'model_config': {'return_encoder_output': True, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 4, 'num_decoder_layers': 2, 'dff': 1280, 'rate': 0.1, 'label_smoothing_rate': 0.0, 'schedual_sampling_rate': 0.9}, 'mtl_weight': 0.5}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 5), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 25000, 'k': 1.0, 'decay_steps': 100000000, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [1]), ('sorta_epoch', 1), ('summary_dir', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000], 'speed_permutation': [0.9, 1.0, 1.1]})]
[1,0]<stderr>:INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/'), ('cls', 'main'), ('dataset_builder', 'speech_recognition_dataset'), ('decode_config', {'beam_search': True, 'beam_size': 10, 'ctc_weight': 0.5, 'lm_weight': 0.7, 'lm_type': 'rnn', 'lm_path': 'examples/asr/thchs30/configs/rnnlm.json'}), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('model', 'mtl_transformer_ctc'), ('model_config', {'model': 'speech_transformer', 'model_config': {'return_encoder_output': True, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 4, 'num_decoder_layers': 2, 'dff': 1280, 'rate': 0.1, 'label_smoothing_rate': 0.0, 'schedual_sampling_rate': 0.9}, 'mtl_weight': 0.5}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 5), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 25000, 'k': 1.0, 'decay_steps': 100000000, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [1]), ('sorta_epoch', 1), ('summary_dir', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000], 'speed_permutation': [0.9, 1.0, 1.1]})]
[1,1]<stderr>:2020-04-11 13:33:53.001849: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
[1,0]<stderr>:2020-04-11 13:33:53.001937: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
[1,1]<stderr>:2020-04-11 13:33:53.825203: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:53.825210: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:53.826362: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,1]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,1]<stderr>:pciBusID: 0000:04:01.0
[1,0]<stderr>:2020-04-11 13:33:53.826388: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,0]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,0]<stderr>:pciBusID: 0000:04:01.0
[1,1]<stderr>:2020-04-11 13:33:53.826454: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:53.826490: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:53.827510: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 1 with properties: 
[1,1]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,1]<stderr>:pciBusID: 0000:04:02.0
[1,0]<stderr>:2020-04-11 13:33:53.827561: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 1 with properties: 
[1,0]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,0]<stderr>:pciBusID: 0000:04:02.0
[1,1]<stderr>:2020-04-11 13:33:53.827843: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,0]<stderr>:2020-04-11 13:33:53.827923: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,1]<stderr>:2020-04-11 13:33:53.829343: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,0]<stderr>:2020-04-11 13:33:53.829556: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,1]<stderr>:2020-04-11 13:33:53.830748: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,0]<stderr>:2020-04-11 13:33:53.831019: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,1]<stderr>:2020-04-11 13:33:53.831079: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,0]<stderr>:2020-04-11 13:33:53.831376: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,1]<stderr>:2020-04-11 13:33:53.832812: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,0]<stderr>:2020-04-11 13:33:53.833170: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,1]<stderr>:2020-04-11 13:33:53.834089: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,0]<stderr>:2020-04-11 13:33:53.834518: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,1]<stderr>:2020-04-11 13:33:53.838685: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,1]<stderr>:2020-04-11 13:33:53.838838: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:53.839327: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:53.839414: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,0]<stderr>:2020-04-11 13:33:53.839575: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:53.840226: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:53.840466: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:53.841237: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:53.841442: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:53.842173: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0, 1
[1,0]<stderr>:2020-04-11 13:33:53.842331: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:53.842778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0, 1
[1,1]<stderr>:INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/'), ('cls', 'main'), ('dataset_builder', 'speech_recognition_dataset'), ('decode_config', {'beam_search': True, 'beam_size': 10, 'ctc_weight': 0.5, 'lm_weight': 0.7, 'lm_type': 'rnn', 'lm_path': 'examples/asr/thchs30/configs/rnnlm.json'}), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('model', 'mtl_transformer_ctc'), ('model_config', {'model': 'speech_transformer', 'model_config': {'return_encoder_output': True, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 4, 'num_decoder_layers': 2, 'dff': 1280, 'rate': 0.1, 'label_smoothing_rate': 0.0, 'schedual_sampling_rate': 0.9}, 'mtl_weight': 0.5}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 5), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 25000, 'k': 1.0, 'decay_steps': 100000000, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [1]), ('sorta_epoch', 1), ('summary_dir', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000], 'speed_permutation': [0.9, 1.0, 1.1]})]
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/train.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [0.9, 1.0, 1.1]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/'), ('cls', 'main'), ('dataset_builder', 'speech_recognition_dataset'), ('decode_config', {'beam_search': True, 'beam_size': 10, 'ctc_weight': 0.5, 'lm_weight': 0.7, 'lm_type': 'rnn', 'lm_path': 'examples/asr/thchs30/configs/rnnlm.json'}), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('model', 'mtl_transformer_ctc'), ('model_config', {'model': 'speech_transformer', 'model_config': {'return_encoder_output': True, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 4, 'num_decoder_layers': 2, 'dff': 1280, 'rate': 0.1, 'label_smoothing_rate': 0.0, 'schedual_sampling_rate': 0.9}, 'mtl_weight': 0.5}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 5), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 25000, 'k': 1.0, 'decay_steps': 100000000, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [1]), ('sorta_epoch', 1), ('summary_dir', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000], 'speed_permutation': [0.9, 1.0, 1.1]})]
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/train.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [0.9, 1.0, 1.1]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.csv
[1,1]<stderr>:INFO:absl:perform speed permutation
[1,0]<stderr>:INFO:absl:perform speed permutation
[1,1]<stdout>:before filter by unk:30000
[1,0]<stdout>:before filter by unk:30000
[1,1]<stdout>:after filter by unk:30000
[1,1]<stdout>:afiter filter by input length:29938
[1,0]<stdout>:after filter by unk:30000
[1,1]<stdout>:after filter by output length:29938
[1,1]<stderr>:2020-04-11 13:33:54.245090: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
[1,1]<stderr>:2020-04-11 13:33:54.253184: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2294605000 Hz
[1,0]<stdout>:afiter filter by input length:29938
[1,1]<stderr>:2020-04-11 13:33:54.254058: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55dd31024360 executing computations on platform Host. Devices:
[1,1]<stderr>:2020-04-11 13:33:54.254086: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
[1,0]<stdout>:after filter by output length:29938
[1,0]<stderr>:2020-04-11 13:33:54.272447: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
[1,0]<stderr>:2020-04-11 13:33:54.280571: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2294605000 Hz
[1,0]<stderr>:2020-04-11 13:33:54.281457: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55a11798d360 executing computations on platform Host. Devices:
[1,0]<stderr>:2020-04-11 13:33:54.281485: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
[1,1]<stderr>:2020-04-11 13:33:54.481296: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:54.482032: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55dd310674d0 executing computations on platform CUDA. Devices:
[1,1]<stderr>:2020-04-11 13:33:54.482073: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Tesla V100-PCIE-16GB, Compute Capability 7.0
[1,1]<stderr>:2020-04-11 13:33:54.482349: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:54.482800: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,1]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,1]<stderr>:pciBusID: 0000:04:02.0
[1,1]<stderr>:2020-04-11 13:33:54.482875: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.482894: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.482905: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.482920: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.482931: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.482943: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.482954: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,1]<stderr>:2020-04-11 13:33:54.483000: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:54.483466: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:54.483867: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 1
[1,1]<stderr>:2020-04-11 13:33:54.483988: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,1]<stderr>:2020-04-11 13:33:54.485594: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
[1,1]<stderr>:2020-04-11 13:33:54.485617: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      1 
[1,1]<stderr>:2020-04-11 13:33:54.485623: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 1:   N 
[1,1]<stderr>:2020-04-11 13:33:54.485907: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:54.486347: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 13:33:54.486783: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14926 MB memory) -> physical GPU (device: 1, name: Tesla V100-PCIE-16GB, pci bus id: 0000:04:02.0, compute capability: 7.0)
[1,0]<stderr>:2020-04-11 13:33:54.514181: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:54.514912: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55a1179d04d0 executing computations on platform CUDA. Devices:
[1,0]<stderr>:2020-04-11 13:33:54.514944: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Tesla V100-PCIE-16GB, Compute Capability 7.0
[1,0]<stderr>:2020-04-11 13:33:54.515218: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:54.515930: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,0]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,0]<stderr>:pciBusID: 0000:04:01.0
[1,0]<stderr>:2020-04-11 13:33:54.516004: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.516023: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.516035: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.516048: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.516059: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.516071: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.516083: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,0]<stderr>:2020-04-11 13:33:54.516142: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:54.516636: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:54.517078: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
[1,0]<stderr>:2020-04-11 13:33:54.517146: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,0]<stderr>:2020-04-11 13:33:54.518842: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
[1,0]<stderr>:2020-04-11 13:33:54.518864: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
[1,0]<stderr>:2020-04-11 13:33:54.518871: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
[1,0]<stderr>:2020-04-11 13:33:54.519177: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:54.519648: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 13:33:54.520100: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14926 MB memory) -> physical GPU (device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:04:01.0, compute capability: 7.0)
[1,1]<stdout>:Model: "x_net"
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:Layer (type)                 Output Shape              Param #   
[1,1]<stdout>:=================================================================
[1,1]<stdout>:input_1 (InputLayer)         [(None, None, 40, 1)]     0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:conv2d (Conv2D)              (None, None, 20, 512)     4608      
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:batch_normalization (BatchNo (None, None, 20, 512)     2048      
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:tf_op_layer_Relu6 (TensorFlo [(None, None, 20, 512)]   0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:conv2d_1 (Conv2D)            (None, None, 10, 512)     2359296   
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:batch_normalization_1 (Batch (None, None, 10, 512)     2048      
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:tf_op_layer_Relu6_1 (TensorF [(None, None, 10, 512)]   0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:reshape (Reshape)            (None, None, 5120)        0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:dense (Dense)                (None, None, 512)         2621952   
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:positional_encoding (Positio (None, None, 512)         0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:dropout (Dropout)            (None, None, 512)         0         
[1,1]<stdout>:=================================================================
[1,1]<stdout>:Total params: 4,989,952
[1,1]<stdout>:Trainable params: 4,987,904
[1,1]<stdout>:Non-trainable params: 2,048
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:None
[1,1]<stdout>:Model: "y_net"
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:Layer (type)                 Output Shape              Param #   
[1,1]<stdout>:=================================================================
[1,1]<stdout>:input_2 (InputLayer)         [(None, None)]            0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:embedding (Embedding)        (None, None, 512)         1366016   
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:positional_encoding_1 (Posit (None, None, 512)         0         
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:dropout_1 (Dropout)          (None, None, 512)         0         
[1,1]<stdout>:=================================================================
[1,1]<stdout>:Total params: 1,366,016
[1,1]<stdout>:Trainable params: 1,366,016
[1,1]<stdout>:Non-trainable params: 0
[1,1]<stdout>:_________________________________________________________________
[1,1]<stdout>:None
[1,0]<stdout>:Model: "x_net"
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:Layer (type)                 Output Shape              Param #   
[1,0]<stdout>:=================================================================
[1,0]<stdout>:input_1 (InputLayer)         [(None, None, 40, 1)]     0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:conv2d (Conv2D)              (None, None, 20, 512)     4608      
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:batch_normalization (BatchNo (None, None, 20, 512)     2048      
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:tf_op_layer_Relu6 (TensorFlo [(None, None, 20, 512)]   0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:conv2d_1 (Conv2D)            (None, None, 10, 512)     2359296   
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:batch_normalization_1 (Batch (None, None, 10, 512)     2048      
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:tf_op_layer_Relu6_1 (TensorF [(None, None, 10, 512)]   0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:reshape (Reshape)            (None, None, 5120)        0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:dense (Dense)                (None, None, 512)         2621952   
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:positional_encoding (Positio (None, None, 512)         0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:dropout (Dropout)            (None, None, 512)         0         
[1,0]<stdout>:=================================================================
[1,0]<stdout>:Total params: 4,989,952
[1,0]<stdout>:Trainable params: 4,987,904
[1,0]<stdout>:Non-trainable params: 2,048
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:None
[1,0]<stdout>:Model: "y_net"
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:Layer (type)                 Output Shape              Param #   
[1,0]<stdout>:=================================================================
[1,0]<stdout>:input_2 (InputLayer)         [(None, None)]            0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:embedding (Embedding)        (None, None, 512)         1366016   
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:positional_encoding_1 (Posit (None, None, 512)         0         
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:dropout_1 (Dropout)          (None, None, 512)         0         
[1,0]<stdout>:=================================================================
[1,0]<stdout>:Total params: 1,366,016
[1,0]<stdout>:Trainable params: 1,366,016
[1,0]<stdout>:Non-trainable params: 0
[1,0]<stdout>:_________________________________________________________________
[1,0]<stdout>:None
[1,1]<stderr>:INFO:absl:trying to restore from : examples/asr/thchs30/ckpts/mtl_transformer_ctc/
[1,0]<stderr>:INFO:absl:trying to restore from : examples/asr/thchs30/ckpts/mtl_transformer_ctc/
[1,1]<stderr>:2020-04-11 13:33:56.898830: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,0]<stderr>:2020-04-11 13:33:57.008113: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,1]<stderr>:2020-04-11 13:33:58.500720: W tensorflow/stream_executor/cuda/redzone_allocator.cc:312] Not found: ./bin/ptxas not found
[1,1]<stderr>:Relying on driver to perform ptx compilation. This message will be only logged once.
[1,0]<stderr>:2020-04-11 13:33:58.642987: W tensorflow/stream_executor/cuda/redzone_allocator.cc:312] Not found: ./bin/ptxas not found
[1,0]<stderr>:Relying on driver to perform ptx compilation. This message will be only logged once.
[1,1]<stderr>:2020-04-11 13:33:58.706447: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,0]<stderr>:2020-04-11 13:33:58.850155: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,1]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1154: alias_inplace_add (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,1]<stderr>:Instructions for updating:
[1,1]<stderr>:Prefer tf.tensor_scatter_nd_add, which offers the same functionality with well-defined read-write semantics.
[1,1]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1154: alias_inplace_add (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,1]<stderr>:Instructions for updating:
[1,1]<stderr>:Prefer tf.tensor_scatter_nd_add, which offers the same functionality with well-defined read-write semantics.
[1,1]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1137: alias_inplace_update (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,1]<stderr>:Instructions for updating:
[1,1]<stderr>:Prefer tf.tensor_scatter_nd_update, which offers the same functionality with well-defined read-write semantics.
[1,1]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1137: alias_inplace_update (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,1]<stderr>:Instructions for updating:
[1,1]<stderr>:Prefer tf.tensor_scatter_nd_update, which offers the same functionality with well-defined read-write semantics.
[1,0]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1154: alias_inplace_add (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,0]<stderr>:Instructions for updating:
[1,0]<stderr>:Prefer tf.tensor_scatter_nd_add, which offers the same functionality with well-defined read-write semantics.
[1,0]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1154: alias_inplace_add (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,0]<stderr>:Instructions for updating:
[1,0]<stderr>:Prefer tf.tensor_scatter_nd_add, which offers the same functionality with well-defined read-write semantics.
[1,0]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1137: alias_inplace_update (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,0]<stderr>:Instructions for updating:
[1,0]<stderr>:Prefer tf.tensor_scatter_nd_update, which offers the same functionality with well-defined read-write semantics.
[1,0]<stderr>:WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1137: alias_inplace_update (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
[1,0]<stderr>:Instructions for updating:
[1,0]<stderr>:Prefer tf.tensor_scatter_nd_update, which offers the same functionality with well-defined read-write semantics.
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/train.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [0.9, 1.0, 1.1]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.csv
[1,1]<stderr>:INFO:absl:perform speed permutation
[1,1]<stdout>:before filter by unk:30000
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/train.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [0.9, 1.0, 1.1]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.csv
[1,0]<stderr>:INFO:absl:perform speed permutation
[1,1]<stdout>:after filter by unk:30000
[1,1]<stdout>:afiter filter by input length:29938
[1,0]<stdout>:before filter by unk:30000
[1,1]<stdout>:after filter by output length:29938
[1,1]<stderr>:INFO:absl:Creates the sub-dataset which is the 1 part of 2
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stdout>:after filter by unk:30000
[1,0]<stdout>:afiter filter by input length:29938
[1,0]<stdout>:after filter by output length:29938
[1,0]<stderr>:INFO:absl:Creates the sub-dataset which is the 0 part of 2
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 0
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:global_steps: 1	learning_rate: 1.1180e-08	loss: 490.6797	Accuracy: -0.1257	CTCAccuracy: -2.6467	
[1,0]<stderr>:INFO:absl:global_steps: 11	learning_rate: 1.2298e-07	loss: 595.8782	Accuracy: -0.2329	CTCAccuracy: -4.3389	sec/iter: 0.5028
[1,0]<stderr>:INFO:absl:global_steps: 21	learning_rate: 2.3479e-07	loss: 630.7087	Accuracy: -0.2386	CTCAccuracy: -4.3845	sec/iter: 0.5142
[1,0]<stderr>:INFO:absl:global_steps: 31	learning_rate: 3.4659e-07	loss: 638.8725	Accuracy: -0.2290	CTCAccuracy: -4.3640	sec/iter: 0.4797
[1,0]<stderr>:INFO:absl:global_steps: 41	learning_rate: 4.5839e-07	loss: 658.1179	Accuracy: -0.2050	CTCAccuracy: -4.3898	sec/iter: 0.4868
[1,0]<stderr>:INFO:absl:global_steps: 51	learning_rate: 5.7020e-07	loss: 660.4971	Accuracy: -0.2180	CTCAccuracy: -4.2364	sec/iter: 0.4962
[1,0]<stderr>:INFO:absl:global_steps: 61	learning_rate: 6.8200e-07	loss: 651.3573	Accuracy: -0.2216	CTCAccuracy: -4.3592	sec/iter: 0.4591
[1,0]<stderr>:INFO:absl:global_steps: 71	learning_rate: 7.9380e-07	loss: 657.2463	Accuracy: -0.1685	CTCAccuracy: -4.2055	sec/iter: 0.5021
[1,0]<stderr>:INFO:absl:global_steps: 81	learning_rate: 9.0561e-07	loss: 632.5983	Accuracy: -0.2386	CTCAccuracy: -3.9271	sec/iter: 0.4743
[1,0]<stderr>:INFO:absl:global_steps: 91	learning_rate: 1.0174e-06	loss: 618.0977	Accuracy: -0.1982	CTCAccuracy: -3.0179	sec/iter: 0.4774
[1,0]<stderr>:INFO:absl:global_steps: 101	learning_rate: 1.1292e-06	loss: 598.3400	Accuracy: -0.2003	CTCAccuracy: -1.5036	sec/iter: 0.4794
[1,0]<stderr>:INFO:absl:global_steps: 111	learning_rate: 1.2410e-06	loss: 584.4299	Accuracy: -0.1900	CTCAccuracy: -0.0937	sec/iter: 0.4544
[1,0]<stderr>:INFO:absl:global_steps: 121	learning_rate: 1.3528e-06	loss: 561.0858	Accuracy: -0.1727	CTCAccuracy: 0.0009	sec/iter: 0.4655
[1,0]<stderr>:INFO:absl:global_steps: 131	learning_rate: 1.4646e-06	loss: 519.8975	Accuracy: -0.1511	CTCAccuracy: 0.0004	sec/iter: 0.4555
[1,0]<stderr>:INFO:absl:global_steps: 141	learning_rate: 1.5764e-06	loss: 492.4509	Accuracy: -0.1687	CTCAccuracy: 0.0000	sec/iter: 0.4419
[1,0]<stderr>:INFO:absl:global_steps: 151	learning_rate: 1.6882e-06	loss: 441.9607	Accuracy: -0.1815	CTCAccuracy: 0.0000	sec/iter: 0.4397
[1,0]<stderr>:INFO:absl:global_steps: 161	learning_rate: 1.8000e-06	loss: 395.7858	Accuracy: -0.1433	CTCAccuracy: 0.0000	sec/iter: 0.4881
[1,0]<stderr>:INFO:absl:global_steps: 171	learning_rate: 1.9118e-06	loss: 371.4866	Accuracy: -0.1160	CTCAccuracy: 0.0000	sec/iter: 0.4272
[1,0]<stderr>:INFO:absl:global_steps: 181	learning_rate: 2.0236e-06	loss: 332.8647	Accuracy: -0.0928	CTCAccuracy: 0.0000	sec/iter: 0.4766
[1,0]<stderr>:INFO:absl:global_steps: 191	learning_rate: 2.1354e-06	loss: 297.8533	Accuracy: -0.0441	CTCAccuracy: 0.0000	sec/iter: 0.4572
[1,0]<stderr>:INFO:absl:global_steps: 201	learning_rate: 2.2472e-06	loss: 252.7966	Accuracy: -0.0212	CTCAccuracy: 0.0000	sec/iter: 0.4745
[1,0]<stderr>:INFO:absl:global_steps: 211	learning_rate: 2.3591e-06	loss: 271.0056	Accuracy: 0.0025	CTCAccuracy: 0.0000	sec/iter: 0.4812
[1,0]<stderr>:INFO:absl:global_steps: 221	learning_rate: 2.4709e-06	loss: 258.8541	Accuracy: 0.0055	CTCAccuracy: 0.0000	sec/iter: 0.4553
[1,0]<stderr>:INFO:absl:global_steps: 231	learning_rate: 2.5827e-06	loss: 262.2883	Accuracy: 0.0021	CTCAccuracy: 0.0000	sec/iter: 0.4593
[1,0]<stderr>:INFO:absl:global_steps: 241	learning_rate: 2.6945e-06	loss: 231.9718	Accuracy: 0.0029	CTCAccuracy: 0.0000	sec/iter: 0.4678
[1,0]<stderr>:INFO:absl:global_steps: 251	learning_rate: 2.8063e-06	loss: 233.8736	Accuracy: 0.0032	CTCAccuracy: 0.0000	sec/iter: 0.4354
[1,0]<stderr>:INFO:absl:global_steps: 261	learning_rate: 2.9181e-06	loss: 228.1080	Accuracy: 0.0045	CTCAccuracy: 0.0000	sec/iter: 0.4853
[1,0]<stderr>:INFO:absl:global_steps: 271	learning_rate: 3.0299e-06	loss: 250.2985	Accuracy: 0.0021	CTCAccuracy: 0.0000	sec/iter: 0.4858
[1,0]<stderr>:INFO:absl:global_steps: 281	learning_rate: 3.1417e-06	loss: 250.2015	Accuracy: 0.0020	CTCAccuracy: 0.0000	sec/iter: 0.4449
[1,0]<stderr>:INFO:absl:global_steps: 291	learning_rate: 3.2535e-06	loss: 250.6580	Accuracy: 0.0033	CTCAccuracy: 0.0000	sec/iter: 0.4934
[1,0]<stderr>:INFO:absl:global_steps: 301	learning_rate: 3.3653e-06	loss: 243.2105	Accuracy: 0.0016	CTCAccuracy: 0.0000	sec/iter: 0.4406
[1,0]<stderr>:INFO:absl:global_steps: 311	learning_rate: 3.4771e-06	loss: 246.0518	Accuracy: 0.0033	CTCAccuracy: 0.0000	sec/iter: 0.4717
[1,0]<stderr>:INFO:absl:global_steps: 321	learning_rate: 3.5889e-06	loss: 242.8849	Accuracy: 0.0008	CTCAccuracy: 0.0000	sec/iter: 0.4503
[1,0]<stderr>:INFO:absl:global_steps: 331	learning_rate: 3.7007e-06	loss: 259.9458	Accuracy: 0.0025	CTCAccuracy: 0.0000	sec/iter: 0.4819
[1,0]<stderr>:INFO:absl:global_steps: 341	learning_rate: 3.8125e-06	loss: 227.0759	Accuracy: 0.0036	CTCAccuracy: 0.0000	sec/iter: 0.4566
[1,0]<stderr>:INFO:absl:global_steps: 351	learning_rate: 3.9243e-06	loss: 217.0035	Accuracy: 0.0029	CTCAccuracy: 0.0000	sec/iter: 0.4781
[1,0]<stderr>:INFO:absl:global_steps: 361	learning_rate: 4.0361e-06	loss: 249.4820	Accuracy: 0.0020	CTCAccuracy: 0.0000	sec/iter: 0.4526
[1,0]<stderr>:INFO:absl:global_steps: 371	learning_rate: 4.1479e-06	loss: 240.8152	Accuracy: 0.0041	CTCAccuracy: 0.0000	sec/iter: 0.4836
[1,0]<stderr>:INFO:absl:global_steps: 381	learning_rate: 4.2597e-06	loss: 231.1934	Accuracy: 0.0045	CTCAccuracy: 0.0000	sec/iter: 0.4794
[1,0]<stderr>:INFO:absl:global_steps: 391	learning_rate: 4.3715e-06	loss: 223.7789	Accuracy: 0.0045	CTCAccuracy: 0.0000	sec/iter: 0.4572
[1,0]<stderr>:INFO:absl:global_steps: 401	learning_rate: 4.4833e-06	loss: 230.8394	Accuracy: 0.0055	CTCAccuracy: 0.0000	sec/iter: 0.4846
[1,0]<stderr>:INFO:absl:global_steps: 411	learning_rate: 4.5951e-06	loss: 228.9979	Accuracy: 0.0100	CTCAccuracy: 0.0000	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 421	learning_rate: 4.7069e-06	loss: 246.9942	Accuracy: 0.0129	CTCAccuracy: 0.0000	sec/iter: 0.4618
[1,0]<stderr>:INFO:absl:global_steps: 431	learning_rate: 4.8187e-06	loss: 255.5003	Accuracy: 0.0128	CTCAccuracy: 0.0000	sec/iter: 0.4936
[1,0]<stderr>:INFO:absl:global_steps: 441	learning_rate: 4.9305e-06	loss: 236.4522	Accuracy: 0.0099	CTCAccuracy: 0.0000	sec/iter: 0.4619
[1,0]<stderr>:INFO:absl:global_steps: 451	learning_rate: 5.0423e-06	loss: 232.8975	Accuracy: 0.0158	CTCAccuracy: 0.0000	sec/iter: 0.4984
[1,0]<stderr>:INFO:absl:global_steps: 461	learning_rate: 5.1541e-06	loss: 245.2602	Accuracy: 0.0163	CTCAccuracy: 0.0000	sec/iter: 0.4423
[1,0]<stderr>:INFO:absl:global_steps: 471	learning_rate: 5.2659e-06	loss: 242.4409	Accuracy: 0.0169	CTCAccuracy: 0.0000	sec/iter: 0.5144
[1,0]<stderr>:INFO:absl:global_steps: 481	learning_rate: 5.3777e-06	loss: 219.3091	Accuracy: 0.0174	CTCAccuracy: 0.0000	sec/iter: 0.5015
[1,0]<stderr>:INFO:absl:global_steps: 491	learning_rate: 5.4895e-06	loss: 248.8687	Accuracy: 0.0172	CTCAccuracy: 0.0000	sec/iter: 0.4671
[1,0]<stderr>:INFO:absl:global_steps: 501	learning_rate: 5.6014e-06	loss: 217.8192	Accuracy: 0.0197	CTCAccuracy: 0.0000	sec/iter: 0.5253
[1,0]<stderr>:INFO:absl:global_steps: 511	learning_rate: 5.7132e-06	loss: 231.4157	Accuracy: 0.0184	CTCAccuracy: 0.0000	sec/iter: 0.4782
[1,0]<stderr>:INFO:absl:global_steps: 521	learning_rate: 5.8250e-06	loss: 205.0280	Accuracy: 0.0194	CTCAccuracy: 0.0000	sec/iter: 0.4395
[1,0]<stderr>:INFO:absl:global_steps: 531	learning_rate: 5.9368e-06	loss: 239.7010	Accuracy: 0.0179	CTCAccuracy: 0.0000	sec/iter: 0.5070
[1,0]<stderr>:INFO:absl:global_steps: 541	learning_rate: 6.0486e-06	loss: 236.4911	Accuracy: 0.0227	CTCAccuracy: 0.0000	sec/iter: 0.4801
[1,0]<stderr>:INFO:absl:global_steps: 551	learning_rate: 6.1604e-06	loss: 227.2326	Accuracy: 0.0208	CTCAccuracy: 0.0000	sec/iter: 0.5044
[1,0]<stderr>:INFO:absl:global_steps: 561	learning_rate: 6.2722e-06	loss: 237.4489	Accuracy: 0.0201	CTCAccuracy: 0.0000	sec/iter: 0.4786
[1,0]<stderr>:INFO:absl:global_steps: 571	learning_rate: 6.3840e-06	loss: 216.0550	Accuracy: 0.0229	CTCAccuracy: 0.0000	sec/iter: 0.5047
[1,0]<stderr>:INFO:absl:global_steps: 581	learning_rate: 6.4958e-06	loss: 234.2508	Accuracy: 0.0239	CTCAccuracy: 0.0000	sec/iter: 0.4822
[1,0]<stderr>:INFO:absl:global_steps: 591	learning_rate: 6.6076e-06	loss: 235.9646	Accuracy: 0.0275	CTCAccuracy: 0.0000	sec/iter: 0.4837
[1,0]<stderr>:INFO:absl:global_steps: 601	learning_rate: 6.7194e-06	loss: 229.2289	Accuracy: 0.0194	CTCAccuracy: 0.0000	sec/iter: 0.4767
[1,0]<stderr>:INFO:absl:global_steps: 611	learning_rate: 6.8312e-06	loss: 232.1783	Accuracy: 0.0235	CTCAccuracy: 0.0000	sec/iter: 0.4765
[1,0]<stderr>:INFO:absl:global_steps: 621	learning_rate: 6.9430e-06	loss: 234.8262	Accuracy: 0.0276	CTCAccuracy: 0.0000	sec/iter: 0.4800
[1,0]<stderr>:INFO:absl:global_steps: 631	learning_rate: 7.0548e-06	loss: 248.5632	Accuracy: 0.0246	CTCAccuracy: 0.0000	sec/iter: 0.5212
[1,0]<stderr>:INFO:absl:global_steps: 641	learning_rate: 7.1666e-06	loss: 231.2786	Accuracy: 0.0235	CTCAccuracy: 0.0000	sec/iter: 0.5075
[1,0]<stderr>:INFO:absl:global_steps: 651	learning_rate: 7.2784e-06	loss: 226.4317	Accuracy: 0.0279	CTCAccuracy: 0.0000	sec/iter: 0.4844
[1,0]<stderr>:INFO:absl:global_steps: 661	learning_rate: 7.3902e-06	loss: 230.0257	Accuracy: 0.0223	CTCAccuracy: 0.0000	sec/iter: 0.5193
[1,0]<stderr>:INFO:absl:global_steps: 671	learning_rate: 7.5020e-06	loss: 229.1916	Accuracy: 0.0291	CTCAccuracy: 0.0000	sec/iter: 0.4836
[1,0]<stderr>:INFO:absl:global_steps: 681	learning_rate: 7.6138e-06	loss: 242.6687	Accuracy: 0.0253	CTCAccuracy: 0.0000	sec/iter: 0.4852
[1,0]<stderr>:INFO:absl:global_steps: 691	learning_rate: 7.7256e-06	loss: 235.2162	Accuracy: 0.0250	CTCAccuracy: 0.0000	sec/iter: 0.4953
[1,0]<stderr>:INFO:absl:global_steps: 701	learning_rate: 7.8374e-06	loss: 222.4672	Accuracy: 0.0235	CTCAccuracy: 0.0000	sec/iter: 0.5196
[1,0]<stderr>:INFO:absl:global_steps: 711	learning_rate: 7.9492e-06	loss: 252.1208	Accuracy: 0.0224	CTCAccuracy: 0.0000	sec/iter: 0.4551
[1,0]<stderr>:INFO:absl:global_steps: 721	learning_rate: 8.0610e-06	loss: 240.2476	Accuracy: 0.0258	CTCAccuracy: 0.0000	sec/iter: 0.4970
[1,0]<stderr>:INFO:absl:global_steps: 731	learning_rate: 8.1728e-06	loss: 240.4703	Accuracy: 0.0238	CTCAccuracy: 0.0000	sec/iter: 0.5258
[1,0]<stderr>:INFO:absl:global_steps: 741	learning_rate: 8.2846e-06	loss: 238.9759	Accuracy: 0.0278	CTCAccuracy: 0.0000	sec/iter: 0.4581
[1,0]<stderr>:INFO:absl:global_steps: 751	learning_rate: 8.3964e-06	loss: 238.3183	Accuracy: 0.0265	CTCAccuracy: 0.0000	sec/iter: 0.5417
[1,0]<stderr>:INFO:absl:global_steps: 761	learning_rate: 8.5082e-06	loss: 234.8192	Accuracy: 0.0278	CTCAccuracy: 0.0000	sec/iter: 0.4903
[1,0]<stderr>:INFO:absl:global_steps: 771	learning_rate: 8.6200e-06	loss: 248.8189	Accuracy: 0.0205	CTCAccuracy: 0.0000	sec/iter: 0.4530
[1,0]<stderr>:INFO:absl:global_steps: 781	learning_rate: 8.7318e-06	loss: 232.2541	Accuracy: 0.0237	CTCAccuracy: 0.0000	sec/iter: 0.5368
[1,0]<stderr>:INFO:absl:global_steps: 791	learning_rate: 8.8436e-06	loss: 234.0222	Accuracy: 0.0225	CTCAccuracy: 0.0000	sec/iter: 0.4996
[1,0]<stderr>:INFO:absl:global_steps: 801	learning_rate: 8.9555e-06	loss: 246.6626	Accuracy: 0.0284	CTCAccuracy: 0.0000	sec/iter: 0.5020
[1,0]<stderr>:INFO:absl:global_steps: 811	learning_rate: 9.0673e-06	loss: 249.0392	Accuracy: 0.0272	CTCAccuracy: 0.0000	sec/iter: 0.5310
[1,0]<stderr>:INFO:absl:global_steps: 821	learning_rate: 9.1791e-06	loss: 231.8626	Accuracy: 0.0294	CTCAccuracy: 0.0000	sec/iter: 0.5038
[1,0]<stderr>:INFO:absl:global_steps: 831	learning_rate: 9.2909e-06	loss: 241.6360	Accuracy: 0.0235	CTCAccuracy: 0.0000	sec/iter: 0.4998
[1,0]<stderr>:INFO:absl:global_steps: 841	learning_rate: 9.4027e-06	loss: 243.9527	Accuracy: 0.0268	CTCAccuracy: 0.0000	sec/iter: 0.5259
[1,0]<stderr>:INFO:absl:global_steps: 851	learning_rate: 9.5145e-06	loss: 242.5909	Accuracy: 0.0285	CTCAccuracy: 0.0000	sec/iter: 0.5009
[1,0]<stderr>:INFO:absl:global_steps: 861	learning_rate: 9.6263e-06	loss: 227.2217	Accuracy: 0.0258	CTCAccuracy: 0.0000	sec/iter: 0.5047
[1,0]<stderr>:INFO:absl:global_steps: 871	learning_rate: 9.7381e-06	loss: 230.7001	Accuracy: 0.0217	CTCAccuracy: 0.0000	sec/iter: 0.5099
[1,0]<stderr>:INFO:absl:global_steps: 881	learning_rate: 9.8499e-06	loss: 224.3931	Accuracy: 0.0274	CTCAccuracy: 0.0000	sec/iter: 0.5053
[1,0]<stderr>:INFO:absl:global_steps: 891	learning_rate: 9.9617e-06	loss: 215.9747	Accuracy: 0.0286	CTCAccuracy: 0.0000	sec/iter: 0.5334
[1,0]<stderr>:INFO:absl:global_steps: 901	learning_rate: 1.0073e-05	loss: 223.8389	Accuracy: 0.0310	CTCAccuracy: 0.0000	sec/iter: 0.5121
[1,0]<stderr>:INFO:absl:global_steps: 911	learning_rate: 1.0185e-05	loss: 234.4042	Accuracy: 0.0314	CTCAccuracy: 0.0000	sec/iter: 0.5043
[1,0]<stderr>:INFO:absl:global_steps: 921	learning_rate: 1.0297e-05	loss: 231.7014	Accuracy: 0.0285	CTCAccuracy: 0.0000	sec/iter: 0.5115
[1,0]<stderr>:INFO:absl:global_steps: 931	learning_rate: 1.0409e-05	loss: 230.0727	Accuracy: 0.0275	CTCAccuracy: 0.0000	sec/iter: 0.5531
[1,0]<stderr>:INFO:absl:global_steps: 941	learning_rate: 1.0521e-05	loss: 233.3332	Accuracy: 0.0274	CTCAccuracy: 0.0000	sec/iter: 0.4855
[1,0]<stderr>:INFO:absl:global_steps: 951	learning_rate: 1.0633e-05	loss: 224.9446	Accuracy: 0.0297	CTCAccuracy: 0.0000	sec/iter: 0.5520
[1,0]<stderr>:INFO:absl:global_steps: 961	learning_rate: 1.0744e-05	loss: 228.6144	Accuracy: 0.0395	CTCAccuracy: 0.0000	sec/iter: 0.5207
[1,0]<stderr>:INFO:absl:global_steps: 971	learning_rate: 1.0856e-05	loss: 241.4582	Accuracy: 0.0309	CTCAccuracy: 0.0000	sec/iter: 0.4884
[1,0]<stderr>:INFO:absl:global_steps: 981	learning_rate: 1.0968e-05	loss: 216.3368	Accuracy: 0.0333	CTCAccuracy: 0.0000	sec/iter: 0.5590
[1,0]<stderr>:INFO:absl:global_steps: 991	learning_rate: 1.1080e-05	loss: 234.7842	Accuracy: 0.0337	CTCAccuracy: 0.0000	sec/iter: 0.5159
[1,0]<stderr>:INFO:absl:global_steps: 1001	learning_rate: 1.1192e-05	loss: 268.2618	Accuracy: 0.0326	CTCAccuracy: 0.0000	sec/iter: 0.4961
[1,0]<stderr>:INFO:absl:global_steps: 1011	learning_rate: 1.1303e-05	loss: 232.8636	Accuracy: 0.0306	CTCAccuracy: 0.0000	sec/iter: 0.5595
[1,0]<stderr>:INFO:absl:global_steps: 1021	learning_rate: 1.1415e-05	loss: 240.6422	Accuracy: 0.0312	CTCAccuracy: 0.0000	sec/iter: 0.5206
[1,0]<stderr>:INFO:absl:global_steps: 1031	learning_rate: 1.1527e-05	loss: 230.0335	Accuracy: 0.0294	CTCAccuracy: 0.0000	sec/iter: 0.5274
[1,0]<stderr>:INFO:absl:global_steps: 1041	learning_rate: 1.1639e-05	loss: 236.8524	Accuracy: 0.0383	CTCAccuracy: 0.0000	sec/iter: 0.5712
[1,0]<stderr>:INFO:absl:global_steps: 1051	learning_rate: 1.1751e-05	loss: 231.5230	Accuracy: 0.0351	CTCAccuracy: 0.0000	sec/iter: 0.4972
[1,0]<stderr>:INFO:absl:global_steps: 1061	learning_rate: 1.1862e-05	loss: 230.0038	Accuracy: 0.0301	CTCAccuracy: 0.0000	sec/iter: 0.5648
[1,0]<stderr>:INFO:absl:global_steps: 1071	learning_rate: 1.1974e-05	loss: 235.4146	Accuracy: 0.0291	CTCAccuracy: 0.0000	sec/iter: 0.5372
[1,0]<stderr>:INFO:absl:global_steps: 1081	learning_rate: 1.2086e-05	loss: 228.5569	Accuracy: 0.0309	CTCAccuracy: 0.0000	sec/iter: 0.4954
[1,0]<stderr>:INFO:absl:global_steps: 1091	learning_rate: 1.2198e-05	loss: 224.1660	Accuracy: 0.0363	CTCAccuracy: 0.0000	sec/iter: 0.5998
[1,0]<stderr>:INFO:absl:global_steps: 1101	learning_rate: 1.2310e-05	loss: 236.2757	Accuracy: 0.0331	CTCAccuracy: 0.0000	sec/iter: 0.5051
[1,0]<stderr>:INFO:absl:global_steps: 1111	learning_rate: 1.2421e-05	loss: 236.4797	Accuracy: 0.0301	CTCAccuracy: 0.0000	sec/iter: 0.5622
[1,0]<stderr>:INFO:absl:global_steps: 1121	learning_rate: 1.2533e-05	loss: 245.2983	Accuracy: 0.0354	CTCAccuracy: 0.0000	sec/iter: 0.5656
[1,0]<stderr>:INFO:absl:global_steps: 1131	learning_rate: 1.2645e-05	loss: 230.0583	Accuracy: 0.0352	CTCAccuracy: 0.0000	sec/iter: 0.5693
[1,0]<stderr>:INFO:absl:global_steps: 1141	learning_rate: 1.2757e-05	loss: 236.2606	Accuracy: 0.0260	CTCAccuracy: 0.0000	sec/iter: 0.5039
[1,0]<stderr>:INFO:absl:global_steps: 1151	learning_rate: 1.2869e-05	loss: 245.2229	Accuracy: 0.0245	CTCAccuracy: 0.0000	sec/iter: 0.5823
[1,0]<stderr>:INFO:absl:global_steps: 1161	learning_rate: 1.2980e-05	loss: 233.3398	Accuracy: 0.0274	CTCAccuracy: 0.0000	sec/iter: 0.5394
[1,0]<stderr>:INFO:absl:global_steps: 1171	learning_rate: 1.3092e-05	loss: 242.7553	Accuracy: 0.0243	CTCAccuracy: 0.0000	sec/iter: 0.5703
[1,0]<stderr>:INFO:absl:global_steps: 1181	learning_rate: 1.3204e-05	loss: 235.1504	Accuracy: 0.0312	CTCAccuracy: 0.0000	sec/iter: 0.6061
[1,0]<stderr>:INFO:absl:global_steps: 1191	learning_rate: 1.3316e-05	loss: 221.9061	Accuracy: 0.0326	CTCAccuracy: 0.0000	sec/iter: 0.5415
[1,0]<stderr>:INFO:absl:global_steps: 1201	learning_rate: 1.3428e-05	loss: 220.7072	Accuracy: 0.0327	CTCAccuracy: 0.0000	sec/iter: 0.5426
[1,0]<stderr>:INFO:absl:global_steps: 1211	learning_rate: 1.3539e-05	loss: 236.5180	Accuracy: 0.0275	CTCAccuracy: 0.0000	sec/iter: 0.5694
[1,0]<stderr>:INFO:absl:global_steps: 1221	learning_rate: 1.3651e-05	loss: 234.4883	Accuracy: 0.0267	CTCAccuracy: 0.0000	sec/iter: 0.5427
[1,0]<stderr>:INFO:absl:global_steps: 1231	learning_rate: 1.3763e-05	loss: 247.2308	Accuracy: 0.0324	CTCAccuracy: 0.0000	sec/iter: 0.5449
[1,0]<stderr>:INFO:absl:global_steps: 1241	learning_rate: 1.3875e-05	loss: 253.3877	Accuracy: 0.0353	CTCAccuracy: 0.0000	sec/iter: 0.5890
[1,0]<stderr>:INFO:absl:global_steps: 1251	learning_rate: 1.3987e-05	loss: 220.8293	Accuracy: 0.0337	CTCAccuracy: 0.0000	sec/iter: 0.5540
[1,0]<stderr>:INFO:absl:global_steps: 1261	learning_rate: 1.4098e-05	loss: 243.1808	Accuracy: 0.0347	CTCAccuracy: 0.0000	sec/iter: 0.5845
[1,0]<stderr>:INFO:absl:global_steps: 1271	learning_rate: 1.4210e-05	loss: 225.9874	Accuracy: 0.0327	CTCAccuracy: 0.0000	sec/iter: 0.5983
[1,0]<stderr>:INFO:absl:global_steps: 1281	learning_rate: 1.4322e-05	loss: 234.5820	Accuracy: 0.0329	CTCAccuracy: 0.0000	sec/iter: 0.5592
[1,0]<stderr>:INFO:absl:global_steps: 1291	learning_rate: 1.4434e-05	loss: 241.7748	Accuracy: 0.0373	CTCAccuracy: 0.0000	sec/iter: 0.5632
[1,0]<stderr>:INFO:absl:global_steps: 1301	learning_rate: 1.4546e-05	loss: 223.7199	Accuracy: 0.0246	CTCAccuracy: 0.0000	sec/iter: 0.5938
[1,0]<stderr>:INFO:absl:global_steps: 1311	learning_rate: 1.4657e-05	loss: 255.2383	Accuracy: 0.0249	CTCAccuracy: 0.0000	sec/iter: 0.5572
[1,0]<stderr>:INFO:absl:global_steps: 1321	learning_rate: 1.4769e-05	loss: 254.4894	Accuracy: 0.0287	CTCAccuracy: 0.0000	sec/iter: 0.6376
[1,0]<stderr>:INFO:absl:global_steps: 1331	learning_rate: 1.4881e-05	loss: 236.5377	Accuracy: 0.0249	CTCAccuracy: 0.0000	sec/iter: 0.5524
[1,0]<stderr>:INFO:absl:global_steps: 1341	learning_rate: 1.4993e-05	loss: 237.8082	Accuracy: 0.0373	CTCAccuracy: 0.0000	sec/iter: 0.5912
[1,0]<stderr>:INFO:absl:global_steps: 1351	learning_rate: 1.5105e-05	loss: 229.2131	Accuracy: 0.0322	CTCAccuracy: 0.0000	sec/iter: 0.5549
[1,0]<stderr>:INFO:absl:global_steps: 1361	learning_rate: 1.5216e-05	loss: 226.1879	Accuracy: 0.0264	CTCAccuracy: 0.0000	sec/iter: 0.6164
[1,0]<stderr>:INFO:absl:global_steps: 1371	learning_rate: 1.5328e-05	loss: 255.3978	Accuracy: 0.0282	CTCAccuracy: 0.0000	sec/iter: 0.5688
[1,0]<stderr>:INFO:absl:global_steps: 1381	learning_rate: 1.5440e-05	loss: 238.6316	Accuracy: 0.0225	CTCAccuracy: 0.0000	sec/iter: 0.5550
[1,0]<stderr>:INFO:absl:global_steps: 1391	learning_rate: 1.5552e-05	loss: 234.9055	Accuracy: 0.0355	CTCAccuracy: 0.0000	sec/iter: 0.6004
[1,0]<stderr>:INFO:absl:global_steps: 1401	learning_rate: 1.5664e-05	loss: 225.1973	Accuracy: 0.0296	CTCAccuracy: 0.0000	sec/iter: 0.5521
[1,0]<stderr>:INFO:absl:global_steps: 1411	learning_rate: 1.5775e-05	loss: 242.2635	Accuracy: 0.0376	CTCAccuracy: 0.0000	sec/iter: 0.6277
[1,0]<stderr>:INFO:absl:global_steps: 1421	learning_rate: 1.5887e-05	loss: 247.1067	Accuracy: 0.0322	CTCAccuracy: 0.0000	sec/iter: 0.5928
[1,0]<stderr>:INFO:absl:global_steps: 1431	learning_rate: 1.5999e-05	loss: 235.6257	Accuracy: 0.0301	CTCAccuracy: 0.0000	sec/iter: 0.5526
[1,0]<stderr>:INFO:absl:global_steps: 1441	learning_rate: 1.6111e-05	loss: 226.3478	Accuracy: 0.0397	CTCAccuracy: 0.0000	sec/iter: 0.6159
[1,0]<stderr>:INFO:absl:global_steps: 1451	learning_rate: 1.6223e-05	loss: 244.9565	Accuracy: 0.0381	CTCAccuracy: 0.0000	sec/iter: 0.5714
[1,0]<stderr>:INFO:absl:global_steps: 1461	learning_rate: 1.6334e-05	loss: 228.0538	Accuracy: 0.0368	CTCAccuracy: 0.0000	sec/iter: 0.6204
[1,0]<stderr>:INFO:absl:global_steps: 1471	learning_rate: 1.6446e-05	loss: 243.5655	Accuracy: 0.0378	CTCAccuracy: 0.0000	sec/iter: 0.5795
[1,0]<stderr>:INFO:absl:global_steps: 1481	learning_rate: 1.6558e-05	loss: 256.4365	Accuracy: 0.0410	CTCAccuracy: 0.0000	sec/iter: 0.6521
[1,0]<stderr>:INFO:absl:global_steps: 1491	learning_rate: 1.6670e-05	loss: 268.3033	Accuracy: 0.0320	CTCAccuracy: 0.0000	sec/iter: 0.5726
[1,0]<stderr>:INFO:absl:global_steps: 1501	learning_rate: 1.6782e-05	loss: 243.0678	Accuracy: 0.0439	CTCAccuracy: 0.0000	sec/iter: 0.6240
[1,0]<stderr>:INFO:absl:global_steps: 1511	learning_rate: 1.6893e-05	loss: 232.9296	Accuracy: 0.0390	CTCAccuracy: 0.0000	sec/iter: 0.6054
[1,0]<stderr>:INFO:absl:global_steps: 1521	learning_rate: 1.7005e-05	loss: 243.7434	Accuracy: 0.0395	CTCAccuracy: 0.0000	sec/iter: 0.6951
[1,0]<stderr>:INFO:absl:global_steps: 1531	learning_rate: 1.7117e-05	loss: 231.4138	Accuracy: 0.0372	CTCAccuracy: 0.0000	sec/iter: 0.6041
[1,0]<stderr>:INFO:absl:global_steps: 1541	learning_rate: 1.7229e-05	loss: 234.5755	Accuracy: 0.0496	CTCAccuracy: 0.0000	sec/iter: 0.6251
[1,0]<stderr>:INFO:absl:global_steps: 1551	learning_rate: 1.7341e-05	loss: 248.8730	Accuracy: 0.0409	CTCAccuracy: 0.0000	sec/iter: 0.6580
[1,0]<stderr>:INFO:absl:global_steps: 1561	learning_rate: 1.7453e-05	loss: 237.1079	Accuracy: 0.0335	CTCAccuracy: 0.0000	sec/iter: 0.5819
[1,0]<stderr>:INFO:absl:global_steps: 1571	learning_rate: 1.7564e-05	loss: 251.9233	Accuracy: 0.0462	CTCAccuracy: 0.0000	sec/iter: 0.6349
[1,0]<stderr>:INFO:absl:global_steps: 1581	learning_rate: 1.7676e-05	loss: 256.6668	Accuracy: 0.0393	CTCAccuracy: 0.0000	sec/iter: 0.6254
[1,0]<stderr>:INFO:absl:global_steps: 1591	learning_rate: 1.7788e-05	loss: 251.3112	Accuracy: 0.0437	CTCAccuracy: 0.0000	sec/iter: 0.6800
[1,0]<stderr>:INFO:absl:global_steps: 1601	learning_rate: 1.7900e-05	loss: 241.2487	Accuracy: 0.0427	CTCAccuracy: 0.0000	sec/iter: 0.6096
[1,0]<stderr>:INFO:absl:global_steps: 1611	learning_rate: 1.8012e-05	loss: 233.5768	Accuracy: 0.0404	CTCAccuracy: 0.0000	sec/iter: 0.6431
[1,0]<stderr>:INFO:absl:global_steps: 1621	learning_rate: 1.8123e-05	loss: 235.9293	Accuracy: 0.0439	CTCAccuracy: 0.0000	sec/iter: 0.6889
[1,0]<stderr>:INFO:absl:global_steps: 1631	learning_rate: 1.8235e-05	loss: 237.0631	Accuracy: 0.0434	CTCAccuracy: 0.0000	sec/iter: 0.6866
[1,0]<stderr>:INFO:absl:global_steps: 1641	learning_rate: 1.8347e-05	loss: 245.6124	Accuracy: 0.0419	CTCAccuracy: 0.0000	sec/iter: 0.6424
[1,0]<stderr>:INFO:absl:global_steps: 1651	learning_rate: 1.8459e-05	loss: 235.4527	Accuracy: 0.0449	CTCAccuracy: 0.0000	sec/iter: 0.6889
[1,0]<stderr>:INFO:absl:global_steps: 1661	learning_rate: 1.8571e-05	loss: 252.5938	Accuracy: 0.0556	CTCAccuracy: 0.0000	sec/iter: 0.6867
[1,0]<stderr>:INFO:absl:global_steps: 1671	learning_rate: 1.8682e-05	loss: 239.6106	Accuracy: 0.0407	CTCAccuracy: 0.0000	sec/iter: 0.6893
[1,0]<stderr>:INFO:absl:global_steps: 1681	learning_rate: 1.8794e-05	loss: 239.4834	Accuracy: 0.0465	CTCAccuracy: 0.0000	sec/iter: 0.6564
[1,0]<stderr>:INFO:absl:global_steps: 1691	learning_rate: 1.8906e-05	loss: 238.8901	Accuracy: 0.0504	CTCAccuracy: 0.0000	sec/iter: 0.6975
[1,0]<stderr>:INFO:absl:global_steps: 1701	learning_rate: 1.9018e-05	loss: 233.8695	Accuracy: 0.0518	CTCAccuracy: 0.0000	sec/iter: 0.7393
[1,0]<stderr>:INFO:absl:global_steps: 1711	learning_rate: 1.9130e-05	loss: 234.0083	Accuracy: 0.0430	CTCAccuracy: 0.0000	sec/iter: 0.7022
[1,0]<stderr>:INFO:absl:global_steps: 1721	learning_rate: 1.9241e-05	loss: 242.1010	Accuracy: 0.0457	CTCAccuracy: 0.0000	sec/iter: 0.7448
[1,0]<stderr>:INFO:absl:global_steps: 1731	learning_rate: 1.9353e-05	loss: 228.6959	Accuracy: 0.0386	CTCAccuracy: 0.0000	sec/iter: 0.7147
[1,0]<stderr>:INFO:absl:global_steps: 1741	learning_rate: 1.9465e-05	loss: 234.0560	Accuracy: 0.0478	CTCAccuracy: 0.0000	sec/iter: 0.7112
[1,0]<stderr>:INFO:absl:global_steps: 1751	learning_rate: 1.9577e-05	loss: 252.6327	Accuracy: 0.0582	CTCAccuracy: 0.0000	sec/iter: 0.8293
[1,0]<stderr>:INFO:absl:global_steps: 1761	learning_rate: 1.9689e-05	loss: 243.9297	Accuracy: 0.0575	CTCAccuracy: 0.0000	sec/iter: 0.8199
[1,0]<stderr>:INFO:absl:global_steps: 1771	learning_rate: 1.9800e-05	loss: 248.4568	Accuracy: 0.0543	CTCAccuracy: 0.0000	sec/iter: 0.8269
[1,0]<stderr>:INFO:absl:global_steps: 1781	learning_rate: 1.9912e-05	loss: 262.8458	Accuracy: 0.0655	CTCAccuracy: 0.0000	sec/iter: 0.8590
[1,0]<stderr>:INFO:absl:global_steps: 1791	learning_rate: 2.0024e-05	loss: 243.6844	Accuracy: 0.0527	CTCAccuracy: 0.0000	sec/iter: 0.7873
[1,0]<stderr>:INFO:absl:global_steps: 1801	learning_rate: 2.0136e-05	loss: 240.0034	Accuracy: 0.0657	CTCAccuracy: 0.0000	sec/iter: 0.8941
[1,0]<stderr>:INFO:absl:global_steps: 1811	learning_rate: 2.0248e-05	loss: 250.5758	Accuracy: 0.0626	CTCAccuracy: 0.0000	sec/iter: 0.8443
[1,0]<stderr>:INFO:absl:global_steps: 1821	learning_rate: 2.0359e-05	loss: 230.8384	Accuracy: 0.0601	CTCAccuracy: 0.0000	sec/iter: 0.8987
[1,0]<stderr>:INFO:absl:global_steps: 1831	learning_rate: 2.0471e-05	loss: 261.6784	Accuracy: 0.0739	CTCAccuracy: 0.0000	sec/iter: 0.9826
[1,0]<stderr>:INFO:absl:global_steps: 1841	learning_rate: 2.0583e-05	loss: 258.0678	Accuracy: 0.0626	CTCAccuracy: 0.0000	sec/iter: 1.0701
[1,0]<stderr>:INFO:absl:global_steps: 1851	learning_rate: 2.0695e-05	loss: 261.2863	Accuracy: 0.0684	CTCAccuracy: 0.0000	sec/iter: 1.0816
[1,0]<stderr>:INFO:absl:global_steps: 1861	learning_rate: 2.0807e-05	loss: 248.6553	Accuracy: 0.0807	CTCAccuracy: 0.0000	sec/iter: 1.1461
[1,0]<stderr>:INFO:absl:global_steps: 1871	learning_rate: 2.0918e-05	loss: 257.8753	Accuracy: 0.0702	CTCAccuracy: 0.0000	sec/iter: 1.2104
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,1]<stdout>:before filter by unk:893
[1,1]<stdout>:after filter by unk:893
[1,1]<stdout>:afiter filter by input length:893
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 0
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:after filter by output length:893
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,0]<stdout>:before filter by unk:893
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stdout>:after filter by unk:893
[1,0]<stdout>:afiter filter by input length:893
[1,0]<stdout>:after filter by output length:893
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:loss: 160.1014	Accuracy: -0.1638	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 198.9714	Accuracy: -0.1302	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 213.4318	Accuracy: -0.0762	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 216.4754	Accuracy: -0.0441	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 215.9704	Accuracy: -0.0250	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 222.9266	Accuracy: -0.0114	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 229.1015	Accuracy: -0.0025	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 223.2651	Accuracy: 0.0047	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 237.7361	Accuracy: 0.0091	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 240.0748	Accuracy: 0.0139	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 230.7661	Accuracy: 0.0211	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:loss: 229.0808	Accuracy: 0.0249	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:epoch: 0	loss: 222.1231	Accuracy: 0.0249	CTCAccuracy: 0.0000	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/mtl_transformer_ctc/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 1
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:global_steps: 1872	learning_rate: 2.0930e-05	loss: 220.9477	Accuracy: 0.0338	CTCAccuracy: 0.0000	sec/iter: 66.0952
[1,0]<stderr>:INFO:absl:global_steps: 1882	learning_rate: 2.1041e-05	loss: 224.8923	Accuracy: 0.0384	CTCAccuracy: 0.0000	sec/iter: 0.5141
[1,0]<stderr>:INFO:absl:global_steps: 1892	learning_rate: 2.1153e-05	loss: 230.2927	Accuracy: 0.0521	CTCAccuracy: 0.0000	sec/iter: 0.5373
[1,0]<stderr>:INFO:absl:global_steps: 1902	learning_rate: 2.1265e-05	loss: 203.6085	Accuracy: 0.0652	CTCAccuracy: 0.0000	sec/iter: 0.6719
[1,0]<stderr>:INFO:absl:global_steps: 1912	learning_rate: 2.1377e-05	loss: 219.1134	Accuracy: 0.0603	CTCAccuracy: 0.0000	sec/iter: 0.5006
[1,0]<stderr>:INFO:absl:global_steps: 1922	learning_rate: 2.1489e-05	loss: 213.7806	Accuracy: 0.0634	CTCAccuracy: 0.0000	sec/iter: 0.5229
[1,0]<stderr>:INFO:absl:global_steps: 1932	learning_rate: 2.1600e-05	loss: 212.1633	Accuracy: 0.0524	CTCAccuracy: 0.0000	sec/iter: 0.4872
[1,0]<stderr>:INFO:absl:global_steps: 1942	learning_rate: 2.1712e-05	loss: 218.6107	Accuracy: 0.0624	CTCAccuracy: 0.0000	sec/iter: 0.5124
[1,0]<stderr>:INFO:absl:global_steps: 1952	learning_rate: 2.1824e-05	loss: 236.7016	Accuracy: 0.0557	CTCAccuracy: 0.0000	sec/iter: 0.5186
[1,0]<stderr>:INFO:absl:global_steps: 1962	learning_rate: 2.1936e-05	loss: 236.7017	Accuracy: 0.0702	CTCAccuracy: 0.0000	sec/iter: 0.5281
[1,0]<stderr>:INFO:absl:global_steps: 1972	learning_rate: 2.2048e-05	loss: 228.0292	Accuracy: 0.0616	CTCAccuracy: 0.0000	sec/iter: 0.5016
[1,0]<stderr>:INFO:absl:global_steps: 1982	learning_rate: 2.2159e-05	loss: 213.3540	Accuracy: 0.0705	CTCAccuracy: 0.0000	sec/iter: 0.5022
[1,0]<stderr>:INFO:absl:global_steps: 1992	learning_rate: 2.2271e-05	loss: 200.2540	Accuracy: 0.0694	CTCAccuracy: 0.0000	sec/iter: 0.5071
[1,0]<stderr>:INFO:absl:global_steps: 2002	learning_rate: 2.2383e-05	loss: 226.7614	Accuracy: 0.0724	CTCAccuracy: 0.0000	sec/iter: 0.4889
[1,0]<stderr>:INFO:absl:global_steps: 2012	learning_rate: 2.2495e-05	loss: 223.2401	Accuracy: 0.0649	CTCAccuracy: 0.0000	sec/iter: 0.5177
[1,0]<stderr>:INFO:absl:global_steps: 2022	learning_rate: 2.2607e-05	loss: 220.1055	Accuracy: 0.0726	CTCAccuracy: 0.0000	sec/iter: 0.5178
[1,0]<stderr>:INFO:absl:global_steps: 2032	learning_rate: 2.2718e-05	loss: 211.9235	Accuracy: 0.0633	CTCAccuracy: 0.0000	sec/iter: 0.5067
[1,0]<stderr>:INFO:absl:global_steps: 2042	learning_rate: 2.2830e-05	loss: 217.6621	Accuracy: 0.0699	CTCAccuracy: 0.0000	sec/iter: 0.4962
[1,0]<stderr>:INFO:absl:global_steps: 2052	learning_rate: 2.2942e-05	loss: 196.7554	Accuracy: 0.0660	CTCAccuracy: 0.0000	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 2062	learning_rate: 2.3054e-05	loss: 215.9901	Accuracy: 0.0698	CTCAccuracy: 0.0000	sec/iter: 0.5187
[1,0]<stderr>:INFO:absl:global_steps: 2072	learning_rate: 2.3166e-05	loss: 223.7035	Accuracy: 0.0812	CTCAccuracy: 0.0000	sec/iter: 0.5168
[1,0]<stderr>:INFO:absl:global_steps: 2082	learning_rate: 2.3277e-05	loss: 237.2592	Accuracy: 0.0725	CTCAccuracy: 0.0000	sec/iter: 0.5019
[1,0]<stderr>:INFO:absl:global_steps: 2092	learning_rate: 2.3389e-05	loss: 228.3770	Accuracy: 0.0858	CTCAccuracy: 0.0000	sec/iter: 0.5084
[1,0]<stderr>:INFO:absl:global_steps: 2102	learning_rate: 2.3501e-05	loss: 208.6603	Accuracy: 0.0685	CTCAccuracy: 0.0000	sec/iter: 0.5123
[1,0]<stderr>:INFO:absl:global_steps: 2112	learning_rate: 2.3613e-05	loss: 207.9108	Accuracy: 0.0871	CTCAccuracy: 0.0000	sec/iter: 0.5078
[1,0]<stderr>:INFO:absl:global_steps: 2122	learning_rate: 2.3725e-05	loss: 204.3659	Accuracy: 0.0747	CTCAccuracy: 0.0000	sec/iter: 0.5118
[1,0]<stderr>:INFO:absl:global_steps: 2132	learning_rate: 2.3836e-05	loss: 209.9311	Accuracy: 0.0849	CTCAccuracy: 0.0000	sec/iter: 0.5255
[1,0]<stderr>:INFO:absl:global_steps: 2142	learning_rate: 2.3948e-05	loss: 208.5077	Accuracy: 0.0993	CTCAccuracy: 0.0000	sec/iter: 0.5303
[1,0]<stderr>:INFO:absl:global_steps: 2152	learning_rate: 2.4060e-05	loss: 241.8005	Accuracy: 0.0922	CTCAccuracy: 0.0000	sec/iter: 0.5141
[1,0]<stderr>:INFO:absl:global_steps: 2162	learning_rate: 2.4172e-05	loss: 221.2752	Accuracy: 0.0775	CTCAccuracy: 0.0000	sec/iter: 0.5654
[1,0]<stderr>:INFO:absl:global_steps: 2172	learning_rate: 2.4284e-05	loss: 227.5979	Accuracy: 0.0952	CTCAccuracy: 0.0000	sec/iter: 0.5422
[1,0]<stderr>:INFO:absl:global_steps: 2182	learning_rate: 2.4396e-05	loss: 193.5612	Accuracy: 0.0802	CTCAccuracy: 0.0000	sec/iter: 0.4832
[1,0]<stderr>:INFO:absl:global_steps: 2192	learning_rate: 2.4507e-05	loss: 211.0316	Accuracy: 0.0849	CTCAccuracy: 0.0000	sec/iter: 0.5181
[1,0]<stderr>:INFO:absl:global_steps: 2202	learning_rate: 2.4619e-05	loss: 213.6798	Accuracy: 0.0803	CTCAccuracy: 0.0000	sec/iter: 0.5289
[1,0]<stderr>:INFO:absl:global_steps: 2212	learning_rate: 2.4731e-05	loss: 185.1448	Accuracy: 0.0859	CTCAccuracy: 0.0000	sec/iter: 0.5524
[1,0]<stderr>:INFO:absl:global_steps: 2222	learning_rate: 2.4843e-05	loss: 222.6764	Accuracy: 0.0950	CTCAccuracy: 0.0000	sec/iter: 0.4987
[1,0]<stderr>:INFO:absl:global_steps: 2232	learning_rate: 2.4955e-05	loss: 209.9887	Accuracy: 0.1090	CTCAccuracy: 0.0000	sec/iter: 0.5234
[1,0]<stderr>:INFO:absl:global_steps: 2242	learning_rate: 2.5066e-05	loss: 191.9495	Accuracy: 0.0805	CTCAccuracy: 0.0000	sec/iter: 0.4962
[1,0]<stderr>:INFO:absl:global_steps: 2252	learning_rate: 2.5178e-05	loss: 206.5573	Accuracy: 0.0892	CTCAccuracy: 0.0000	sec/iter: 0.5229
[1,0]<stderr>:INFO:absl:global_steps: 2262	learning_rate: 2.5290e-05	loss: 176.7463	Accuracy: 0.1058	CTCAccuracy: 0.0000	sec/iter: 0.5136
[1,0]<stderr>:INFO:absl:global_steps: 2272	learning_rate: 2.5402e-05	loss: 215.9726	Accuracy: 0.0888	CTCAccuracy: 0.0000	sec/iter: 0.5261
[1,0]<stderr>:INFO:absl:global_steps: 2282	learning_rate: 2.5514e-05	loss: 188.4945	Accuracy: 0.0963	CTCAccuracy: 0.0004	sec/iter: 0.4996
[1,0]<stderr>:INFO:absl:global_steps: 2292	learning_rate: 2.5625e-05	loss: 206.9203	Accuracy: 0.0994	CTCAccuracy: 0.0015	sec/iter: 0.5167
[1,0]<stderr>:INFO:absl:global_steps: 2302	learning_rate: 2.5737e-05	loss: 214.5447	Accuracy: 0.0927	CTCAccuracy: 0.0019	sec/iter: 0.4788
[1,0]<stderr>:INFO:absl:global_steps: 2312	learning_rate: 2.5849e-05	loss: 222.0219	Accuracy: 0.1047	CTCAccuracy: 0.0035	sec/iter: 0.5248
[1,0]<stderr>:INFO:absl:global_steps: 2322	learning_rate: 2.5961e-05	loss: 203.4364	Accuracy: 0.1017	CTCAccuracy: 0.0027	sec/iter: 0.5109
[1,0]<stderr>:INFO:absl:global_steps: 2332	learning_rate: 2.6073e-05	loss: 216.0083	Accuracy: 0.1043	CTCAccuracy: 0.0028	sec/iter: 0.5048
[1,0]<stderr>:INFO:absl:global_steps: 2342	learning_rate: 2.6184e-05	loss: 224.0633	Accuracy: 0.0981	CTCAccuracy: 0.0064	sec/iter: 0.5356
[1,0]<stderr>:INFO:absl:global_steps: 2352	learning_rate: 2.6296e-05	loss: 214.7505	Accuracy: 0.1192	CTCAccuracy: 0.0093	sec/iter: 0.5184
[1,0]<stderr>:INFO:absl:global_steps: 2362	learning_rate: 2.6408e-05	loss: 202.2407	Accuracy: 0.1132	CTCAccuracy: 0.0095	sec/iter: 0.5367
[1,0]<stderr>:INFO:absl:global_steps: 2372	learning_rate: 2.6520e-05	loss: 202.4236	Accuracy: 0.1157	CTCAccuracy: 0.0100	sec/iter: 0.5457
[1,0]<stderr>:INFO:absl:global_steps: 2382	learning_rate: 2.6632e-05	loss: 211.3483	Accuracy: 0.1035	CTCAccuracy: 0.0176	sec/iter: 0.5179
[1,0]<stderr>:INFO:absl:global_steps: 2392	learning_rate: 2.6743e-05	loss: 205.5777	Accuracy: 0.1053	CTCAccuracy: 0.0145	sec/iter: 0.5230
[1,0]<stderr>:INFO:absl:global_steps: 2402	learning_rate: 2.6855e-05	loss: 178.7106	Accuracy: 0.0975	CTCAccuracy: 0.0189	sec/iter: 0.5094
[1,0]<stderr>:INFO:absl:global_steps: 2412	learning_rate: 2.6967e-05	loss: 251.3557	Accuracy: 0.1304	CTCAccuracy: 0.0160	sec/iter: 0.5294
[1,0]<stderr>:INFO:absl:global_steps: 2422	learning_rate: 2.7079e-05	loss: 197.2500	Accuracy: 0.1160	CTCAccuracy: 0.0174	sec/iter: 0.4883
[1,0]<stderr>:INFO:absl:global_steps: 2432	learning_rate: 2.7191e-05	loss: 201.6909	Accuracy: 0.1243	CTCAccuracy: 0.0214	sec/iter: 0.5232
[1,0]<stderr>:INFO:absl:global_steps: 2442	learning_rate: 2.7302e-05	loss: 219.6146	Accuracy: 0.1139	CTCAccuracy: 0.0209	sec/iter: 0.5313
[1,0]<stderr>:INFO:absl:global_steps: 2452	learning_rate: 2.7414e-05	loss: 210.6917	Accuracy: 0.1069	CTCAccuracy: 0.0224	sec/iter: 0.5297
[1,0]<stderr>:INFO:absl:global_steps: 2462	learning_rate: 2.7526e-05	loss: 199.5819	Accuracy: 0.1171	CTCAccuracy: 0.0258	sec/iter: 0.5058
[1,0]<stderr>:INFO:absl:global_steps: 2472	learning_rate: 2.7638e-05	loss: 203.2135	Accuracy: 0.1358	CTCAccuracy: 0.0217	sec/iter: 0.5170
[1,0]<stderr>:INFO:absl:global_steps: 2482	learning_rate: 2.7750e-05	loss: 221.2340	Accuracy: 0.1212	CTCAccuracy: 0.0264	sec/iter: 0.5009
[1,0]<stderr>:INFO:absl:global_steps: 2492	learning_rate: 2.7861e-05	loss: 200.6224	Accuracy: 0.1242	CTCAccuracy: 0.0252	sec/iter: 0.5010
[1,0]<stderr>:INFO:absl:global_steps: 2502	learning_rate: 2.7973e-05	loss: 200.0778	Accuracy: 0.1248	CTCAccuracy: 0.0267	sec/iter: 0.5302
[1,0]<stderr>:INFO:absl:global_steps: 2512	learning_rate: 2.8085e-05	loss: 222.4271	Accuracy: 0.1395	CTCAccuracy: 0.0302	sec/iter: 0.5033
[1,0]<stderr>:INFO:absl:global_steps: 2522	learning_rate: 2.8197e-05	loss: 187.1288	Accuracy: 0.1371	CTCAccuracy: 0.0345	sec/iter: 0.5138
[1,0]<stderr>:INFO:absl:global_steps: 2532	learning_rate: 2.8309e-05	loss: 210.6801	Accuracy: 0.1250	CTCAccuracy: 0.0334	sec/iter: 0.5309
[1,0]<stderr>:INFO:absl:global_steps: 2542	learning_rate: 2.8420e-05	loss: 206.6094	Accuracy: 0.1373	CTCAccuracy: 0.0366	sec/iter: 0.5176
[1,0]<stderr>:INFO:absl:global_steps: 2552	learning_rate: 2.8532e-05	loss: 231.3967	Accuracy: 0.1410	CTCAccuracy: 0.0402	sec/iter: 0.5295
[1,0]<stderr>:INFO:absl:global_steps: 2562	learning_rate: 2.8644e-05	loss: 191.0818	Accuracy: 0.1386	CTCAccuracy: 0.0330	sec/iter: 0.4963
[1,0]<stderr>:INFO:absl:global_steps: 2572	learning_rate: 2.8756e-05	loss: 203.6715	Accuracy: 0.1307	CTCAccuracy: 0.0356	sec/iter: 0.4897
[1,0]<stderr>:INFO:absl:global_steps: 2582	learning_rate: 2.8868e-05	loss: 155.5527	Accuracy: 0.1095	CTCAccuracy: 0.0386	sec/iter: 0.4892
[1,0]<stderr>:INFO:absl:global_steps: 2592	learning_rate: 2.8979e-05	loss: 185.6594	Accuracy: 0.1363	CTCAccuracy: 0.0417	sec/iter: 0.5025
[1,0]<stderr>:INFO:absl:global_steps: 2602	learning_rate: 2.9091e-05	loss: 197.4785	Accuracy: 0.1405	CTCAccuracy: 0.0462	sec/iter: 0.4773
[1,0]<stderr>:INFO:absl:global_steps: 2612	learning_rate: 2.9203e-05	loss: 162.1462	Accuracy: 0.1718	CTCAccuracy: 0.0501	sec/iter: 0.5484
[1,0]<stderr>:INFO:absl:global_steps: 2622	learning_rate: 2.9315e-05	loss: 190.9265	Accuracy: 0.1246	CTCAccuracy: 0.0401	sec/iter: 0.5152
[1,0]<stderr>:INFO:absl:global_steps: 2632	learning_rate: 2.9427e-05	loss: 204.6503	Accuracy: 0.1441	CTCAccuracy: 0.0399	sec/iter: 0.5389
[1,0]<stderr>:INFO:absl:global_steps: 2642	learning_rate: 2.9538e-05	loss: 229.9904	Accuracy: 0.1486	CTCAccuracy: 0.0399	sec/iter: 0.5362
[1,0]<stderr>:INFO:absl:global_steps: 2652	learning_rate: 2.9650e-05	loss: 195.4038	Accuracy: 0.1338	CTCAccuracy: 0.0477	sec/iter: 0.5121
[1,0]<stderr>:INFO:absl:global_steps: 2662	learning_rate: 2.9762e-05	loss: 199.0373	Accuracy: 0.1532	CTCAccuracy: 0.0483	sec/iter: 0.4892
[1,0]<stderr>:INFO:absl:global_steps: 2672	learning_rate: 2.9874e-05	loss: 194.7556	Accuracy: 0.1463	CTCAccuracy: 0.0485	sec/iter: 0.5264
[1,0]<stderr>:INFO:absl:global_steps: 2682	learning_rate: 2.9986e-05	loss: 201.4649	Accuracy: 0.1572	CTCAccuracy: 0.0479	sec/iter: 0.4930
[1,0]<stderr>:INFO:absl:global_steps: 2692	learning_rate: 3.0097e-05	loss: 187.1717	Accuracy: 0.1372	CTCAccuracy: 0.0522	sec/iter: 0.5236
[1,0]<stderr>:INFO:absl:global_steps: 2702	learning_rate: 3.0209e-05	loss: 196.7782	Accuracy: 0.1384	CTCAccuracy: 0.0626	sec/iter: 0.5116
[1,0]<stderr>:INFO:absl:global_steps: 2712	learning_rate: 3.0321e-05	loss: 191.2981	Accuracy: 0.1460	CTCAccuracy: 0.0557	sec/iter: 0.5245
[1,0]<stderr>:INFO:absl:global_steps: 2722	learning_rate: 3.0433e-05	loss: 180.7610	Accuracy: 0.1523	CTCAccuracy: 0.0565	sec/iter: 0.5264
[1,0]<stderr>:INFO:absl:global_steps: 2732	learning_rate: 3.0545e-05	loss: 192.2156	Accuracy: 0.1481	CTCAccuracy: 0.0522	sec/iter: 0.5371
[1,0]<stderr>:INFO:absl:global_steps: 2742	learning_rate: 3.0656e-05	loss: 187.3254	Accuracy: 0.1296	CTCAccuracy: 0.0563	sec/iter: 0.5177
[1,0]<stderr>:INFO:absl:global_steps: 2752	learning_rate: 3.0768e-05	loss: 194.1685	Accuracy: 0.1606	CTCAccuracy: 0.0529	sec/iter: 0.5139
[1,0]<stderr>:INFO:absl:global_steps: 2762	learning_rate: 3.0880e-05	loss: 137.9509	Accuracy: 0.1468	CTCAccuracy: 0.0576	sec/iter: 0.5451
[1,0]<stderr>:INFO:absl:global_steps: 2772	learning_rate: 3.0992e-05	loss: 185.7297	Accuracy: 0.1376	CTCAccuracy: 0.0654	sec/iter: 0.4942
[1,0]<stderr>:INFO:absl:global_steps: 2782	learning_rate: 3.1104e-05	loss: 198.5176	Accuracy: 0.1403	CTCAccuracy: 0.0678	sec/iter: 0.5176
[1,0]<stderr>:INFO:absl:global_steps: 2792	learning_rate: 3.1216e-05	loss: 191.1202	Accuracy: 0.1758	CTCAccuracy: 0.0580	sec/iter: 0.5229
[1,0]<stderr>:INFO:absl:global_steps: 2802	learning_rate: 3.1327e-05	loss: 185.4781	Accuracy: 0.1674	CTCAccuracy: 0.0633	sec/iter: 0.4946
[1,0]<stderr>:INFO:absl:global_steps: 2812	learning_rate: 3.1439e-05	loss: 188.0192	Accuracy: 0.1690	CTCAccuracy: 0.0723	sec/iter: 0.5167
[1,0]<stderr>:INFO:absl:global_steps: 2822	learning_rate: 3.1551e-05	loss: 182.9052	Accuracy: 0.1537	CTCAccuracy: 0.0660	sec/iter: 0.4736
[1,0]<stderr>:INFO:absl:global_steps: 2832	learning_rate: 3.1663e-05	loss: 183.3493	Accuracy: 0.1503	CTCAccuracy: 0.0645	sec/iter: 0.4941
[1,0]<stderr>:INFO:absl:global_steps: 2842	learning_rate: 3.1775e-05	loss: 198.0439	Accuracy: 0.1706	CTCAccuracy: 0.0652	sec/iter: 0.5180
[1,0]<stderr>:INFO:absl:global_steps: 2852	learning_rate: 3.1886e-05	loss: 182.6220	Accuracy: 0.1679	CTCAccuracy: 0.0759	sec/iter: 0.4951
[1,0]<stderr>:INFO:absl:global_steps: 2862	learning_rate: 3.1998e-05	loss: 171.5905	Accuracy: 0.1514	CTCAccuracy: 0.0627	sec/iter: 0.5028
[1,0]<stderr>:INFO:absl:global_steps: 2872	learning_rate: 3.2110e-05	loss: 195.7145	Accuracy: 0.1762	CTCAccuracy: 0.0732	sec/iter: 0.5149
[1,0]<stderr>:INFO:absl:global_steps: 2882	learning_rate: 3.2222e-05	loss: 196.2762	Accuracy: 0.1454	CTCAccuracy: 0.0756	sec/iter: 0.5135
[1,0]<stderr>:INFO:absl:global_steps: 2892	learning_rate: 3.2334e-05	loss: 183.6970	Accuracy: 0.1603	CTCAccuracy: 0.0738	sec/iter: 0.4897
[1,0]<stderr>:INFO:absl:global_steps: 2902	learning_rate: 3.2445e-05	loss: 165.5402	Accuracy: 0.1705	CTCAccuracy: 0.0699	sec/iter: 0.5313
[1,0]<stderr>:INFO:absl:global_steps: 2912	learning_rate: 3.2557e-05	loss: 171.2136	Accuracy: 0.1727	CTCAccuracy: 0.0839	sec/iter: 0.5094
[1,0]<stderr>:INFO:absl:global_steps: 2922	learning_rate: 3.2669e-05	loss: 187.6684	Accuracy: 0.1767	CTCAccuracy: 0.0761	sec/iter: 0.4997
[1,0]<stderr>:INFO:absl:global_steps: 2932	learning_rate: 3.2781e-05	loss: 186.2896	Accuracy: 0.1898	CTCAccuracy: 0.0798	sec/iter: 0.5498
[1,0]<stderr>:INFO:absl:global_steps: 2942	learning_rate: 3.2893e-05	loss: 188.8284	Accuracy: 0.1793	CTCAccuracy: 0.0809	sec/iter: 0.5281
[1,0]<stderr>:INFO:absl:global_steps: 2952	learning_rate: 3.3004e-05	loss: 181.9745	Accuracy: 0.1638	CTCAccuracy: 0.0768	sec/iter: 0.5142
[1,0]<stderr>:INFO:absl:global_steps: 2962	learning_rate: 3.3116e-05	loss: 182.0608	Accuracy: 0.1950	CTCAccuracy: 0.0749	sec/iter: 0.5012
[1,0]<stderr>:INFO:absl:global_steps: 2972	learning_rate: 3.3228e-05	loss: 178.2918	Accuracy: 0.1995	CTCAccuracy: 0.0853	sec/iter: 0.5268
[1,0]<stderr>:INFO:absl:global_steps: 2982	learning_rate: 3.3340e-05	loss: 199.1426	Accuracy: 0.1959	CTCAccuracy: 0.0856	sec/iter: 0.5175
[1,0]<stderr>:INFO:absl:global_steps: 2992	learning_rate: 3.3452e-05	loss: 185.7378	Accuracy: 0.2036	CTCAccuracy: 0.0889	sec/iter: 0.5204
[1,0]<stderr>:INFO:absl:global_steps: 3002	learning_rate: 3.3563e-05	loss: 150.3258	Accuracy: 0.2017	CTCAccuracy: 0.0939	sec/iter: 0.5411
[1,0]<stderr>:INFO:absl:global_steps: 3012	learning_rate: 3.3675e-05	loss: 181.0743	Accuracy: 0.1652	CTCAccuracy: 0.0879	sec/iter: 0.4956
[1,0]<stderr>:INFO:absl:global_steps: 3022	learning_rate: 3.3787e-05	loss: 168.2666	Accuracy: 0.1710	CTCAccuracy: 0.0898	sec/iter: 0.5160
[1,0]<stderr>:INFO:absl:global_steps: 3032	learning_rate: 3.3899e-05	loss: 173.9260	Accuracy: 0.1981	CTCAccuracy: 0.0941	sec/iter: 0.5102
[1,0]<stderr>:INFO:absl:global_steps: 3042	learning_rate: 3.4011e-05	loss: 178.9901	Accuracy: 0.1836	CTCAccuracy: 0.0759	sec/iter: 0.4828
[1,0]<stderr>:INFO:absl:global_steps: 3052	learning_rate: 3.4122e-05	loss: 157.4940	Accuracy: 0.1849	CTCAccuracy: 0.0893	sec/iter: 0.4743
[1,0]<stderr>:INFO:absl:global_steps: 3062	learning_rate: 3.4234e-05	loss: 185.1281	Accuracy: 0.1661	CTCAccuracy: 0.0888	sec/iter: 0.5097
[1,0]<stderr>:INFO:absl:global_steps: 3072	learning_rate: 3.4346e-05	loss: 159.9022	Accuracy: 0.1911	CTCAccuracy: 0.0950	sec/iter: 0.5075
[1,0]<stderr>:INFO:absl:global_steps: 3082	learning_rate: 3.4458e-05	loss: 176.3337	Accuracy: 0.1945	CTCAccuracy: 0.0967	sec/iter: 0.4756
[1,0]<stderr>:INFO:absl:global_steps: 3092	learning_rate: 3.4570e-05	loss: 146.3986	Accuracy: 0.1924	CTCAccuracy: 0.0972	sec/iter: 0.4724
[1,0]<stderr>:INFO:absl:global_steps: 3102	learning_rate: 3.4681e-05	loss: 155.8538	Accuracy: 0.2049	CTCAccuracy: 0.0950	sec/iter: 0.4883
[1,0]<stderr>:INFO:absl:global_steps: 3112	learning_rate: 3.4793e-05	loss: 161.7282	Accuracy: 0.1899	CTCAccuracy: 0.0942	sec/iter: 0.5278
[1,0]<stderr>:INFO:absl:global_steps: 3122	learning_rate: 3.4905e-05	loss: 160.5112	Accuracy: 0.2063	CTCAccuracy: 0.0919	sec/iter: 0.5465
[1,0]<stderr>:INFO:absl:global_steps: 3132	learning_rate: 3.5017e-05	loss: 190.1340	Accuracy: 0.2028	CTCAccuracy: 0.0997	sec/iter: 0.5460
[1,0]<stderr>:INFO:absl:global_steps: 3142	learning_rate: 3.5129e-05	loss: 160.6425	Accuracy: 0.1884	CTCAccuracy: 0.0971	sec/iter: 0.4841
[1,0]<stderr>:INFO:absl:global_steps: 3152	learning_rate: 3.5240e-05	loss: 178.9462	Accuracy: 0.2102	CTCAccuracy: 0.1021	sec/iter: 0.5007
[1,0]<stderr>:INFO:absl:global_steps: 3162	learning_rate: 3.5352e-05	loss: 162.9329	Accuracy: 0.2114	CTCAccuracy: 0.0996	sec/iter: 0.5404
[1,0]<stderr>:INFO:absl:global_steps: 3172	learning_rate: 3.5464e-05	loss: 163.5896	Accuracy: 0.2155	CTCAccuracy: 0.1017	sec/iter: 0.5284
[1,0]<stderr>:INFO:absl:global_steps: 3182	learning_rate: 3.5576e-05	loss: 165.6703	Accuracy: 0.2193	CTCAccuracy: 0.0949	sec/iter: 0.5291
[1,0]<stderr>:INFO:absl:global_steps: 3192	learning_rate: 3.5688e-05	loss: 173.5873	Accuracy: 0.2214	CTCAccuracy: 0.0988	sec/iter: 0.5101
[1,0]<stderr>:INFO:absl:global_steps: 3202	learning_rate: 3.5799e-05	loss: 161.5460	Accuracy: 0.2152	CTCAccuracy: 0.1058	sec/iter: 0.5016
[1,0]<stderr>:INFO:absl:global_steps: 3212	learning_rate: 3.5911e-05	loss: 169.0766	Accuracy: 0.1877	CTCAccuracy: 0.1031	sec/iter: 0.5334
[1,0]<stderr>:INFO:absl:global_steps: 3222	learning_rate: 3.6023e-05	loss: 157.1616	Accuracy: 0.2300	CTCAccuracy: 0.0946	sec/iter: 0.4873
[1,0]<stderr>:INFO:absl:global_steps: 3232	learning_rate: 3.6135e-05	loss: 164.3186	Accuracy: 0.2198	CTCAccuracy: 0.0991	sec/iter: 0.5124
[1,0]<stderr>:INFO:absl:global_steps: 3242	learning_rate: 3.6247e-05	loss: 157.1775	Accuracy: 0.2341	CTCAccuracy: 0.1038	sec/iter: 0.5086
[1,0]<stderr>:INFO:absl:global_steps: 3252	learning_rate: 3.6358e-05	loss: 170.5222	Accuracy: 0.2202	CTCAccuracy: 0.1114	sec/iter: 0.4734
[1,0]<stderr>:INFO:absl:global_steps: 3262	learning_rate: 3.6470e-05	loss: 153.8534	Accuracy: 0.2049	CTCAccuracy: 0.1039	sec/iter: 0.5332
[1,0]<stderr>:INFO:absl:global_steps: 3272	learning_rate: 3.6582e-05	loss: 154.1566	Accuracy: 0.2081	CTCAccuracy: 0.1021	sec/iter: 0.4706
[1,0]<stderr>:INFO:absl:global_steps: 3282	learning_rate: 3.6694e-05	loss: 176.0593	Accuracy: 0.2330	CTCAccuracy: 0.1280	sec/iter: 0.4814
[1,0]<stderr>:INFO:absl:global_steps: 3292	learning_rate: 3.6806e-05	loss: 131.2148	Accuracy: 0.2371	CTCAccuracy: 0.1172	sec/iter: 0.5030
[1,0]<stderr>:INFO:absl:global_steps: 3302	learning_rate: 3.6917e-05	loss: 143.6461	Accuracy: 0.2276	CTCAccuracy: 0.1142	sec/iter: 0.5324
[1,0]<stderr>:INFO:absl:global_steps: 3312	learning_rate: 3.7029e-05	loss: 135.4046	Accuracy: 0.2076	CTCAccuracy: 0.0971	sec/iter: 0.4925
[1,0]<stderr>:INFO:absl:global_steps: 3322	learning_rate: 3.7141e-05	loss: 168.7331	Accuracy: 0.2426	CTCAccuracy: 0.1119	sec/iter: 0.5151
[1,0]<stderr>:INFO:absl:global_steps: 3332	learning_rate: 3.7253e-05	loss: 163.2872	Accuracy: 0.2574	CTCAccuracy: 0.1026	sec/iter: 0.5153
[1,0]<stderr>:INFO:absl:global_steps: 3342	learning_rate: 3.7365e-05	loss: 168.1546	Accuracy: 0.2259	CTCAccuracy: 0.1198	sec/iter: 0.5152
[1,0]<stderr>:INFO:absl:global_steps: 3352	learning_rate: 3.7476e-05	loss: 156.8849	Accuracy: 0.2372	CTCAccuracy: 0.1020	sec/iter: 0.5022
[1,0]<stderr>:INFO:absl:global_steps: 3362	learning_rate: 3.7588e-05	loss: 146.0330	Accuracy: 0.2215	CTCAccuracy: 0.1184	sec/iter: 0.4984
[1,0]<stderr>:INFO:absl:global_steps: 3372	learning_rate: 3.7700e-05	loss: 140.0961	Accuracy: 0.2236	CTCAccuracy: 0.1212	sec/iter: 0.4850
[1,0]<stderr>:INFO:absl:global_steps: 3382	learning_rate: 3.7812e-05	loss: 158.2572	Accuracy: 0.2411	CTCAccuracy: 0.1110	sec/iter: 0.4901
[1,0]<stderr>:INFO:absl:global_steps: 3392	learning_rate: 3.7924e-05	loss: 156.1621	Accuracy: 0.2340	CTCAccuracy: 0.1115	sec/iter: 0.4939
[1,0]<stderr>:INFO:absl:global_steps: 3402	learning_rate: 3.8036e-05	loss: 157.0611	Accuracy: 0.2456	CTCAccuracy: 0.1238	sec/iter: 0.4889
[1,0]<stderr>:INFO:absl:global_steps: 3412	learning_rate: 3.8147e-05	loss: 164.9370	Accuracy: 0.2208	CTCAccuracy: 0.1253	sec/iter: 0.5140
[1,0]<stderr>:INFO:absl:global_steps: 3422	learning_rate: 3.8259e-05	loss: 159.2752	Accuracy: 0.2419	CTCAccuracy: 0.1171	sec/iter: 0.4685
[1,0]<stderr>:INFO:absl:global_steps: 3432	learning_rate: 3.8371e-05	loss: 163.7039	Accuracy: 0.2739	CTCAccuracy: 0.1045	sec/iter: 0.4874
[1,0]<stderr>:INFO:absl:global_steps: 3442	learning_rate: 3.8483e-05	loss: 141.0573	Accuracy: 0.2410	CTCAccuracy: 0.1250	sec/iter: 0.4806
[1,0]<stderr>:INFO:absl:global_steps: 3452	learning_rate: 3.8595e-05	loss: 155.2927	Accuracy: 0.2520	CTCAccuracy: 0.1151	sec/iter: 0.5358
[1,0]<stderr>:INFO:absl:global_steps: 3462	learning_rate: 3.8706e-05	loss: 157.0276	Accuracy: 0.2297	CTCAccuracy: 0.1262	sec/iter: 0.5070
[1,0]<stderr>:INFO:absl:global_steps: 3472	learning_rate: 3.8818e-05	loss: 156.7075	Accuracy: 0.2621	CTCAccuracy: 0.1182	sec/iter: 0.5141
[1,0]<stderr>:INFO:absl:global_steps: 3482	learning_rate: 3.8930e-05	loss: 147.9864	Accuracy: 0.2603	CTCAccuracy: 0.1190	sec/iter: 0.5208
[1,0]<stderr>:INFO:absl:global_steps: 3492	learning_rate: 3.9042e-05	loss: 151.3907	Accuracy: 0.2396	CTCAccuracy: 0.1183	sec/iter: 0.4972
[1,0]<stderr>:INFO:absl:global_steps: 3502	learning_rate: 3.9154e-05	loss: 161.4901	Accuracy: 0.2453	CTCAccuracy: 0.1225	sec/iter: 0.5236
[1,0]<stderr>:INFO:absl:global_steps: 3512	learning_rate: 3.9265e-05	loss: 164.0286	Accuracy: 0.2432	CTCAccuracy: 0.1278	sec/iter: 0.4881
[1,0]<stderr>:INFO:absl:global_steps: 3522	learning_rate: 3.9377e-05	loss: 165.4756	Accuracy: 0.2943	CTCAccuracy: 0.1315	sec/iter: 0.5361
[1,0]<stderr>:INFO:absl:global_steps: 3532	learning_rate: 3.9489e-05	loss: 148.0261	Accuracy: 0.2753	CTCAccuracy: 0.1311	sec/iter: 0.4960
[1,0]<stderr>:INFO:absl:global_steps: 3542	learning_rate: 3.9601e-05	loss: 146.2114	Accuracy: 0.2456	CTCAccuracy: 0.1425	sec/iter: 0.5062
[1,0]<stderr>:INFO:absl:global_steps: 3552	learning_rate: 3.9713e-05	loss: 140.2585	Accuracy: 0.2718	CTCAccuracy: 0.1314	sec/iter: 0.5089
[1,0]<stderr>:INFO:absl:global_steps: 3562	learning_rate: 3.9824e-05	loss: 133.9342	Accuracy: 0.2718	CTCAccuracy: 0.1394	sec/iter: 0.4915
[1,0]<stderr>:INFO:absl:global_steps: 3572	learning_rate: 3.9936e-05	loss: 164.9926	Accuracy: 0.2469	CTCAccuracy: 0.1289	sec/iter: 0.5161
[1,0]<stderr>:INFO:absl:global_steps: 3582	learning_rate: 4.0048e-05	loss: 174.4803	Accuracy: 0.2543	CTCAccuracy: 0.1266	sec/iter: 0.4879
[1,0]<stderr>:INFO:absl:global_steps: 3592	learning_rate: 4.0160e-05	loss: 144.8828	Accuracy: 0.2568	CTCAccuracy: 0.1356	sec/iter: 0.4979
[1,0]<stderr>:INFO:absl:global_steps: 3602	learning_rate: 4.0272e-05	loss: 149.7460	Accuracy: 0.2713	CTCAccuracy: 0.1207	sec/iter: 0.4811
[1,0]<stderr>:INFO:absl:global_steps: 3612	learning_rate: 4.0383e-05	loss: 129.0918	Accuracy: 0.2834	CTCAccuracy: 0.1351	sec/iter: 0.5139
[1,0]<stderr>:INFO:absl:global_steps: 3622	learning_rate: 4.0495e-05	loss: 145.7905	Accuracy: 0.2561	CTCAccuracy: 0.1288	sec/iter: 0.5038
[1,0]<stderr>:INFO:absl:global_steps: 3632	learning_rate: 4.0607e-05	loss: 129.6169	Accuracy: 0.2810	CTCAccuracy: 0.1477	sec/iter: 0.4674
[1,0]<stderr>:INFO:absl:global_steps: 3642	learning_rate: 4.0719e-05	loss: 126.2148	Accuracy: 0.2707	CTCAccuracy: 0.1210	sec/iter: 0.4857
[1,0]<stderr>:INFO:absl:global_steps: 3652	learning_rate: 4.0831e-05	loss: 142.6204	Accuracy: 0.2569	CTCAccuracy: 0.1410	sec/iter: 0.5044
[1,0]<stderr>:INFO:absl:global_steps: 3662	learning_rate: 4.0942e-05	loss: 145.3462	Accuracy: 0.2609	CTCAccuracy: 0.1337	sec/iter: 0.5031
[1,0]<stderr>:INFO:absl:global_steps: 3672	learning_rate: 4.1054e-05	loss: 139.3558	Accuracy: 0.2769	CTCAccuracy: 0.1314	sec/iter: 0.5100
[1,0]<stderr>:INFO:absl:global_steps: 3682	learning_rate: 4.1166e-05	loss: 141.3438	Accuracy: 0.2794	CTCAccuracy: 0.1535	sec/iter: 0.5050
[1,0]<stderr>:INFO:absl:global_steps: 3692	learning_rate: 4.1278e-05	loss: 120.2864	Accuracy: 0.2678	CTCAccuracy: 0.1383	sec/iter: 0.4947
[1,0]<stderr>:INFO:absl:global_steps: 3702	learning_rate: 4.1390e-05	loss: 130.2971	Accuracy: 0.2741	CTCAccuracy: 0.1470	sec/iter: 0.5107
[1,0]<stderr>:INFO:absl:global_steps: 3712	learning_rate: 4.1501e-05	loss: 137.7590	Accuracy: 0.2802	CTCAccuracy: 0.1445	sec/iter: 0.5224
[1,0]<stderr>:INFO:absl:global_steps: 3722	learning_rate: 4.1613e-05	loss: 149.7298	Accuracy: 0.2720	CTCAccuracy: 0.1542	sec/iter: 0.5260
[1,0]<stderr>:INFO:absl:global_steps: 3732	learning_rate: 4.1725e-05	loss: 141.3852	Accuracy: 0.2815	CTCAccuracy: 0.1398	sec/iter: 0.4609
[1,0]<stderr>:INFO:absl:global_steps: 3742	learning_rate: 4.1837e-05	loss: 142.4189	Accuracy: 0.2783	CTCAccuracy: 0.1446	sec/iter: 0.5032
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 1
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,0]<stdout>:before filter by unk:893
[1,0]<stdout>:after filter by unk:893
[1,0]<stdout>:afiter filter by input length:893
[1,0]<stdout>:after filter by output length:893
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,1]<stdout>:before filter by unk:893
[1,1]<stdout>:after filter by unk:893
[1,1]<stdout>:afiter filter by input length:893
[1,1]<stdout>:after filter by output length:893
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:loss: 92.7564	Accuracy: 0.2655	CTCAccuracy: 0.1525	
[1,0]<stderr>:INFO:absl:loss: 116.4315	Accuracy: 0.2693	CTCAccuracy: 0.1708	
[1,0]<stderr>:INFO:absl:loss: 127.9051	Accuracy: 0.2751	CTCAccuracy: 0.1776	
[1,0]<stderr>:INFO:absl:loss: 128.8595	Accuracy: 0.2752	CTCAccuracy: 0.1711	
[1,0]<stderr>:INFO:absl:loss: 127.3169	Accuracy: 0.2796	CTCAccuracy: 0.1695	
[1,0]<stderr>:INFO:absl:loss: 132.1985	Accuracy: 0.2843	CTCAccuracy: 0.1662	
[1,0]<stderr>:INFO:absl:loss: 137.5543	Accuracy: 0.2882	CTCAccuracy: 0.1669	
[1,0]<stderr>:INFO:absl:loss: 135.9014	Accuracy: 0.2918	CTCAccuracy: 0.1640	
[1,0]<stderr>:INFO:absl:loss: 147.9614	Accuracy: 0.2926	CTCAccuracy: 0.1639	
[1,0]<stderr>:INFO:absl:loss: 150.5678	Accuracy: 0.2948	CTCAccuracy: 0.1624	
[1,0]<stderr>:INFO:absl:loss: 139.3522	Accuracy: 0.2982	CTCAccuracy: 0.1610	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 148.6549	Accuracy: 0.2978	CTCAccuracy: 0.1588	
[1,0]<stderr>:INFO:absl:epoch: 1	loss: 134.1923	Accuracy: 0.2978	CTCAccuracy: 0.1588	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/mtl_transformer_ctc/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 2
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:global_steps: 3743	learning_rate: 4.1848e-05	loss: 113.7596	Accuracy: 0.2228	CTCAccuracy: 0.1337	sec/iter: 66.3322
[1,0]<stderr>:INFO:absl:global_steps: 3753	learning_rate: 4.1960e-05	loss: 120.8736	Accuracy: 0.2905	CTCAccuracy: 0.1508	sec/iter: 0.4841
[1,0]<stderr>:INFO:absl:global_steps: 3763	learning_rate: 4.2072e-05	loss: 144.2999	Accuracy: 0.3156	CTCAccuracy: 0.1437	sec/iter: 0.4949
[1,0]<stderr>:INFO:absl:global_steps: 3773	learning_rate: 4.2183e-05	loss: 137.9420	Accuracy: 0.2999	CTCAccuracy: 0.1481	sec/iter: 0.4952
[1,0]<stderr>:INFO:absl:global_steps: 3783	learning_rate: 4.2295e-05	loss: 155.0527	Accuracy: 0.3112	CTCAccuracy: 0.1434	sec/iter: 0.5351
[1,0]<stderr>:INFO:absl:global_steps: 3793	learning_rate: 4.2407e-05	loss: 134.2270	Accuracy: 0.2929	CTCAccuracy: 0.1493	sec/iter: 0.4973
[1,0]<stderr>:INFO:absl:global_steps: 3803	learning_rate: 4.2519e-05	loss: 132.1023	Accuracy: 0.3061	CTCAccuracy: 0.1431	sec/iter: 0.5091
[1,0]<stderr>:INFO:absl:global_steps: 3813	learning_rate: 4.2631e-05	loss: 139.4626	Accuracy: 0.3181	CTCAccuracy: 0.1610	sec/iter: 0.5481
[1,0]<stderr>:INFO:absl:global_steps: 3823	learning_rate: 4.2742e-05	loss: 143.8769	Accuracy: 0.3148	CTCAccuracy: 0.1519	sec/iter: 0.5282
[1,0]<stderr>:INFO:absl:global_steps: 3833	learning_rate: 4.2854e-05	loss: 126.2943	Accuracy: 0.3128	CTCAccuracy: 0.1577	sec/iter: 0.5296
[1,0]<stderr>:INFO:absl:global_steps: 3843	learning_rate: 4.2966e-05	loss: 141.0374	Accuracy: 0.3025	CTCAccuracy: 0.1374	sec/iter: 0.5159
[1,0]<stderr>:INFO:absl:global_steps: 3853	learning_rate: 4.3078e-05	loss: 131.3300	Accuracy: 0.3126	CTCAccuracy: 0.1405	sec/iter: 0.5150
[1,0]<stderr>:INFO:absl:global_steps: 3863	learning_rate: 4.3190e-05	loss: 139.5851	Accuracy: 0.3186	CTCAccuracy: 0.1552	sec/iter: 0.5158
[1,0]<stderr>:INFO:absl:global_steps: 3873	learning_rate: 4.3301e-05	loss: 147.0780	Accuracy: 0.3361	CTCAccuracy: 0.1733	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 3883	learning_rate: 4.3413e-05	loss: 111.7100	Accuracy: 0.3240	CTCAccuracy: 0.1435	sec/iter: 0.5454
[1,0]<stderr>:INFO:absl:global_steps: 3893	learning_rate: 4.3525e-05	loss: 141.2039	Accuracy: 0.3425	CTCAccuracy: 0.1472	sec/iter: 0.5399
[1,0]<stderr>:INFO:absl:global_steps: 3903	learning_rate: 4.3637e-05	loss: 124.0555	Accuracy: 0.3048	CTCAccuracy: 0.1567	sec/iter: 0.5503
[1,0]<stderr>:INFO:absl:global_steps: 3913	learning_rate: 4.3749e-05	loss: 142.4030	Accuracy: 0.3089	CTCAccuracy: 0.1592	sec/iter: 0.4937
[1,0]<stderr>:INFO:absl:global_steps: 3923	learning_rate: 4.3860e-05	loss: 137.2387	Accuracy: 0.3221	CTCAccuracy: 0.1462	sec/iter: 0.5170
[1,0]<stderr>:INFO:absl:global_steps: 3933	learning_rate: 4.3972e-05	loss: 131.1842	Accuracy: 0.3346	CTCAccuracy: 0.1721	sec/iter: 0.4887
[1,0]<stderr>:INFO:absl:global_steps: 3943	learning_rate: 4.4084e-05	loss: 145.8045	Accuracy: 0.3180	CTCAccuracy: 0.1576	sec/iter: 0.5137
[1,0]<stderr>:INFO:absl:global_steps: 3953	learning_rate: 4.4196e-05	loss: 139.5471	Accuracy: 0.3309	CTCAccuracy: 0.1595	sec/iter: 0.5336
[1,0]<stderr>:INFO:absl:global_steps: 3963	learning_rate: 4.4308e-05	loss: 119.7223	Accuracy: 0.3236	CTCAccuracy: 0.1598	sec/iter: 0.5210
[1,0]<stderr>:INFO:absl:global_steps: 3973	learning_rate: 4.4419e-05	loss: 132.8500	Accuracy: 0.3301	CTCAccuracy: 0.1561	sec/iter: 0.5105
[1,0]<stderr>:INFO:absl:global_steps: 3983	learning_rate: 4.4531e-05	loss: 146.9025	Accuracy: 0.3351	CTCAccuracy: 0.1502	sec/iter: 0.5259
[1,0]<stderr>:INFO:absl:global_steps: 3993	learning_rate: 4.4643e-05	loss: 110.6287	Accuracy: 0.3359	CTCAccuracy: 0.1609	sec/iter: 0.5146
[1,0]<stderr>:INFO:absl:global_steps: 4003	learning_rate: 4.4755e-05	loss: 142.3387	Accuracy: 0.3573	CTCAccuracy: 0.1531	sec/iter: 0.5154
[1,0]<stderr>:INFO:absl:global_steps: 4013	learning_rate: 4.4867e-05	loss: 124.7979	Accuracy: 0.3352	CTCAccuracy: 0.1422	sec/iter: 0.5081
[1,0]<stderr>:INFO:absl:global_steps: 4023	learning_rate: 4.4979e-05	loss: 130.1436	Accuracy: 0.3470	CTCAccuracy: 0.1538	sec/iter: 0.5119
[1,0]<stderr>:INFO:absl:global_steps: 4033	learning_rate: 4.5090e-05	loss: 116.3231	Accuracy: 0.3263	CTCAccuracy: 0.1606	sec/iter: 0.4708
[1,0]<stderr>:INFO:absl:global_steps: 4043	learning_rate: 4.5202e-05	loss: 125.0963	Accuracy: 0.3589	CTCAccuracy: 0.1609	sec/iter: 0.5429
[1,0]<stderr>:INFO:absl:global_steps: 4053	learning_rate: 4.5314e-05	loss: 143.4653	Accuracy: 0.3376	CTCAccuracy: 0.1679	sec/iter: 0.5159
[1,0]<stderr>:INFO:absl:global_steps: 4063	learning_rate: 4.5426e-05	loss: 126.8832	Accuracy: 0.3581	CTCAccuracy: 0.1580	sec/iter: 0.4895
[1,0]<stderr>:INFO:absl:global_steps: 4073	learning_rate: 4.5538e-05	loss: 128.9706	Accuracy: 0.3577	CTCAccuracy: 0.1721	sec/iter: 0.5043
[1,0]<stderr>:INFO:absl:global_steps: 4083	learning_rate: 4.5649e-05	loss: 137.0126	Accuracy: 0.3687	CTCAccuracy: 0.1682	sec/iter: 0.5440
[1,0]<stderr>:INFO:absl:global_steps: 4093	learning_rate: 4.5761e-05	loss: 132.1545	Accuracy: 0.3680	CTCAccuracy: 0.1677	sec/iter: 0.5001
[1,0]<stderr>:INFO:absl:global_steps: 4103	learning_rate: 4.5873e-05	loss: 128.4430	Accuracy: 0.3728	CTCAccuracy: 0.1729	sec/iter: 0.5470
[1,0]<stderr>:INFO:absl:global_steps: 4113	learning_rate: 4.5985e-05	loss: 135.5235	Accuracy: 0.3441	CTCAccuracy: 0.1594	sec/iter: 0.4916
[1,0]<stderr>:INFO:absl:global_steps: 4123	learning_rate: 4.6097e-05	loss: 125.6838	Accuracy: 0.3708	CTCAccuracy: 0.1660	sec/iter: 0.5446
[1,0]<stderr>:INFO:absl:global_steps: 4133	learning_rate: 4.6208e-05	loss: 113.4418	Accuracy: 0.3592	CTCAccuracy: 0.1535	sec/iter: 0.4778
[1,0]<stderr>:INFO:absl:global_steps: 4143	learning_rate: 4.6320e-05	loss: 138.3230	Accuracy: 0.3984	CTCAccuracy: 0.1729	sec/iter: 0.4875
[1,0]<stderr>:INFO:absl:global_steps: 4153	learning_rate: 4.6432e-05	loss: 100.7225	Accuracy: 0.4010	CTCAccuracy: 0.1916	sec/iter: 0.5156
[1,0]<stderr>:INFO:absl:global_steps: 4163	learning_rate: 4.6544e-05	loss: 114.5786	Accuracy: 0.3670	CTCAccuracy: 0.1635	sec/iter: 0.4751
[1,0]<stderr>:INFO:absl:global_steps: 4173	learning_rate: 4.6656e-05	loss: 126.2112	Accuracy: 0.3783	CTCAccuracy: 0.1634	sec/iter: 0.4928
[1,0]<stderr>:INFO:absl:global_steps: 4183	learning_rate: 4.6767e-05	loss: 100.4150	Accuracy: 0.3580	CTCAccuracy: 0.1746	sec/iter: 0.4652
[1,0]<stderr>:INFO:absl:global_steps: 4193	learning_rate: 4.6879e-05	loss: 121.1741	Accuracy: 0.4051	CTCAccuracy: 0.1622	sec/iter: 0.5295
[1,0]<stderr>:INFO:absl:global_steps: 4203	learning_rate: 4.6991e-05	loss: 133.0445	Accuracy: 0.3873	CTCAccuracy: 0.1805	sec/iter: 0.5290
[1,0]<stderr>:INFO:absl:global_steps: 4213	learning_rate: 4.7103e-05	loss: 154.6612	Accuracy: 0.3837	CTCAccuracy: 0.1749	sec/iter: 0.5098
[1,0]<stderr>:INFO:absl:global_steps: 4223	learning_rate: 4.7215e-05	loss: 119.1598	Accuracy: 0.4000	CTCAccuracy: 0.1701	sec/iter: 0.5330
[1,0]<stderr>:INFO:absl:global_steps: 4233	learning_rate: 4.7326e-05	loss: 123.3386	Accuracy: 0.3724	CTCAccuracy: 0.1900	sec/iter: 0.5303
[1,0]<stderr>:INFO:absl:global_steps: 4243	learning_rate: 4.7438e-05	loss: 135.8512	Accuracy: 0.4085	CTCAccuracy: 0.1903	sec/iter: 0.5150
[1,0]<stderr>:INFO:absl:global_steps: 4253	learning_rate: 4.7550e-05	loss: 121.1786	Accuracy: 0.3886	CTCAccuracy: 0.1646	sec/iter: 0.5233
[1,0]<stderr>:INFO:absl:global_steps: 4263	learning_rate: 4.7662e-05	loss: 124.3240	Accuracy: 0.4015	CTCAccuracy: 0.1803	sec/iter: 0.5216
[1,0]<stderr>:INFO:absl:global_steps: 4273	learning_rate: 4.7774e-05	loss: 125.6750	Accuracy: 0.4431	CTCAccuracy: 0.1792	sec/iter: 0.5372
[1,0]<stderr>:INFO:absl:global_steps: 4283	learning_rate: 4.7885e-05	loss: 115.0892	Accuracy: 0.3966	CTCAccuracy: 0.1886	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 4293	learning_rate: 4.7997e-05	loss: 108.2699	Accuracy: 0.4021	CTCAccuracy: 0.1722	sec/iter: 0.5193
[1,0]<stderr>:INFO:absl:global_steps: 4303	learning_rate: 4.8109e-05	loss: 118.7293	Accuracy: 0.4221	CTCAccuracy: 0.1754	sec/iter: 0.5265
[1,0]<stderr>:INFO:absl:global_steps: 4313	learning_rate: 4.8221e-05	loss: 102.0635	Accuracy: 0.4134	CTCAccuracy: 0.1743	sec/iter: 0.5095
[1,0]<stderr>:INFO:absl:global_steps: 4323	learning_rate: 4.8333e-05	loss: 119.0098	Accuracy: 0.4455	CTCAccuracy: 0.1764	sec/iter: 0.4938
[1,0]<stderr>:INFO:absl:global_steps: 4333	learning_rate: 4.8444e-05	loss: 106.1624	Accuracy: 0.4110	CTCAccuracy: 0.1834	sec/iter: 0.5192
[1,0]<stderr>:INFO:absl:global_steps: 4343	learning_rate: 4.8556e-05	loss: 121.2999	Accuracy: 0.4284	CTCAccuracy: 0.1645	sec/iter: 0.5343
[1,0]<stderr>:INFO:absl:global_steps: 4353	learning_rate: 4.8668e-05	loss: 111.3314	Accuracy: 0.4453	CTCAccuracy: 0.1817	sec/iter: 0.5207
[1,0]<stderr>:INFO:absl:global_steps: 4363	learning_rate: 4.8780e-05	loss: 116.4530	Accuracy: 0.4408	CTCAccuracy: 0.1920	sec/iter: 0.5099
[1,0]<stderr>:INFO:absl:global_steps: 4373	learning_rate: 4.8892e-05	loss: 118.8592	Accuracy: 0.4265	CTCAccuracy: 0.1973	sec/iter: 0.5432
[1,0]<stderr>:INFO:absl:global_steps: 4383	learning_rate: 4.9003e-05	loss: 120.6527	Accuracy: 0.4418	CTCAccuracy: 0.1782	sec/iter: 0.5492
[1,0]<stderr>:INFO:absl:global_steps: 4393	learning_rate: 4.9115e-05	loss: 125.8778	Accuracy: 0.4319	CTCAccuracy: 0.1860	sec/iter: 0.4901
[1,0]<stderr>:INFO:absl:global_steps: 4403	learning_rate: 4.9227e-05	loss: 120.3756	Accuracy: 0.4055	CTCAccuracy: 0.1787	sec/iter: 0.5135
[1,0]<stderr>:INFO:absl:global_steps: 4413	learning_rate: 4.9339e-05	loss: 120.2269	Accuracy: 0.4176	CTCAccuracy: 0.1904	sec/iter: 0.4960
[1,0]<stderr>:INFO:absl:global_steps: 4423	learning_rate: 4.9451e-05	loss: 122.8696	Accuracy: 0.4502	CTCAccuracy: 0.1920	sec/iter: 0.5513
[1,0]<stderr>:INFO:absl:global_steps: 4433	learning_rate: 4.9562e-05	loss: 103.9131	Accuracy: 0.4153	CTCAccuracy: 0.1763	sec/iter: 0.5266
[1,0]<stderr>:INFO:absl:global_steps: 4443	learning_rate: 4.9674e-05	loss: 122.2341	Accuracy: 0.4236	CTCAccuracy: 0.1969	sec/iter: 0.5261
[1,0]<stderr>:INFO:absl:global_steps: 4453	learning_rate: 4.9786e-05	loss: 116.0219	Accuracy: 0.4527	CTCAccuracy: 0.1755	sec/iter: 0.5313
[1,0]<stderr>:INFO:absl:global_steps: 4463	learning_rate: 4.9898e-05	loss: 119.1239	Accuracy: 0.4299	CTCAccuracy: 0.1907	sec/iter: 0.5030
[1,0]<stderr>:INFO:absl:global_steps: 4473	learning_rate: 5.0010e-05	loss: 124.3230	Accuracy: 0.4470	CTCAccuracy: 0.1927	sec/iter: 0.5126
[1,0]<stderr>:INFO:absl:global_steps: 4483	learning_rate: 5.0121e-05	loss: 104.8344	Accuracy: 0.4756	CTCAccuracy: 0.1786	sec/iter: 0.5176
[1,0]<stderr>:INFO:absl:global_steps: 4493	learning_rate: 5.0233e-05	loss: 99.9008	Accuracy: 0.4828	CTCAccuracy: 0.1982	sec/iter: 0.5225
[1,0]<stderr>:INFO:absl:global_steps: 4503	learning_rate: 5.0345e-05	loss: 109.1396	Accuracy: 0.4786	CTCAccuracy: 0.1818	sec/iter: 0.5279
[1,0]<stderr>:INFO:absl:global_steps: 4513	learning_rate: 5.0457e-05	loss: 120.3318	Accuracy: 0.4648	CTCAccuracy: 0.1921	sec/iter: 0.5368
[1,0]<stderr>:INFO:absl:global_steps: 4523	learning_rate: 5.0569e-05	loss: 125.0047	Accuracy: 0.4800	CTCAccuracy: 0.1942	sec/iter: 0.5292
[1,0]<stderr>:INFO:absl:global_steps: 4533	learning_rate: 5.0680e-05	loss: 132.6775	Accuracy: 0.4534	CTCAccuracy: 0.1761	sec/iter: 0.5398
[1,0]<stderr>:INFO:absl:global_steps: 4543	learning_rate: 5.0792e-05	loss: 121.3897	Accuracy: 0.4659	CTCAccuracy: 0.1955	sec/iter: 0.4951
[1,0]<stderr>:INFO:absl:global_steps: 4553	learning_rate: 5.0904e-05	loss: 102.9724	Accuracy: 0.4538	CTCAccuracy: 0.1812	sec/iter: 0.5141
[1,0]<stderr>:INFO:absl:global_steps: 4563	learning_rate: 5.1016e-05	loss: 117.7613	Accuracy: 0.4623	CTCAccuracy: 0.2005	sec/iter: 0.5192
[1,0]<stderr>:INFO:absl:global_steps: 4573	learning_rate: 5.1128e-05	loss: 107.7686	Accuracy: 0.4805	CTCAccuracy: 0.2002	sec/iter: 0.5061
[1,0]<stderr>:INFO:absl:global_steps: 4583	learning_rate: 5.1239e-05	loss: 116.8086	Accuracy: 0.4798	CTCAccuracy: 0.1934	sec/iter: 0.5203
[1,0]<stderr>:INFO:absl:global_steps: 4593	learning_rate: 5.1351e-05	loss: 112.7117	Accuracy: 0.4843	CTCAccuracy: 0.1927	sec/iter: 0.5102
[1,0]<stderr>:INFO:absl:global_steps: 4603	learning_rate: 5.1463e-05	loss: 104.3841	Accuracy: 0.5082	CTCAccuracy: 0.1876	sec/iter: 0.5188
[1,0]<stderr>:INFO:absl:global_steps: 4613	learning_rate: 5.1575e-05	loss: 108.7880	Accuracy: 0.5059	CTCAccuracy: 0.2135	sec/iter: 0.5169
[1,0]<stderr>:INFO:absl:global_steps: 4623	learning_rate: 5.1687e-05	loss: 108.0007	Accuracy: 0.5050	CTCAccuracy: 0.2070	sec/iter: 0.4992
[1,0]<stderr>:INFO:absl:global_steps: 4633	learning_rate: 5.1799e-05	loss: 118.8467	Accuracy: 0.4991	CTCAccuracy: 0.2050	sec/iter: 0.5156
[1,0]<stderr>:INFO:absl:global_steps: 4643	learning_rate: 5.1910e-05	loss: 106.3136	Accuracy: 0.5039	CTCAccuracy: 0.1984	sec/iter: 0.5160
[1,0]<stderr>:INFO:absl:global_steps: 4653	learning_rate: 5.2022e-05	loss: 90.9521	Accuracy: 0.5218	CTCAccuracy: 0.1819	sec/iter: 0.4794
[1,0]<stderr>:INFO:absl:global_steps: 4663	learning_rate: 5.2134e-05	loss: 93.8855	Accuracy: 0.4769	CTCAccuracy: 0.1900	sec/iter: 0.5459
[1,0]<stderr>:INFO:absl:global_steps: 4673	learning_rate: 5.2246e-05	loss: 111.6322	Accuracy: 0.4931	CTCAccuracy: 0.1904	sec/iter: 0.5263
[1,0]<stderr>:INFO:absl:global_steps: 4683	learning_rate: 5.2358e-05	loss: 104.4508	Accuracy: 0.4935	CTCAccuracy: 0.2032	sec/iter: 0.5060
[1,0]<stderr>:INFO:absl:global_steps: 4693	learning_rate: 5.2469e-05	loss: 98.9909	Accuracy: 0.5088	CTCAccuracy: 0.1991	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 4703	learning_rate: 5.2581e-05	loss: 103.3782	Accuracy: 0.5198	CTCAccuracy: 0.2000	sec/iter: 0.4994
[1,0]<stderr>:INFO:absl:global_steps: 4713	learning_rate: 5.2693e-05	loss: 99.6416	Accuracy: 0.5199	CTCAccuracy: 0.2076	sec/iter: 0.5009
[1,0]<stderr>:INFO:absl:global_steps: 4723	learning_rate: 5.2805e-05	loss: 131.9154	Accuracy: 0.4907	CTCAccuracy: 0.2014	sec/iter: 0.4860
[1,0]<stderr>:INFO:absl:global_steps: 4733	learning_rate: 5.2917e-05	loss: 101.8291	Accuracy: 0.5036	CTCAccuracy: 0.2004	sec/iter: 0.4755
[1,0]<stderr>:INFO:absl:global_steps: 4743	learning_rate: 5.3028e-05	loss: 99.0289	Accuracy: 0.5313	CTCAccuracy: 0.1967	sec/iter: 0.5096
[1,0]<stderr>:INFO:absl:global_steps: 4753	learning_rate: 5.3140e-05	loss: 90.0337	Accuracy: 0.5267	CTCAccuracy: 0.1985	sec/iter: 0.5065
[1,0]<stderr>:INFO:absl:global_steps: 4763	learning_rate: 5.3252e-05	loss: 101.2851	Accuracy: 0.5328	CTCAccuracy: 0.2213	sec/iter: 0.5274
[1,0]<stderr>:INFO:absl:global_steps: 4773	learning_rate: 5.3364e-05	loss: 90.6875	Accuracy: 0.5253	CTCAccuracy: 0.2021	sec/iter: 0.5271
[1,0]<stderr>:INFO:absl:global_steps: 4783	learning_rate: 5.3476e-05	loss: 84.7121	Accuracy: 0.5444	CTCAccuracy: 0.1885	sec/iter: 0.5225
[1,0]<stderr>:INFO:absl:global_steps: 4793	learning_rate: 5.3587e-05	loss: 117.8168	Accuracy: 0.5558	CTCAccuracy: 0.2057	sec/iter: 0.4935
[1,0]<stderr>:INFO:absl:global_steps: 4803	learning_rate: 5.3699e-05	loss: 95.2634	Accuracy: 0.5355	CTCAccuracy: 0.2192	sec/iter: 0.5063
[1,0]<stderr>:INFO:absl:global_steps: 4813	learning_rate: 5.3811e-05	loss: 96.5155	Accuracy: 0.5783	CTCAccuracy: 0.2094	sec/iter: 0.5230
[1,0]<stderr>:INFO:absl:global_steps: 4823	learning_rate: 5.3923e-05	loss: 79.5108	Accuracy: 0.5258	CTCAccuracy: 0.2118	sec/iter: 0.4939
[1,0]<stderr>:INFO:absl:global_steps: 4833	learning_rate: 5.4035e-05	loss: 101.5877	Accuracy: 0.5480	CTCAccuracy: 0.1934	sec/iter: 0.4881
[1,0]<stderr>:INFO:absl:global_steps: 4843	learning_rate: 5.4146e-05	loss: 95.7761	Accuracy: 0.5217	CTCAccuracy: 0.2127	sec/iter: 0.5060
[1,0]<stderr>:INFO:absl:global_steps: 4853	learning_rate: 5.4258e-05	loss: 98.1653	Accuracy: 0.5610	CTCAccuracy: 0.2015	sec/iter: 0.5423
[1,0]<stderr>:INFO:absl:global_steps: 4863	learning_rate: 5.4370e-05	loss: 109.9502	Accuracy: 0.5463	CTCAccuracy: 0.2231	sec/iter: 0.5147
[1,0]<stderr>:INFO:absl:global_steps: 4873	learning_rate: 5.4482e-05	loss: 104.4598	Accuracy: 0.5739	CTCAccuracy: 0.2076	sec/iter: 0.5423
[1,0]<stderr>:INFO:absl:global_steps: 4883	learning_rate: 5.4594e-05	loss: 103.5842	Accuracy: 0.5844	CTCAccuracy: 0.2065	sec/iter: 0.4972
[1,0]<stderr>:INFO:absl:global_steps: 4893	learning_rate: 5.4705e-05	loss: 102.5248	Accuracy: 0.5919	CTCAccuracy: 0.2138	sec/iter: 0.5120
[1,0]<stderr>:INFO:absl:global_steps: 4903	learning_rate: 5.4817e-05	loss: 98.7228	Accuracy: 0.5756	CTCAccuracy: 0.2034	sec/iter: 0.5267
[1,0]<stderr>:INFO:absl:global_steps: 4913	learning_rate: 5.4929e-05	loss: 91.7630	Accuracy: 0.5564	CTCAccuracy: 0.2198	sec/iter: 0.5124
[1,0]<stderr>:INFO:absl:global_steps: 4923	learning_rate: 5.5041e-05	loss: 93.4146	Accuracy: 0.6147	CTCAccuracy: 0.2098	sec/iter: 0.5082
[1,0]<stderr>:INFO:absl:global_steps: 4933	learning_rate: 5.5153e-05	loss: 97.1316	Accuracy: 0.5800	CTCAccuracy: 0.2016	sec/iter: 0.5113
[1,0]<stderr>:INFO:absl:global_steps: 4943	learning_rate: 5.5264e-05	loss: 81.8216	Accuracy: 0.6087	CTCAccuracy: 0.2182	sec/iter: 0.5056
[1,0]<stderr>:INFO:absl:global_steps: 4953	learning_rate: 5.5376e-05	loss: 94.9047	Accuracy: 0.6069	CTCAccuracy: 0.2196	sec/iter: 0.5143
[1,0]<stderr>:INFO:absl:global_steps: 4963	learning_rate: 5.5488e-05	loss: 102.5701	Accuracy: 0.6128	CTCAccuracy: 0.2282	sec/iter: 0.5242
[1,0]<stderr>:INFO:absl:global_steps: 4973	learning_rate: 5.5600e-05	loss: 98.1724	Accuracy: 0.6200	CTCAccuracy: 0.2239	sec/iter: 0.5191
[1,0]<stderr>:INFO:absl:global_steps: 4983	learning_rate: 5.5712e-05	loss: 109.5492	Accuracy: 0.6298	CTCAccuracy: 0.2163	sec/iter: 0.4929
[1,0]<stderr>:INFO:absl:global_steps: 4993	learning_rate: 5.5823e-05	loss: 102.1132	Accuracy: 0.5897	CTCAccuracy: 0.2034	sec/iter: 0.5088
[1,0]<stderr>:INFO:absl:global_steps: 5003	learning_rate: 5.5935e-05	loss: 115.3296	Accuracy: 0.5792	CTCAccuracy: 0.2060	sec/iter: 0.4846
[1,0]<stderr>:INFO:absl:global_steps: 5013	learning_rate: 5.6047e-05	loss: 89.4462	Accuracy: 0.5908	CTCAccuracy: 0.2338	sec/iter: 0.4893
[1,0]<stderr>:INFO:absl:global_steps: 5023	learning_rate: 5.6159e-05	loss: 96.5373	Accuracy: 0.6234	CTCAccuracy: 0.2160	sec/iter: 0.5274
[1,0]<stderr>:INFO:absl:global_steps: 5033	learning_rate: 5.6271e-05	loss: 92.3879	Accuracy: 0.6165	CTCAccuracy: 0.2212	sec/iter: 0.4914
[1,0]<stderr>:INFO:absl:global_steps: 5043	learning_rate: 5.6382e-05	loss: 87.3994	Accuracy: 0.6257	CTCAccuracy: 0.2181	sec/iter: 0.4591
[1,0]<stderr>:INFO:absl:global_steps: 5053	learning_rate: 5.6494e-05	loss: 101.0725	Accuracy: 0.6202	CTCAccuracy: 0.1955	sec/iter: 0.4874
[1,0]<stderr>:INFO:absl:global_steps: 5063	learning_rate: 5.6606e-05	loss: 99.0735	Accuracy: 0.6386	CTCAccuracy: 0.2109	sec/iter: 0.5120
[1,0]<stderr>:INFO:absl:global_steps: 5073	learning_rate: 5.6718e-05	loss: 102.9287	Accuracy: 0.6278	CTCAccuracy: 0.2098	sec/iter: 0.5176
[1,0]<stderr>:INFO:absl:global_steps: 5083	learning_rate: 5.6830e-05	loss: 123.7954	Accuracy: 0.6354	CTCAccuracy: 0.2163	sec/iter: 0.5065
[1,0]<stderr>:INFO:absl:global_steps: 5093	learning_rate: 5.6941e-05	loss: 92.8499	Accuracy: 0.6732	CTCAccuracy: 0.2187	sec/iter: 0.5148
[1,0]<stderr>:INFO:absl:global_steps: 5103	learning_rate: 5.7053e-05	loss: 102.4156	Accuracy: 0.6891	CTCAccuracy: 0.1982	sec/iter: 0.5415
[1,0]<stderr>:INFO:absl:global_steps: 5113	learning_rate: 5.7165e-05	loss: 83.6439	Accuracy: 0.6348	CTCAccuracy: 0.2350	sec/iter: 0.4841
[1,0]<stderr>:INFO:absl:global_steps: 5123	learning_rate: 5.7277e-05	loss: 92.6497	Accuracy: 0.6202	CTCAccuracy: 0.2105	sec/iter: 0.4991
[1,0]<stderr>:INFO:absl:global_steps: 5133	learning_rate: 5.7389e-05	loss: 85.7386	Accuracy: 0.6700	CTCAccuracy: 0.2077	sec/iter: 0.4930
[1,0]<stderr>:INFO:absl:global_steps: 5143	learning_rate: 5.7500e-05	loss: 82.3397	Accuracy: 0.6426	CTCAccuracy: 0.1907	sec/iter: 0.5241
[1,0]<stderr>:INFO:absl:global_steps: 5153	learning_rate: 5.7612e-05	loss: 95.6016	Accuracy: 0.6355	CTCAccuracy: 0.2214	sec/iter: 0.5169
[1,0]<stderr>:INFO:absl:global_steps: 5163	learning_rate: 5.7724e-05	loss: 99.4559	Accuracy: 0.6457	CTCAccuracy: 0.2183	sec/iter: 0.5005
[1,0]<stderr>:INFO:absl:global_steps: 5173	learning_rate: 5.7836e-05	loss: 118.1766	Accuracy: 0.6858	CTCAccuracy: 0.1960	sec/iter: 0.5296
[1,0]<stderr>:INFO:absl:global_steps: 5183	learning_rate: 5.7948e-05	loss: 96.0516	Accuracy: 0.6582	CTCAccuracy: 0.2044	sec/iter: 0.5513
[1,0]<stderr>:INFO:absl:global_steps: 5193	learning_rate: 5.8060e-05	loss: 97.6494	Accuracy: 0.6778	CTCAccuracy: 0.2118	sec/iter: 0.5027
[1,0]<stderr>:INFO:absl:global_steps: 5203	learning_rate: 5.8171e-05	loss: 88.2734	Accuracy: 0.7011	CTCAccuracy: 0.2236	sec/iter: 0.5097
[1,0]<stderr>:INFO:absl:global_steps: 5213	learning_rate: 5.8283e-05	loss: 95.5788	Accuracy: 0.6670	CTCAccuracy: 0.2212	sec/iter: 0.4954
[1,0]<stderr>:INFO:absl:global_steps: 5223	learning_rate: 5.8395e-05	loss: 80.5820	Accuracy: 0.6996	CTCAccuracy: 0.2124	sec/iter: 0.5262
[1,0]<stderr>:INFO:absl:global_steps: 5233	learning_rate: 5.8507e-05	loss: 81.8283	Accuracy: 0.6886	CTCAccuracy: 0.2218	sec/iter: 0.5293
[1,0]<stderr>:INFO:absl:global_steps: 5243	learning_rate: 5.8619e-05	loss: 85.9700	Accuracy: 0.6919	CTCAccuracy: 0.2204	sec/iter: 0.5377
[1,0]<stderr>:INFO:absl:global_steps: 5253	learning_rate: 5.8730e-05	loss: 88.6322	Accuracy: 0.6743	CTCAccuracy: 0.2333	sec/iter: 0.4821
[1,0]<stderr>:INFO:absl:global_steps: 5263	learning_rate: 5.8842e-05	loss: 93.0800	Accuracy: 0.7134	CTCAccuracy: 0.2188	sec/iter: 0.5269
[1,0]<stderr>:INFO:absl:global_steps: 5273	learning_rate: 5.8954e-05	loss: 69.9162	Accuracy: 0.7065	CTCAccuracy: 0.2316	sec/iter: 0.4833
[1,0]<stderr>:INFO:absl:global_steps: 5283	learning_rate: 5.9066e-05	loss: 91.3350	Accuracy: 0.6895	CTCAccuracy: 0.2203	sec/iter: 0.4936
[1,0]<stderr>:INFO:absl:global_steps: 5293	learning_rate: 5.9178e-05	loss: 103.2391	Accuracy: 0.7091	CTCAccuracy: 0.2182	sec/iter: 0.4922
[1,0]<stderr>:INFO:absl:global_steps: 5303	learning_rate: 5.9289e-05	loss: 93.6416	Accuracy: 0.7070	CTCAccuracy: 0.2252	sec/iter: 0.5142
[1,0]<stderr>:INFO:absl:global_steps: 5313	learning_rate: 5.9401e-05	loss: 99.5646	Accuracy: 0.6697	CTCAccuracy: 0.2270	sec/iter: 0.5347
[1,0]<stderr>:INFO:absl:global_steps: 5323	learning_rate: 5.9513e-05	loss: 76.5102	Accuracy: 0.7429	CTCAccuracy: 0.2104	sec/iter: 0.5008
[1,0]<stderr>:INFO:absl:global_steps: 5333	learning_rate: 5.9625e-05	loss: 81.1494	Accuracy: 0.6812	CTCAccuracy: 0.2322	sec/iter: 0.4758
[1,0]<stderr>:INFO:absl:global_steps: 5343	learning_rate: 5.9737e-05	loss: 106.2966	Accuracy: 0.7126	CTCAccuracy: 0.2097	sec/iter: 0.5390
[1,0]<stderr>:INFO:absl:global_steps: 5353	learning_rate: 5.9848e-05	loss: 85.9434	Accuracy: 0.7293	CTCAccuracy: 0.2338	sec/iter: 0.4959
[1,0]<stderr>:INFO:absl:global_steps: 5363	learning_rate: 5.9960e-05	loss: 87.4237	Accuracy: 0.7189	CTCAccuracy: 0.2125	sec/iter: 0.4872
[1,0]<stderr>:INFO:absl:global_steps: 5373	learning_rate: 6.0072e-05	loss: 71.2363	Accuracy: 0.7321	CTCAccuracy: 0.2200	sec/iter: 0.5037
[1,0]<stderr>:INFO:absl:global_steps: 5383	learning_rate: 6.0184e-05	loss: 75.3471	Accuracy: 0.7524	CTCAccuracy: 0.2212	sec/iter: 0.5301
[1,0]<stderr>:INFO:absl:global_steps: 5393	learning_rate: 6.0296e-05	loss: 92.1645	Accuracy: 0.7058	CTCAccuracy: 0.2347	sec/iter: 0.5047
[1,0]<stderr>:INFO:absl:global_steps: 5403	learning_rate: 6.0407e-05	loss: 75.1991	Accuracy: 0.7170	CTCAccuracy: 0.2265	sec/iter: 0.5110
[1,0]<stderr>:INFO:absl:global_steps: 5413	learning_rate: 6.0519e-05	loss: 76.6572	Accuracy: 0.7411	CTCAccuracy: 0.2359	sec/iter: 0.5168
[1,0]<stderr>:INFO:absl:global_steps: 5423	learning_rate: 6.0631e-05	loss: 66.7233	Accuracy: 0.7421	CTCAccuracy: 0.2252	sec/iter: 0.4922
[1,0]<stderr>:INFO:absl:global_steps: 5433	learning_rate: 6.0743e-05	loss: 84.4430	Accuracy: 0.7322	CTCAccuracy: 0.2402	sec/iter: 0.5189
[1,0]<stderr>:INFO:absl:global_steps: 5443	learning_rate: 6.0855e-05	loss: 88.4436	Accuracy: 0.7330	CTCAccuracy: 0.2504	sec/iter: 0.5574
[1,0]<stderr>:INFO:absl:global_steps: 5453	learning_rate: 6.0966e-05	loss: 68.7955	Accuracy: 0.7020	CTCAccuracy: 0.2239	sec/iter: 0.5070
[1,0]<stderr>:INFO:absl:global_steps: 5463	learning_rate: 6.1078e-05	loss: 78.1629	Accuracy: 0.7473	CTCAccuracy: 0.2442	sec/iter: 0.4928
[1,0]<stderr>:INFO:absl:global_steps: 5473	learning_rate: 6.1190e-05	loss: 80.3354	Accuracy: 0.7410	CTCAccuracy: 0.2361	sec/iter: 0.5117
[1,0]<stderr>:INFO:absl:global_steps: 5483	learning_rate: 6.1302e-05	loss: 83.2121	Accuracy: 0.7455	CTCAccuracy: 0.2417	sec/iter: 0.5115
[1,0]<stderr>:INFO:absl:global_steps: 5493	learning_rate: 6.1414e-05	loss: 82.1980	Accuracy: 0.7383	CTCAccuracy: 0.2417	sec/iter: 0.4913
[1,0]<stderr>:INFO:absl:global_steps: 5503	learning_rate: 6.1525e-05	loss: 78.5782	Accuracy: 0.7510	CTCAccuracy: 0.2437	sec/iter: 0.5086
[1,0]<stderr>:INFO:absl:global_steps: 5513	learning_rate: 6.1637e-05	loss: 76.0226	Accuracy: 0.7781	CTCAccuracy: 0.2544	sec/iter: 0.4972
[1,0]<stderr>:INFO:absl:global_steps: 5523	learning_rate: 6.1749e-05	loss: 87.8707	Accuracy: 0.7692	CTCAccuracy: 0.2357	sec/iter: 0.4970
[1,0]<stderr>:INFO:absl:global_steps: 5533	learning_rate: 6.1861e-05	loss: 75.3602	Accuracy: 0.7643	CTCAccuracy: 0.2388	sec/iter: 0.5040
[1,0]<stderr>:INFO:absl:global_steps: 5543	learning_rate: 6.1973e-05	loss: 82.1475	Accuracy: 0.7649	CTCAccuracy: 0.2308	sec/iter: 0.5242
[1,0]<stderr>:INFO:absl:global_steps: 5553	learning_rate: 6.2084e-05	loss: 74.2398	Accuracy: 0.7697	CTCAccuracy: 0.2406	sec/iter: 0.5081
[1,0]<stderr>:INFO:absl:global_steps: 5563	learning_rate: 6.2196e-05	loss: 66.0623	Accuracy: 0.7721	CTCAccuracy: 0.2462	sec/iter: 0.4795
[1,0]<stderr>:INFO:absl:global_steps: 5573	learning_rate: 6.2308e-05	loss: 84.6851	Accuracy: 0.7619	CTCAccuracy: 0.2155	sec/iter: 0.4583
[1,0]<stderr>:INFO:absl:global_steps: 5583	learning_rate: 6.2420e-05	loss: 80.1678	Accuracy: 0.7962	CTCAccuracy: 0.2416	sec/iter: 0.4944
[1,0]<stderr>:INFO:absl:global_steps: 5593	learning_rate: 6.2532e-05	loss: 68.9496	Accuracy: 0.7795	CTCAccuracy: 0.2459	sec/iter: 0.5075
[1,0]<stderr>:INFO:absl:global_steps: 5603	learning_rate: 6.2643e-05	loss: 72.3827	Accuracy: 0.7544	CTCAccuracy: 0.2480	sec/iter: 0.5282
[1,0]<stderr>:INFO:absl:global_steps: 5613	learning_rate: 6.2755e-05	loss: 79.8508	Accuracy: 0.8037	CTCAccuracy: 0.2402	sec/iter: 0.5023
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,1]<stdout>:before filter by unk:893
[1,1]<stdout>:after filter by unk:893
[1,1]<stdout>:afiter filter by input length:893
[1,1]<stdout>:after filter by output length:893
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 2
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,0]<stdout>:before filter by unk:893
[1,0]<stdout>:after filter by unk:893
[1,0]<stdout>:afiter filter by input length:893
[1,0]<stdout>:after filter by output length:893
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:loss: 49.5292	Accuracy: 0.8192	CTCAccuracy: 0.2429	
[1,0]<stderr>:INFO:absl:loss: 61.8484	Accuracy: 0.8013	CTCAccuracy: 0.2875	
[1,0]<stderr>:INFO:absl:loss: 69.9180	Accuracy: 0.8056	CTCAccuracy: 0.2851	
[1,0]<stderr>:INFO:absl:loss: 72.1294	Accuracy: 0.8036	CTCAccuracy: 0.2856	
[1,0]<stderr>:INFO:absl:loss: 63.4664	Accuracy: 0.8117	CTCAccuracy: 0.2828	
[1,0]<stderr>:INFO:absl:loss: 72.1545	Accuracy: 0.8163	CTCAccuracy: 0.2794	
[1,0]<stderr>:INFO:absl:loss: 72.9044	Accuracy: 0.8166	CTCAccuracy: 0.2788	
[1,0]<stderr>:INFO:absl:loss: 70.5060	Accuracy: 0.8216	CTCAccuracy: 0.2738	
[1,0]<stderr>:INFO:absl:loss: 79.1763	Accuracy: 0.8199	CTCAccuracy: 0.2710	
[1,0]<stderr>:INFO:absl:loss: 86.1606	Accuracy: 0.8201	CTCAccuracy: 0.2695	
[1,0]<stderr>:INFO:absl:loss: 76.3004	Accuracy: 0.8223	CTCAccuracy: 0.2680	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 84.4107	Accuracy: 0.8199	CTCAccuracy: 0.2669	
[1,0]<stderr>:INFO:absl:epoch: 2	loss: 72.5232	Accuracy: 0.8199	CTCAccuracy: 0.2669	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/mtl_transformer_ctc/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 3
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:global_steps: 5614	learning_rate: 6.2766e-05	loss: 75.1360	Accuracy: 0.8088	CTCAccuracy: 0.2757	sec/iter: 66.0567
[1,0]<stderr>:INFO:absl:global_steps: 5624	learning_rate: 6.2878e-05	loss: 79.6415	Accuracy: 0.7901	CTCAccuracy: 0.2277	sec/iter: 0.5128
[1,0]<stderr>:INFO:absl:global_steps: 5634	learning_rate: 6.2990e-05	loss: 75.5064	Accuracy: 0.8187	CTCAccuracy: 0.2340	sec/iter: 0.5024
[1,0]<stderr>:INFO:absl:global_steps: 5644	learning_rate: 6.3102e-05	loss: 56.2395	Accuracy: 0.8013	CTCAccuracy: 0.2491	sec/iter: 0.4802
[1,0]<stderr>:INFO:absl:global_steps: 5654	learning_rate: 6.3214e-05	loss: 61.7807	Accuracy: 0.7889	CTCAccuracy: 0.2535	sec/iter: 0.5250
[1,0]<stderr>:INFO:absl:global_steps: 5664	learning_rate: 6.3325e-05	loss: 74.9574	Accuracy: 0.8142	CTCAccuracy: 0.2483	sec/iter: 0.5281
[1,0]<stderr>:INFO:absl:global_steps: 5674	learning_rate: 6.3437e-05	loss: 86.1027	Accuracy: 0.8106	CTCAccuracy: 0.2677	sec/iter: 0.5274
[1,0]<stderr>:INFO:absl:global_steps: 5684	learning_rate: 6.3549e-05	loss: 74.6546	Accuracy: 0.7971	CTCAccuracy: 0.2387	sec/iter: 0.5088
[1,0]<stderr>:INFO:absl:global_steps: 5694	learning_rate: 6.3661e-05	loss: 78.7870	Accuracy: 0.8169	CTCAccuracy: 0.2470	sec/iter: 0.5039
[1,0]<stderr>:INFO:absl:global_steps: 5704	learning_rate: 6.3773e-05	loss: 74.8974	Accuracy: 0.7891	CTCAccuracy: 0.2519	sec/iter: 0.5058
[1,0]<stderr>:INFO:absl:global_steps: 5714	learning_rate: 6.3884e-05	loss: 71.0134	Accuracy: 0.7894	CTCAccuracy: 0.2585	sec/iter: 0.5056
[1,0]<stderr>:INFO:absl:global_steps: 5724	learning_rate: 6.3996e-05	loss: 71.9022	Accuracy: 0.8237	CTCAccuracy: 0.2499	sec/iter: 0.5207
[1,0]<stderr>:INFO:absl:global_steps: 5734	learning_rate: 6.4108e-05	loss: 69.0734	Accuracy: 0.8181	CTCAccuracy: 0.2521	sec/iter: 0.4673
[1,0]<stderr>:INFO:absl:global_steps: 5744	learning_rate: 6.4220e-05	loss: 66.9226	Accuracy: 0.8322	CTCAccuracy: 0.2497	sec/iter: 0.5006
[1,0]<stderr>:INFO:absl:global_steps: 5754	learning_rate: 6.4332e-05	loss: 73.4182	Accuracy: 0.8031	CTCAccuracy: 0.2507	sec/iter: 0.5169
[1,0]<stderr>:INFO:absl:global_steps: 5764	learning_rate: 6.4443e-05	loss: 70.2572	Accuracy: 0.8000	CTCAccuracy: 0.2506	sec/iter: 0.5043
[1,0]<stderr>:INFO:absl:global_steps: 5774	learning_rate: 6.4555e-05	loss: 63.6585	Accuracy: 0.8268	CTCAccuracy: 0.2683	sec/iter: 0.4816
[1,0]<stderr>:INFO:absl:global_steps: 5784	learning_rate: 6.4667e-05	loss: 63.9094	Accuracy: 0.8112	CTCAccuracy: 0.2558	sec/iter: 0.5395
[1,0]<stderr>:INFO:absl:global_steps: 5794	learning_rate: 6.4779e-05	loss: 63.5406	Accuracy: 0.8276	CTCAccuracy: 0.2522	sec/iter: 0.5489
[1,0]<stderr>:INFO:absl:global_steps: 5804	learning_rate: 6.4891e-05	loss: 72.5598	Accuracy: 0.8359	CTCAccuracy: 0.2638	sec/iter: 0.4885
[1,0]<stderr>:INFO:absl:global_steps: 5814	learning_rate: 6.5002e-05	loss: 61.1357	Accuracy: 0.8376	CTCAccuracy: 0.2690	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 5824	learning_rate: 6.5114e-05	loss: 75.2961	Accuracy: 0.8336	CTCAccuracy: 0.2477	sec/iter: 0.5145
[1,0]<stderr>:INFO:absl:global_steps: 5834	learning_rate: 6.5226e-05	loss: 78.0372	Accuracy: 0.8260	CTCAccuracy: 0.2575	sec/iter: 0.4874
[1,0]<stderr>:INFO:absl:global_steps: 5844	learning_rate: 6.5338e-05	loss: 77.9159	Accuracy: 0.8411	CTCAccuracy: 0.2622	sec/iter: 0.5118
[1,0]<stderr>:INFO:absl:global_steps: 5854	learning_rate: 6.5450e-05	loss: 72.5531	Accuracy: 0.8482	CTCAccuracy: 0.2636	sec/iter: 0.5287
[1,0]<stderr>:INFO:absl:global_steps: 5864	learning_rate: 6.5562e-05	loss: 72.9749	Accuracy: 0.8516	CTCAccuracy: 0.2664	sec/iter: 0.4877
[1,0]<stderr>:INFO:absl:global_steps: 5874	learning_rate: 6.5673e-05	loss: 66.4807	Accuracy: 0.8479	CTCAccuracy: 0.2484	sec/iter: 0.5453
[1,0]<stderr>:INFO:absl:global_steps: 5884	learning_rate: 6.5785e-05	loss: 78.7444	Accuracy: 0.8637	CTCAccuracy: 0.2643	sec/iter: 0.5372
[1,0]<stderr>:INFO:absl:global_steps: 5894	learning_rate: 6.5897e-05	loss: 69.9454	Accuracy: 0.8720	CTCAccuracy: 0.2731	sec/iter: 0.5639
[1,0]<stderr>:INFO:absl:global_steps: 5904	learning_rate: 6.6009e-05	loss: 79.6692	Accuracy: 0.8609	CTCAccuracy: 0.2531	sec/iter: 0.5338
[1,0]<stderr>:INFO:absl:global_steps: 5914	learning_rate: 6.6121e-05	loss: 74.8151	Accuracy: 0.8718	CTCAccuracy: 0.2438	sec/iter: 0.5002
[1,0]<stderr>:INFO:absl:global_steps: 5924	learning_rate: 6.6232e-05	loss: 67.2803	Accuracy: 0.8613	CTCAccuracy: 0.2576	sec/iter: 0.5276
[1,0]<stderr>:INFO:absl:global_steps: 5934	learning_rate: 6.6344e-05	loss: 70.6478	Accuracy: 0.8541	CTCAccuracy: 0.2580	sec/iter: 0.4931
[1,0]<stderr>:INFO:absl:global_steps: 5944	learning_rate: 6.6456e-05	loss: 82.6341	Accuracy: 0.8598	CTCAccuracy: 0.2868	sec/iter: 0.4963
[1,0]<stderr>:INFO:absl:global_steps: 5954	learning_rate: 6.6568e-05	loss: 68.5575	Accuracy: 0.8605	CTCAccuracy: 0.2775	sec/iter: 0.5188
[1,0]<stderr>:INFO:absl:global_steps: 5964	learning_rate: 6.6680e-05	loss: 70.3778	Accuracy: 0.8744	CTCAccuracy: 0.2402	sec/iter: 0.5295
[1,0]<stderr>:INFO:absl:global_steps: 5974	learning_rate: 6.6791e-05	loss: 73.7138	Accuracy: 0.8778	CTCAccuracy: 0.2261	sec/iter: 0.4912
[1,0]<stderr>:INFO:absl:global_steps: 5984	learning_rate: 6.6903e-05	loss: 64.2023	Accuracy: 0.8524	CTCAccuracy: 0.2771	sec/iter: 0.5115
[1,0]<stderr>:INFO:absl:global_steps: 5994	learning_rate: 6.7015e-05	loss: 62.9230	Accuracy: 0.8641	CTCAccuracy: 0.2687	sec/iter: 0.5090
[1,0]<stderr>:INFO:absl:global_steps: 6004	learning_rate: 6.7127e-05	loss: 73.4298	Accuracy: 0.8596	CTCAccuracy: 0.2724	sec/iter: 0.5114
[1,0]<stderr>:INFO:absl:global_steps: 6014	learning_rate: 6.7239e-05	loss: 71.4058	Accuracy: 0.8663	CTCAccuracy: 0.2549	sec/iter: 0.4902
[1,0]<stderr>:INFO:absl:global_steps: 6024	learning_rate: 6.7350e-05	loss: 69.2244	Accuracy: 0.8693	CTCAccuracy: 0.2709	sec/iter: 0.4916
[1,0]<stderr>:INFO:absl:global_steps: 6034	learning_rate: 6.7462e-05	loss: 74.4234	Accuracy: 0.8882	CTCAccuracy: 0.2373	sec/iter: 0.5161
[1,0]<stderr>:INFO:absl:global_steps: 6044	learning_rate: 6.7574e-05	loss: 70.7590	Accuracy: 0.8734	CTCAccuracy: 0.2702	sec/iter: 0.5012
[1,0]<stderr>:INFO:absl:global_steps: 6054	learning_rate: 6.7686e-05	loss: 64.6709	Accuracy: 0.8896	CTCAccuracy: 0.2665	sec/iter: 0.4934
[1,0]<stderr>:INFO:absl:global_steps: 6064	learning_rate: 6.7798e-05	loss: 65.9901	Accuracy: 0.9017	CTCAccuracy: 0.2807	sec/iter: 0.5337
[1,0]<stderr>:INFO:absl:global_steps: 6074	learning_rate: 6.7909e-05	loss: 73.4863	Accuracy: 0.8774	CTCAccuracy: 0.2515	sec/iter: 0.5427
[1,0]<stderr>:INFO:absl:global_steps: 6084	learning_rate: 6.8021e-05	loss: 66.1004	Accuracy: 0.8750	CTCAccuracy: 0.2642	sec/iter: 0.5057
[1,0]<stderr>:INFO:absl:global_steps: 6094	learning_rate: 6.8133e-05	loss: 70.4745	Accuracy: 0.8890	CTCAccuracy: 0.2682	sec/iter: 0.5081
[1,0]<stderr>:INFO:absl:global_steps: 6104	learning_rate: 6.8245e-05	loss: 50.9317	Accuracy: 0.8794	CTCAccuracy: 0.2777	sec/iter: 0.4704
[1,0]<stderr>:INFO:absl:global_steps: 6114	learning_rate: 6.8357e-05	loss: 75.7139	Accuracy: 0.8701	CTCAccuracy: 0.2676	sec/iter: 0.5208
[1,0]<stderr>:INFO:absl:global_steps: 6124	learning_rate: 6.8468e-05	loss: 69.7586	Accuracy: 0.8979	CTCAccuracy: 0.2780	sec/iter: 0.5303
[1,0]<stderr>:INFO:absl:global_steps: 6134	learning_rate: 6.8580e-05	loss: 68.5076	Accuracy: 0.8864	CTCAccuracy: 0.2680	sec/iter: 0.5066
[1,0]<stderr>:INFO:absl:global_steps: 6144	learning_rate: 6.8692e-05	loss: 73.3778	Accuracy: 0.9104	CTCAccuracy: 0.2524	sec/iter: 0.5105
[1,0]<stderr>:INFO:absl:global_steps: 6154	learning_rate: 6.8804e-05	loss: 63.4636	Accuracy: 0.8835	CTCAccuracy: 0.2767	sec/iter: 0.4836
[1,0]<stderr>:INFO:absl:global_steps: 6164	learning_rate: 6.8916e-05	loss: 64.5399	Accuracy: 0.9003	CTCAccuracy: 0.2525	sec/iter: 0.5139
[1,0]<stderr>:INFO:absl:global_steps: 6174	learning_rate: 6.9027e-05	loss: 74.0824	Accuracy: 0.9124	CTCAccuracy: 0.2729	sec/iter: 0.5441
[1,0]<stderr>:INFO:absl:global_steps: 6184	learning_rate: 6.9139e-05	loss: 60.6518	Accuracy: 0.9131	CTCAccuracy: 0.2717	sec/iter: 0.5206
[1,0]<stderr>:INFO:absl:global_steps: 6194	learning_rate: 6.9251e-05	loss: 66.5395	Accuracy: 0.9001	CTCAccuracy: 0.2707	sec/iter: 0.4806
[1,0]<stderr>:INFO:absl:global_steps: 6204	learning_rate: 6.9363e-05	loss: 60.2573	Accuracy: 0.9056	CTCAccuracy: 0.2563	sec/iter: 0.5230
[1,0]<stderr>:INFO:absl:global_steps: 6214	learning_rate: 6.9475e-05	loss: 62.3695	Accuracy: 0.8844	CTCAccuracy: 0.2457	sec/iter: 0.5549
[1,0]<stderr>:INFO:absl:global_steps: 6224	learning_rate: 6.9586e-05	loss: 68.6642	Accuracy: 0.8986	CTCAccuracy: 0.2479	sec/iter: 0.5304
[1,0]<stderr>:INFO:absl:global_steps: 6234	learning_rate: 6.9698e-05	loss: 88.1296	Accuracy: 0.8987	CTCAccuracy: 0.2572	sec/iter: 0.5535
[1,0]<stderr>:INFO:absl:global_steps: 6244	learning_rate: 6.9810e-05	loss: 59.0341	Accuracy: 0.8993	CTCAccuracy: 0.2796	sec/iter: 0.5217
[1,0]<stderr>:INFO:absl:global_steps: 6254	learning_rate: 6.9922e-05	loss: 63.8755	Accuracy: 0.8986	CTCAccuracy: 0.2952	sec/iter: 0.5418
[1,0]<stderr>:INFO:absl:global_steps: 6264	learning_rate: 7.0034e-05	loss: 79.3800	Accuracy: 0.8994	CTCAccuracy: 0.2712	sec/iter: 0.5207
[1,0]<stderr>:INFO:absl:global_steps: 6274	learning_rate: 7.0145e-05	loss: 62.5201	Accuracy: 0.9108	CTCAccuracy: 0.2796	sec/iter: 0.4979
[1,0]<stderr>:INFO:absl:global_steps: 6284	learning_rate: 7.0257e-05	loss: 66.2164	Accuracy: 0.8983	CTCAccuracy: 0.2673	sec/iter: 0.4975
[1,0]<stderr>:INFO:absl:global_steps: 6294	learning_rate: 7.0369e-05	loss: 67.5949	Accuracy: 0.8953	CTCAccuracy: 0.2760	sec/iter: 0.5113
[1,0]<stderr>:INFO:absl:global_steps: 6304	learning_rate: 7.0481e-05	loss: 66.7791	Accuracy: 0.9157	CTCAccuracy: 0.2623	sec/iter: 0.5230
[1,0]<stderr>:INFO:absl:global_steps: 6314	learning_rate: 7.0593e-05	loss: 62.3305	Accuracy: 0.9091	CTCAccuracy: 0.2572	sec/iter: 0.5253
[1,0]<stderr>:INFO:absl:global_steps: 6324	learning_rate: 7.0704e-05	loss: 60.9240	Accuracy: 0.8975	CTCAccuracy: 0.2803	sec/iter: 0.4968
[1,0]<stderr>:INFO:absl:global_steps: 6334	learning_rate: 7.0816e-05	loss: 80.2850	Accuracy: 0.9140	CTCAccuracy: 0.2843	sec/iter: 0.5355
[1,0]<stderr>:INFO:absl:global_steps: 6344	learning_rate: 7.0928e-05	loss: 57.1844	Accuracy: 0.9094	CTCAccuracy: 0.2574	sec/iter: 0.4909
[1,0]<stderr>:INFO:absl:global_steps: 6354	learning_rate: 7.1040e-05	loss: 58.4855	Accuracy: 0.9092	CTCAccuracy: 0.2626	sec/iter: 0.5205
[1,0]<stderr>:INFO:absl:global_steps: 6364	learning_rate: 7.1152e-05	loss: 62.7598	Accuracy: 0.9218	CTCAccuracy: 0.2747	sec/iter: 0.5052
[1,0]<stderr>:INFO:absl:global_steps: 6374	learning_rate: 7.1263e-05	loss: 60.8389	Accuracy: 0.9150	CTCAccuracy: 0.2647	sec/iter: 0.5119
[1,0]<stderr>:INFO:absl:global_steps: 6384	learning_rate: 7.1375e-05	loss: 67.0186	Accuracy: 0.9151	CTCAccuracy: 0.2791	sec/iter: 0.4785
[1,0]<stderr>:INFO:absl:global_steps: 6394	learning_rate: 7.1487e-05	loss: 71.8934	Accuracy: 0.9172	CTCAccuracy: 0.2812	sec/iter: 0.5055
[1,0]<stderr>:INFO:absl:global_steps: 6404	learning_rate: 7.1599e-05	loss: 56.6417	Accuracy: 0.9071	CTCAccuracy: 0.2775	sec/iter: 0.4874
[1,0]<stderr>:INFO:absl:global_steps: 6414	learning_rate: 7.1711e-05	loss: 61.4849	Accuracy: 0.9121	CTCAccuracy: 0.2739	sec/iter: 0.5409
[1,0]<stderr>:INFO:absl:global_steps: 6424	learning_rate: 7.1822e-05	loss: 59.6849	Accuracy: 0.9086	CTCAccuracy: 0.2663	sec/iter: 0.5079
[1,0]<stderr>:INFO:absl:global_steps: 6434	learning_rate: 7.1934e-05	loss: 52.9529	Accuracy: 0.9262	CTCAccuracy: 0.2772	sec/iter: 0.5559
[1,0]<stderr>:INFO:absl:global_steps: 6444	learning_rate: 7.2046e-05	loss: 64.2117	Accuracy: 0.9220	CTCAccuracy: 0.2647	sec/iter: 0.5437
[1,0]<stderr>:INFO:absl:global_steps: 6454	learning_rate: 7.2158e-05	loss: 59.8438	Accuracy: 0.9198	CTCAccuracy: 0.2924	sec/iter: 0.5023
[1,0]<stderr>:INFO:absl:global_steps: 6464	learning_rate: 7.2270e-05	loss: 51.8293	Accuracy: 0.9291	CTCAccuracy: 0.2899	sec/iter: 0.4929
[1,0]<stderr>:INFO:absl:global_steps: 6474	learning_rate: 7.2382e-05	loss: 64.7779	Accuracy: 0.9223	CTCAccuracy: 0.2857	sec/iter: 0.5009
[1,0]<stderr>:INFO:absl:global_steps: 6484	learning_rate: 7.2493e-05	loss: 66.1177	Accuracy: 0.9422	CTCAccuracy: 0.2763	sec/iter: 0.5231
[1,0]<stderr>:INFO:absl:global_steps: 6494	learning_rate: 7.2605e-05	loss: 53.6275	Accuracy: 0.9258	CTCAccuracy: 0.2711	sec/iter: 0.4987
[1,0]<stderr>:INFO:absl:global_steps: 6504	learning_rate: 7.2717e-05	loss: 60.6256	Accuracy: 0.9147	CTCAccuracy: 0.2571	sec/iter: 0.5154
[1,0]<stderr>:INFO:absl:global_steps: 6514	learning_rate: 7.2829e-05	loss: 59.2761	Accuracy: 0.9397	CTCAccuracy: 0.2815	sec/iter: 0.4947
[1,0]<stderr>:INFO:absl:global_steps: 6524	learning_rate: 7.2941e-05	loss: 52.5263	Accuracy: 0.9365	CTCAccuracy: 0.2692	sec/iter: 0.4989
[1,0]<stderr>:INFO:absl:global_steps: 6534	learning_rate: 7.3052e-05	loss: 66.2378	Accuracy: 0.9261	CTCAccuracy: 0.2730	sec/iter: 0.5000
[1,0]<stderr>:INFO:absl:global_steps: 6544	learning_rate: 7.3164e-05	loss: 62.6501	Accuracy: 0.9233	CTCAccuracy: 0.2768	sec/iter: 0.5160
[1,0]<stderr>:INFO:absl:global_steps: 6554	learning_rate: 7.3276e-05	loss: 57.1678	Accuracy: 0.9394	CTCAccuracy: 0.2788	sec/iter: 0.5101
[1,0]<stderr>:INFO:absl:global_steps: 6564	learning_rate: 7.3388e-05	loss: 49.3209	Accuracy: 0.9358	CTCAccuracy: 0.3027	sec/iter: 0.4795
[1,0]<stderr>:INFO:absl:global_steps: 6574	learning_rate: 7.3500e-05	loss: 49.3647	Accuracy: 0.9331	CTCAccuracy: 0.2884	sec/iter: 0.4947
[1,0]<stderr>:INFO:absl:global_steps: 6584	learning_rate: 7.3611e-05	loss: 60.9540	Accuracy: 0.9318	CTCAccuracy: 0.2970	sec/iter: 0.4942
[1,0]<stderr>:INFO:absl:global_steps: 6594	learning_rate: 7.3723e-05	loss: 79.5469	Accuracy: 0.9415	CTCAccuracy: 0.2645	sec/iter: 0.5162
[1,0]<stderr>:INFO:absl:global_steps: 6604	learning_rate: 7.3835e-05	loss: 64.6451	Accuracy: 0.9295	CTCAccuracy: 0.2759	sec/iter: 0.5110
[1,0]<stderr>:INFO:absl:global_steps: 6614	learning_rate: 7.3947e-05	loss: 60.7702	Accuracy: 0.9396	CTCAccuracy: 0.3031	sec/iter: 0.5134
[1,0]<stderr>:INFO:absl:global_steps: 6624	learning_rate: 7.4059e-05	loss: 57.1773	Accuracy: 0.9341	CTCAccuracy: 0.2795	sec/iter: 0.5058
[1,0]<stderr>:INFO:absl:global_steps: 6634	learning_rate: 7.4170e-05	loss: 61.7513	Accuracy: 0.9357	CTCAccuracy: 0.2791	sec/iter: 0.5294
[1,0]<stderr>:INFO:absl:global_steps: 6644	learning_rate: 7.4282e-05	loss: 61.8032	Accuracy: 0.9306	CTCAccuracy: 0.3038	sec/iter: 0.5104
[1,0]<stderr>:INFO:absl:global_steps: 6654	learning_rate: 7.4394e-05	loss: 65.7730	Accuracy: 0.9382	CTCAccuracy: 0.2763	sec/iter: 0.5324
[1,0]<stderr>:INFO:absl:global_steps: 6664	learning_rate: 7.4506e-05	loss: 64.0439	Accuracy: 0.9469	CTCAccuracy: 0.3026	sec/iter: 0.5200
[1,0]<stderr>:INFO:absl:global_steps: 6674	learning_rate: 7.4618e-05	loss: 52.4821	Accuracy: 0.9305	CTCAccuracy: 0.2870	sec/iter: 0.5054
[1,0]<stderr>:INFO:absl:global_steps: 6684	learning_rate: 7.4729e-05	loss: 70.2709	Accuracy: 0.9314	CTCAccuracy: 0.2898	sec/iter: 0.5316
[1,0]<stderr>:INFO:absl:global_steps: 6694	learning_rate: 7.4841e-05	loss: 55.9105	Accuracy: 0.9329	CTCAccuracy: 0.3090	sec/iter: 0.5267
[1,0]<stderr>:INFO:absl:global_steps: 6704	learning_rate: 7.4953e-05	loss: 57.8644	Accuracy: 0.9472	CTCAccuracy: 0.2781	sec/iter: 0.5075
[1,0]<stderr>:INFO:absl:global_steps: 6714	learning_rate: 7.5065e-05	loss: 55.7941	Accuracy: 0.9403	CTCAccuracy: 0.2636	sec/iter: 0.5034
[1,0]<stderr>:INFO:absl:global_steps: 6724	learning_rate: 7.5177e-05	loss: 57.8769	Accuracy: 0.9492	CTCAccuracy: 0.2924	sec/iter: 0.5175
[1,0]<stderr>:INFO:absl:global_steps: 6734	learning_rate: 7.5288e-05	loss: 59.0583	Accuracy: 0.9360	CTCAccuracy: 0.2952	sec/iter: 0.5140
[1,0]<stderr>:INFO:absl:global_steps: 6744	learning_rate: 7.5400e-05	loss: 63.2265	Accuracy: 0.9465	CTCAccuracy: 0.3010	sec/iter: 0.5136
[1,0]<stderr>:INFO:absl:global_steps: 6754	learning_rate: 7.5512e-05	loss: 47.4516	Accuracy: 0.9427	CTCAccuracy: 0.2788	sec/iter: 0.4808
[1,0]<stderr>:INFO:absl:global_steps: 6764	learning_rate: 7.5624e-05	loss: 56.4652	Accuracy: 0.9424	CTCAccuracy: 0.2680	sec/iter: 0.5146
[1,0]<stderr>:INFO:absl:global_steps: 6774	learning_rate: 7.5736e-05	loss: 58.3193	Accuracy: 0.9375	CTCAccuracy: 0.3078	sec/iter: 0.4905
[1,0]<stderr>:INFO:absl:global_steps: 6784	learning_rate: 7.5847e-05	loss: 59.2645	Accuracy: 0.9394	CTCAccuracy: 0.2811	sec/iter: 0.5377
[1,0]<stderr>:INFO:absl:global_steps: 6794	learning_rate: 7.5959e-05	loss: 53.9822	Accuracy: 0.9484	CTCAccuracy: 0.2860	sec/iter: 0.5163
[1,0]<stderr>:INFO:absl:global_steps: 6804	learning_rate: 7.6071e-05	loss: 40.4437	Accuracy: 0.9466	CTCAccuracy: 0.2928	sec/iter: 0.4945
[1,0]<stderr>:INFO:absl:global_steps: 6814	learning_rate: 7.6183e-05	loss: 52.9063	Accuracy: 0.9556	CTCAccuracy: 0.3066	sec/iter: 0.4945
[1,0]<stderr>:INFO:absl:global_steps: 6824	learning_rate: 7.6295e-05	loss: 58.0923	Accuracy: 0.9553	CTCAccuracy: 0.3106	sec/iter: 0.5109
[1,0]<stderr>:INFO:absl:global_steps: 6834	learning_rate: 7.6406e-05	loss: 60.2214	Accuracy: 0.9499	CTCAccuracy: 0.2725	sec/iter: 0.5384
[1,0]<stderr>:INFO:absl:global_steps: 6844	learning_rate: 7.6518e-05	loss: 57.2258	Accuracy: 0.9495	CTCAccuracy: 0.2786	sec/iter: 0.5173
[1,0]<stderr>:INFO:absl:global_steps: 6854	learning_rate: 7.6630e-05	loss: 52.7217	Accuracy: 0.9388	CTCAccuracy: 0.2884	sec/iter: 0.5091
[1,0]<stderr>:INFO:absl:global_steps: 6864	learning_rate: 7.6742e-05	loss: 54.5060	Accuracy: 0.9553	CTCAccuracy: 0.3002	sec/iter: 0.5269
[1,0]<stderr>:INFO:absl:global_steps: 6874	learning_rate: 7.6854e-05	loss: 55.6757	Accuracy: 0.9502	CTCAccuracy: 0.2783	sec/iter: 0.5355
[1,0]<stderr>:INFO:absl:global_steps: 6884	learning_rate: 7.6965e-05	loss: 56.0743	Accuracy: 0.9530	CTCAccuracy: 0.3015	sec/iter: 0.5007
[1,0]<stderr>:INFO:absl:global_steps: 6894	learning_rate: 7.7077e-05	loss: 50.5936	Accuracy: 0.9557	CTCAccuracy: 0.2978	sec/iter: 0.5067
[1,0]<stderr>:INFO:absl:global_steps: 6904	learning_rate: 7.7189e-05	loss: 53.6853	Accuracy: 0.9571	CTCAccuracy: 0.2815	sec/iter: 0.5078
[1,0]<stderr>:INFO:absl:global_steps: 6914	learning_rate: 7.7301e-05	loss: 57.3453	Accuracy: 0.9514	CTCAccuracy: 0.3299	sec/iter: 0.4983
[1,0]<stderr>:INFO:absl:global_steps: 6924	learning_rate: 7.7413e-05	loss: 48.5597	Accuracy: 0.9601	CTCAccuracy: 0.3012	sec/iter: 0.4896
[1,0]<stderr>:INFO:absl:global_steps: 6934	learning_rate: 7.7524e-05	loss: 54.5082	Accuracy: 0.9556	CTCAccuracy: 0.2909	sec/iter: 0.5282
[1,0]<stderr>:INFO:absl:global_steps: 6944	learning_rate: 7.7636e-05	loss: 51.0485	Accuracy: 0.9538	CTCAccuracy: 0.3223	sec/iter: 0.4710
[1,0]<stderr>:INFO:absl:global_steps: 6954	learning_rate: 7.7748e-05	loss: 58.9799	Accuracy: 0.9454	CTCAccuracy: 0.2895	sec/iter: 0.4977
[1,0]<stderr>:INFO:absl:global_steps: 6964	learning_rate: 7.7860e-05	loss: 54.6956	Accuracy: 0.9554	CTCAccuracy: 0.3071	sec/iter: 0.5429
[1,0]<stderr>:INFO:absl:global_steps: 6974	learning_rate: 7.7972e-05	loss: 55.8524	Accuracy: 0.9501	CTCAccuracy: 0.3101	sec/iter: 0.4897
[1,0]<stderr>:INFO:absl:global_steps: 6984	learning_rate: 7.8083e-05	loss: 44.3258	Accuracy: 0.9498	CTCAccuracy: 0.3294	sec/iter: 0.5318
[1,0]<stderr>:INFO:absl:global_steps: 6994	learning_rate: 7.8195e-05	loss: 53.6997	Accuracy: 0.9597	CTCAccuracy: 0.3164	sec/iter: 0.5156
[1,0]<stderr>:INFO:absl:global_steps: 7004	learning_rate: 7.8307e-05	loss: 53.8567	Accuracy: 0.9464	CTCAccuracy: 0.2906	sec/iter: 0.5309
[1,0]<stderr>:INFO:absl:global_steps: 7014	learning_rate: 7.8419e-05	loss: 50.1345	Accuracy: 0.9517	CTCAccuracy: 0.3254	sec/iter: 0.5062
[1,0]<stderr>:INFO:absl:global_steps: 7024	learning_rate: 7.8531e-05	loss: 60.9050	Accuracy: 0.9505	CTCAccuracy: 0.3103	sec/iter: 0.5146
[1,0]<stderr>:INFO:absl:global_steps: 7034	learning_rate: 7.8643e-05	loss: 53.7773	Accuracy: 0.9513	CTCAccuracy: 0.3201	sec/iter: 0.4935
[1,0]<stderr>:INFO:absl:global_steps: 7044	learning_rate: 7.8754e-05	loss: 48.0674	Accuracy: 0.9512	CTCAccuracy: 0.3028	sec/iter: 0.4916
[1,0]<stderr>:INFO:absl:global_steps: 7054	learning_rate: 7.8866e-05	loss: 51.4331	Accuracy: 0.9567	CTCAccuracy: 0.2947	sec/iter: 0.5084
[1,0]<stderr>:INFO:absl:global_steps: 7064	learning_rate: 7.8978e-05	loss: 52.5233	Accuracy: 0.9534	CTCAccuracy: 0.3090	sec/iter: 0.4868
[1,0]<stderr>:INFO:absl:global_steps: 7074	learning_rate: 7.9090e-05	loss: 45.5358	Accuracy: 0.9504	CTCAccuracy: 0.3215	sec/iter: 0.5050
[1,0]<stderr>:INFO:absl:global_steps: 7084	learning_rate: 7.9202e-05	loss: 55.4144	Accuracy: 0.9529	CTCAccuracy: 0.3357	sec/iter: 0.5116
[1,0]<stderr>:INFO:absl:global_steps: 7094	learning_rate: 7.9313e-05	loss: 51.3735	Accuracy: 0.9619	CTCAccuracy: 0.3204	sec/iter: 0.4917
[1,0]<stderr>:INFO:absl:global_steps: 7104	learning_rate: 7.9425e-05	loss: 53.7315	Accuracy: 0.9615	CTCAccuracy: 0.3105	sec/iter: 0.5100
[1,0]<stderr>:INFO:absl:global_steps: 7114	learning_rate: 7.9537e-05	loss: 52.7335	Accuracy: 0.9519	CTCAccuracy: 0.3195	sec/iter: 0.5047
[1,0]<stderr>:INFO:absl:global_steps: 7124	learning_rate: 7.9649e-05	loss: 52.0898	Accuracy: 0.9635	CTCAccuracy: 0.3267	sec/iter: 0.4694
[1,0]<stderr>:INFO:absl:global_steps: 7134	learning_rate: 7.9761e-05	loss: 53.7822	Accuracy: 0.9581	CTCAccuracy: 0.2990	sec/iter: 0.4929
[1,0]<stderr>:INFO:absl:global_steps: 7144	learning_rate: 7.9872e-05	loss: 46.6001	Accuracy: 0.9612	CTCAccuracy: 0.3179	sec/iter: 0.5255
[1,0]<stderr>:INFO:absl:global_steps: 7154	learning_rate: 7.9984e-05	loss: 72.0984	Accuracy: 0.9586	CTCAccuracy: 0.3094	sec/iter: 0.5183
[1,0]<stderr>:INFO:absl:global_steps: 7164	learning_rate: 8.0096e-05	loss: 53.1506	Accuracy: 0.9505	CTCAccuracy: 0.3120	sec/iter: 0.4899
[1,0]<stderr>:INFO:absl:global_steps: 7174	learning_rate: 8.0208e-05	loss: 50.6739	Accuracy: 0.9623	CTCAccuracy: 0.3135	sec/iter: 0.5336
[1,0]<stderr>:INFO:absl:global_steps: 7184	learning_rate: 8.0320e-05	loss: 42.3209	Accuracy: 0.9596	CTCAccuracy: 0.3136	sec/iter: 0.4994
[1,0]<stderr>:INFO:absl:global_steps: 7194	learning_rate: 8.0431e-05	loss: 35.0136	Accuracy: 0.9593	CTCAccuracy: 0.3220	sec/iter: 0.4765
[1,0]<stderr>:INFO:absl:global_steps: 7204	learning_rate: 8.0543e-05	loss: 48.0303	Accuracy: 0.9648	CTCAccuracy: 0.3320	sec/iter: 0.4938
[1,0]<stderr>:INFO:absl:global_steps: 7214	learning_rate: 8.0655e-05	loss: 57.6655	Accuracy: 0.9578	CTCAccuracy: 0.3118	sec/iter: 0.4921
[1,0]<stderr>:INFO:absl:global_steps: 7224	learning_rate: 8.0767e-05	loss: 30.7797	Accuracy: 0.9587	CTCAccuracy: 0.3354	sec/iter: 0.4497
[1,0]<stderr>:INFO:absl:global_steps: 7234	learning_rate: 8.0879e-05	loss: 38.7773	Accuracy: 0.9579	CTCAccuracy: 0.3239	sec/iter: 0.4848
[1,0]<stderr>:INFO:absl:global_steps: 7244	learning_rate: 8.0990e-05	loss: 44.1453	Accuracy: 0.9562	CTCAccuracy: 0.3473	sec/iter: 0.4890
[1,0]<stderr>:INFO:absl:global_steps: 7254	learning_rate: 8.1102e-05	loss: 50.5230	Accuracy: 0.9660	CTCAccuracy: 0.3055	sec/iter: 0.5202
[1,0]<stderr>:INFO:absl:global_steps: 7264	learning_rate: 8.1214e-05	loss: 44.9799	Accuracy: 0.9683	CTCAccuracy: 0.3217	sec/iter: 0.4979
[1,0]<stderr>:INFO:absl:global_steps: 7274	learning_rate: 8.1326e-05	loss: 52.6151	Accuracy: 0.9674	CTCAccuracy: 0.3309	sec/iter: 0.5059
[1,0]<stderr>:INFO:absl:global_steps: 7284	learning_rate: 8.1438e-05	loss: 60.6974	Accuracy: 0.9672	CTCAccuracy: 0.3196	sec/iter: 0.5304
[1,0]<stderr>:INFO:absl:global_steps: 7294	learning_rate: 8.1549e-05	loss: 54.3514	Accuracy: 0.9634	CTCAccuracy: 0.3307	sec/iter: 0.5413
[1,0]<stderr>:INFO:absl:global_steps: 7304	learning_rate: 8.1661e-05	loss: 59.8606	Accuracy: 0.9593	CTCAccuracy: 0.3332	sec/iter: 0.5283
[1,0]<stderr>:INFO:absl:global_steps: 7314	learning_rate: 8.1773e-05	loss: 47.2692	Accuracy: 0.9665	CTCAccuracy: 0.3192	sec/iter: 0.4999
[1,0]<stderr>:INFO:absl:global_steps: 7324	learning_rate: 8.1885e-05	loss: 52.8685	Accuracy: 0.9649	CTCAccuracy: 0.3206	sec/iter: 0.5016
[1,0]<stderr>:INFO:absl:global_steps: 7334	learning_rate: 8.1997e-05	loss: 61.2722	Accuracy: 0.9667	CTCAccuracy: 0.3514	sec/iter: 0.5422
[1,0]<stderr>:INFO:absl:global_steps: 7344	learning_rate: 8.2108e-05	loss: 50.4854	Accuracy: 0.9618	CTCAccuracy: 0.3322	sec/iter: 0.4829
[1,0]<stderr>:INFO:absl:global_steps: 7354	learning_rate: 8.2220e-05	loss: 60.1562	Accuracy: 0.9671	CTCAccuracy: 0.3306	sec/iter: 0.5185
[1,0]<stderr>:INFO:absl:global_steps: 7364	learning_rate: 8.2332e-05	loss: 50.4677	Accuracy: 0.9626	CTCAccuracy: 0.3326	sec/iter: 0.5358
[1,0]<stderr>:INFO:absl:global_steps: 7374	learning_rate: 8.2444e-05	loss: 50.6089	Accuracy: 0.9643	CTCAccuracy: 0.3418	sec/iter: 0.4782
[1,0]<stderr>:INFO:absl:global_steps: 7384	learning_rate: 8.2556e-05	loss: 40.5162	Accuracy: 0.9622	CTCAccuracy: 0.3500	sec/iter: 0.4869
[1,0]<stderr>:INFO:absl:global_steps: 7394	learning_rate: 8.2667e-05	loss: 55.7895	Accuracy: 0.9659	CTCAccuracy: 0.3274	sec/iter: 0.5155
[1,0]<stderr>:INFO:absl:global_steps: 7404	learning_rate: 8.2779e-05	loss: 47.5471	Accuracy: 0.9655	CTCAccuracy: 0.3395	sec/iter: 0.4922
[1,0]<stderr>:INFO:absl:global_steps: 7414	learning_rate: 8.2891e-05	loss: 43.4593	Accuracy: 0.9698	CTCAccuracy: 0.3430	sec/iter: 0.4997
[1,0]<stderr>:INFO:absl:global_steps: 7424	learning_rate: 8.3003e-05	loss: 46.4136	Accuracy: 0.9608	CTCAccuracy: 0.3497	sec/iter: 0.4944
[1,0]<stderr>:INFO:absl:global_steps: 7434	learning_rate: 8.3115e-05	loss: 49.4895	Accuracy: 0.9628	CTCAccuracy: 0.3141	sec/iter: 0.4976
[1,0]<stderr>:INFO:absl:global_steps: 7444	learning_rate: 8.3226e-05	loss: 51.1580	Accuracy: 0.9717	CTCAccuracy: 0.2996	sec/iter: 0.5355
[1,0]<stderr>:INFO:absl:global_steps: 7454	learning_rate: 8.3338e-05	loss: 47.8838	Accuracy: 0.9586	CTCAccuracy: 0.3341	sec/iter: 0.4670
[1,0]<stderr>:INFO:absl:global_steps: 7464	learning_rate: 8.3450e-05	loss: 47.6182	Accuracy: 0.9677	CTCAccuracy: 0.3360	sec/iter: 0.4779
[1,0]<stderr>:INFO:absl:global_steps: 7474	learning_rate: 8.3562e-05	loss: 55.6039	Accuracy: 0.9745	CTCAccuracy: 0.3439	sec/iter: 0.5353
[1,0]<stderr>:INFO:absl:global_steps: 7484	learning_rate: 8.3674e-05	loss: 56.3533	Accuracy: 0.9701	CTCAccuracy: 0.3462	sec/iter: 0.5348
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,1]<stdout>:before filter by unk:893
[1,1]<stdout>:after filter by unk:893
[1,1]<stdout>:afiter filter by input length:893
[1,1]<stdout>:after filter by output length:893
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 3
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,0]<stdout>:before filter by unk:893
[1,0]<stdout>:after filter by unk:893
[1,0]<stdout>:afiter filter by input length:893
[1,0]<stdout>:after filter by output length:893
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:loss: 29.3071	Accuracy: 0.9661	CTCAccuracy: 0.3955	
[1,0]<stderr>:INFO:absl:loss: 39.7893	Accuracy: 0.9759	CTCAccuracy: 0.3818	
[1,0]<stderr>:INFO:absl:loss: 41.3918	Accuracy: 0.9757	CTCAccuracy: 0.3762	
[1,0]<stderr>:INFO:absl:loss: 38.9386	Accuracy: 0.9745	CTCAccuracy: 0.3764	
[1,0]<stderr>:INFO:absl:loss: 38.5492	Accuracy: 0.9751	CTCAccuracy: 0.3732	
[1,0]<stderr>:INFO:absl:loss: 47.6897	Accuracy: 0.9758	CTCAccuracy: 0.3693	
[1,0]<stderr>:INFO:absl:loss: 48.5863	Accuracy: 0.9762	CTCAccuracy: 0.3637	
[1,0]<stderr>:INFO:absl:loss: 47.2936	Accuracy: 0.9766	CTCAccuracy: 0.3582	
[1,0]<stderr>:INFO:absl:loss: 50.8401	Accuracy: 0.9770	CTCAccuracy: 0.3564	
[1,0]<stderr>:INFO:absl:loss: 54.7750	Accuracy: 0.9771	CTCAccuracy: 0.3548	
[1,0]<stderr>:INFO:absl:loss: 47.3021	Accuracy: 0.9773	CTCAccuracy: 0.3543	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,0]<stderr>:INFO:absl:loss: 55.8011	Accuracy: 0.9778	CTCAccuracy: 0.3523	
[1,0]<stderr>:INFO:absl:epoch: 3	loss: 45.1042	Accuracy: 0.9778	CTCAccuracy: 0.3523	
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/mtl_transformer_ctc/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 4
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 8
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:global_steps: 7485	learning_rate: 8.3685e-05	loss: 49.7635	Accuracy: 0.9562	CTCAccuracy: 0.3394	sec/iter: 66.1337
[1,0]<stderr>:INFO:absl:global_steps: 7495	learning_rate: 8.3797e-05	loss: 44.2396	Accuracy: 0.9717	CTCAccuracy: 0.3863	sec/iter: 0.4939
[1,0]<stderr>:INFO:absl:global_steps: 7505	learning_rate: 8.3908e-05	loss: 48.4376	Accuracy: 0.9751	CTCAccuracy: 0.3719	sec/iter: 0.4832
[1,0]<stderr>:INFO:absl:global_steps: 7515	learning_rate: 8.4020e-05	loss: 43.7216	Accuracy: 0.9749	CTCAccuracy: 0.3880	sec/iter: 0.5080
[1,0]<stderr>:INFO:absl:global_steps: 7525	learning_rate: 8.4132e-05	loss: 50.1092	Accuracy: 0.9692	CTCAccuracy: 0.3518	sec/iter: 0.5394
[1,0]<stderr>:INFO:absl:global_steps: 7535	learning_rate: 8.4244e-05	loss: 45.5682	Accuracy: 0.9765	CTCAccuracy: 0.3677	sec/iter: 0.5335
[1,0]<stderr>:INFO:absl:global_steps: 7545	learning_rate: 8.4356e-05	loss: 45.2624	Accuracy: 0.9720	CTCAccuracy: 0.3562	sec/iter: 0.4796
[1,0]<stderr>:INFO:absl:global_steps: 7555	learning_rate: 8.4467e-05	loss: 40.8153	Accuracy: 0.9711	CTCAccuracy: 0.3468	sec/iter: 0.4952
[1,0]<stderr>:INFO:absl:global_steps: 7565	learning_rate: 8.4579e-05	loss: 37.3066	Accuracy: 0.9728	CTCAccuracy: 0.3990	sec/iter: 0.4826
[1,0]<stderr>:INFO:absl:global_steps: 7575	learning_rate: 8.4691e-05	loss: 40.9830	Accuracy: 0.9692	CTCAccuracy: 0.3565	sec/iter: 0.5241
[1,0]<stderr>:INFO:absl:global_steps: 7585	learning_rate: 8.4803e-05	loss: 36.9883	Accuracy: 0.9668	CTCAccuracy: 0.3639	sec/iter: 0.5288
[1,0]<stderr>:INFO:absl:global_steps: 7595	learning_rate: 8.4915e-05	loss: 47.7730	Accuracy: 0.9708	CTCAccuracy: 0.3838	sec/iter: 0.5159
[1,0]<stderr>:INFO:absl:global_steps: 7605	learning_rate: 8.5026e-05	loss: 42.3380	Accuracy: 0.9794	CTCAccuracy: 0.3719	sec/iter: 0.5162
[1,0]<stderr>:INFO:absl:global_steps: 7615	learning_rate: 8.5138e-05	loss: 44.1703	Accuracy: 0.9692	CTCAccuracy: 0.3649	sec/iter: 0.5119
[1,0]<stderr>:INFO:absl:global_steps: 7625	learning_rate: 8.5250e-05	loss: 47.2307	Accuracy: 0.9782	CTCAccuracy: 0.3801	sec/iter: 0.5053
[1,0]<stderr>:INFO:absl:global_steps: 7635	learning_rate: 8.5362e-05	loss: 46.7109	Accuracy: 0.9724	CTCAccuracy: 0.3612	sec/iter: 0.4975
[1,0]<stderr>:INFO:absl:global_steps: 7645	learning_rate: 8.5474e-05	loss: 38.9370	Accuracy: 0.9738	CTCAccuracy: 0.3947	sec/iter: 0.4958
[1,0]<stderr>:INFO:absl:global_steps: 7655	learning_rate: 8.5585e-05	loss: 39.6788	Accuracy: 0.9741	CTCAccuracy: 0.3575	sec/iter: 0.5312
[1,0]<stderr>:INFO:absl:global_steps: 7665	learning_rate: 8.5697e-05	loss: 42.6048	Accuracy: 0.9751	CTCAccuracy: 0.3919	sec/iter: 0.4753
[1,0]<stderr>:INFO:absl:global_steps: 7675	learning_rate: 8.5809e-05	loss: 43.9759	Accuracy: 0.9717	CTCAccuracy: 0.3661	sec/iter: 0.5202
[1,0]<stderr>:INFO:absl:global_steps: 7685	learning_rate: 8.5921e-05	loss: 46.9525	Accuracy: 0.9733	CTCAccuracy: 0.3886	sec/iter: 0.5119
[1,0]<stderr>:INFO:absl:global_steps: 7695	learning_rate: 8.6033e-05	loss: 54.1961	Accuracy: 0.9747	CTCAccuracy: 0.3758	sec/iter: 0.5352
[1,0]<stderr>:INFO:absl:global_steps: 7705	learning_rate: 8.6145e-05	loss: 41.5455	Accuracy: 0.9716	CTCAccuracy: 0.3831	sec/iter: 0.4802
[1,0]<stderr>:INFO:absl:global_steps: 7715	learning_rate: 8.6256e-05	loss: 44.6182	Accuracy: 0.9723	CTCAccuracy: 0.3723	sec/iter: 0.4982
[1,0]<stderr>:INFO:absl:global_steps: 7725	learning_rate: 8.6368e-05	loss: 45.0668	Accuracy: 0.9733	CTCAccuracy: 0.3783	sec/iter: 0.5248
[1,0]<stderr>:INFO:absl:global_steps: 7735	learning_rate: 8.6480e-05	loss: 41.5593	Accuracy: 0.9760	CTCAccuracy: 0.3752	sec/iter: 0.5049
[1,0]<stderr>:INFO:absl:global_steps: 7745	learning_rate: 8.6592e-05	loss: 46.8502	Accuracy: 0.9798	CTCAccuracy: 0.3692	sec/iter: 0.5319
[1,0]<stderr>:INFO:absl:global_steps: 7755	learning_rate: 8.6704e-05	loss: 46.1450	Accuracy: 0.9803	CTCAccuracy: 0.3789	sec/iter: 0.4999
[1,0]<stderr>:INFO:absl:global_steps: 7765	learning_rate: 8.6815e-05	loss: 42.5138	Accuracy: 0.9784	CTCAccuracy: 0.3803	sec/iter: 0.4944
[1,0]<stderr>:INFO:absl:global_steps: 7775	learning_rate: 8.6927e-05	loss: 41.3172	Accuracy: 0.9782	CTCAccuracy: 0.3842	sec/iter: 0.5295
[1,0]<stderr>:INFO:absl:global_steps: 7785	learning_rate: 8.7039e-05	loss: 37.7856	Accuracy: 0.9756	CTCAccuracy: 0.4010	sec/iter: 0.5459
[1,0]<stderr>:INFO:absl:global_steps: 7795	learning_rate: 8.7151e-05	loss: 40.0431	Accuracy: 0.9740	CTCAccuracy: 0.3790	sec/iter: 0.5114
[1,0]<stderr>:INFO:absl:global_steps: 7805	learning_rate: 8.7263e-05	loss: 42.4115	Accuracy: 0.9761	CTCAccuracy: 0.4034	sec/iter: 0.4876
[1,0]<stderr>:INFO:absl:global_steps: 7815	learning_rate: 8.7374e-05	loss: 38.6632	Accuracy: 0.9795	CTCAccuracy: 0.3779	sec/iter: 0.4946
[1,0]<stderr>:INFO:absl:global_steps: 7825	learning_rate: 8.7486e-05	loss: 34.5514	Accuracy: 0.9778	CTCAccuracy: 0.4083	sec/iter: 0.4780
[1,0]<stderr>:INFO:absl:global_steps: 7835	learning_rate: 8.7598e-05	loss: 41.2370	Accuracy: 0.9788	CTCAccuracy: 0.3916	sec/iter: 0.4795
[1,0]<stderr>:INFO:absl:global_steps: 7845	learning_rate: 8.7710e-05	loss: 46.3751	Accuracy: 0.9820	CTCAccuracy: 0.4023	sec/iter: 0.4823
[1,0]<stderr>:INFO:absl:global_steps: 7855	learning_rate: 8.7822e-05	loss: 47.0617	Accuracy: 0.9791	CTCAccuracy: 0.3760	sec/iter: 0.4802
[1,0]<stderr>:INFO:absl:global_steps: 7865	learning_rate: 8.7933e-05	loss: 35.9549	Accuracy: 0.9764	CTCAccuracy: 0.3763	sec/iter: 0.4837
[1,0]<stderr>:INFO:absl:global_steps: 7875	learning_rate: 8.8045e-05	loss: 38.7147	Accuracy: 0.9744	CTCAccuracy: 0.3962	sec/iter: 0.5259
[1,0]<stderr>:INFO:absl:global_steps: 7885	learning_rate: 8.8157e-05	loss: 57.2682	Accuracy: 0.9799	CTCAccuracy: 0.4136	sec/iter: 0.5207
[1,0]<stderr>:INFO:absl:global_steps: 7895	learning_rate: 8.8269e-05	loss: 35.9112	Accuracy: 0.9775	CTCAccuracy: 0.3878	sec/iter: 0.4846
[1,0]<stderr>:INFO:absl:global_steps: 7905	learning_rate: 8.8381e-05	loss: 43.9952	Accuracy: 0.9759	CTCAccuracy: 0.4118	sec/iter: 0.5165
[1,0]<stderr>:INFO:absl:global_steps: 7915	learning_rate: 8.8492e-05	loss: 33.9443	Accuracy: 0.9801	CTCAccuracy: 0.3917	sec/iter: 0.4780
[1,0]<stderr>:INFO:absl:global_steps: 7925	learning_rate: 8.8604e-05	loss: 43.6540	Accuracy: 0.9819	CTCAccuracy: 0.4162	sec/iter: 0.5229
[1,0]<stderr>:INFO:absl:global_steps: 7935	learning_rate: 8.8716e-05	loss: 42.5744	Accuracy: 0.9816	CTCAccuracy: 0.4023	sec/iter: 0.5162
[1,0]<stderr>:INFO:absl:global_steps: 7945	learning_rate: 8.8828e-05	loss: 44.2464	Accuracy: 0.9747	CTCAccuracy: 0.4184	sec/iter: 0.5336
[1,0]<stderr>:INFO:absl:global_steps: 7955	learning_rate: 8.8940e-05	loss: 41.8153	Accuracy: 0.9834	CTCAccuracy: 0.4203	sec/iter: 0.5214
[1,0]<stderr>:INFO:absl:global_steps: 7965	learning_rate: 8.9051e-05	loss: 54.4804	Accuracy: 0.9756	CTCAccuracy: 0.4022	sec/iter: 0.5585
[1,0]<stderr>:INFO:absl:global_steps: 7975	learning_rate: 8.9163e-05	loss: 37.5011	Accuracy: 0.9776	CTCAccuracy: 0.4269	sec/iter: 0.5036
[1,0]<stderr>:INFO:absl:global_steps: 7985	learning_rate: 8.9275e-05	loss: 39.9515	Accuracy: 0.9800	CTCAccuracy: 0.3948	sec/iter: 0.4762
[1,0]<stderr>:INFO:absl:global_steps: 7995	learning_rate: 8.9387e-05	loss: 45.9342	Accuracy: 0.9833	CTCAccuracy: 0.4136	sec/iter: 0.5229
[1,0]<stderr>:INFO:absl:global_steps: 8005	learning_rate: 8.9499e-05	loss: 43.6643	Accuracy: 0.9836	CTCAccuracy: 0.4155	sec/iter: 0.5182
[1,0]<stderr>:INFO:absl:global_steps: 8015	learning_rate: 8.9610e-05	loss: 35.3041	Accuracy: 0.9869	CTCAccuracy: 0.4224	sec/iter: 0.4826
[1,0]<stderr>:INFO:absl:global_steps: 8025	learning_rate: 8.9722e-05	loss: 37.7325	Accuracy: 0.9834	CTCAccuracy: 0.4137	sec/iter: 0.5145
[1,0]<stderr>:INFO:absl:global_steps: 8035	learning_rate: 8.9834e-05	loss: 41.1254	Accuracy: 0.9819	CTCAccuracy: 0.4317	sec/iter: 0.4881
[1,0]<stderr>:INFO:absl:global_steps: 8045	learning_rate: 8.9946e-05	loss: 36.7923	Accuracy: 0.9843	CTCAccuracy: 0.4219	sec/iter: 0.5113
[1,0]<stderr>:INFO:absl:global_steps: 8055	learning_rate: 9.0058e-05	loss: 45.2868	Accuracy: 0.9822	CTCAccuracy: 0.4430	sec/iter: 0.5127
[1,0]<stderr>:INFO:absl:global_steps: 8065	learning_rate: 9.0169e-05	loss: 40.8308	Accuracy: 0.9853	CTCAccuracy: 0.4001	sec/iter: 0.5215
[1,0]<stderr>:INFO:absl:global_steps: 8075	learning_rate: 9.0281e-05	loss: 38.2906	Accuracy: 0.9814	CTCAccuracy: 0.4465	sec/iter: 0.5036
[1,0]<stderr>:INFO:absl:global_steps: 8085	learning_rate: 9.0393e-05	loss: 41.8846	Accuracy: 0.9787	CTCAccuracy: 0.4188	sec/iter: 0.5031
[1,0]<stderr>:INFO:absl:global_steps: 8095	learning_rate: 9.0505e-05	loss: 30.5847	Accuracy: 0.9805	CTCAccuracy: 0.4320	sec/iter: 0.4964
[1,0]<stderr>:INFO:absl:global_steps: 8105	learning_rate: 9.0617e-05	loss: 39.4307	Accuracy: 0.9878	CTCAccuracy: 0.4354	sec/iter: 0.5225
[1,0]<stderr>:INFO:absl:global_steps: 8115	learning_rate: 9.0728e-05	loss: 41.0380	Accuracy: 0.9766	CTCAccuracy: 0.4004	sec/iter: 0.5223
[1,0]<stderr>:INFO:absl:global_steps: 8125	learning_rate: 9.0840e-05	loss: 40.6823	Accuracy: 0.9825	CTCAccuracy: 0.4266	sec/iter: 0.4821
[1,0]<stderr>:INFO:absl:global_steps: 8135	learning_rate: 9.0952e-05	loss: 36.4653	Accuracy: 0.9824	CTCAccuracy: 0.4381	sec/iter: 0.5311
[1,0]<stderr>:INFO:absl:global_steps: 8145	learning_rate: 9.1064e-05	loss: 44.9129	Accuracy: 0.9812	CTCAccuracy: 0.4281	sec/iter: 0.5117
[1,0]<stderr>:INFO:absl:global_steps: 8155	learning_rate: 9.1176e-05	loss: 38.5931	Accuracy: 0.9857	CTCAccuracy: 0.4414	sec/iter: 0.5279
[1,0]<stderr>:INFO:absl:global_steps: 8165	learning_rate: 9.1287e-05	loss: 42.2428	Accuracy: 0.9850	CTCAccuracy: 0.4350	sec/iter: 0.5299
[1,0]<stderr>:INFO:absl:global_steps: 8175	learning_rate: 9.1399e-05	loss: 35.3745	Accuracy: 0.9767	CTCAccuracy: 0.4404	sec/iter: 0.5082
[1,0]<stderr>:INFO:absl:global_steps: 8185	learning_rate: 9.1511e-05	loss: 29.7610	Accuracy: 0.9839	CTCAccuracy: 0.4415	sec/iter: 0.5015
[1,0]<stderr>:INFO:absl:global_steps: 8195	learning_rate: 9.1623e-05	loss: 35.0332	Accuracy: 0.9862	CTCAccuracy: 0.4300	sec/iter: 0.4971
[1,0]<stderr>:INFO:absl:global_steps: 8205	learning_rate: 9.1735e-05	loss: 35.4425	Accuracy: 0.9832	CTCAccuracy: 0.4451	sec/iter: 0.5170
[1,0]<stderr>:INFO:absl:global_steps: 8215	learning_rate: 9.1846e-05	loss: 36.3271	Accuracy: 0.9831	CTCAccuracy: 0.4539	sec/iter: 0.5156
[1,0]<stderr>:INFO:absl:global_steps: 8225	learning_rate: 9.1958e-05	loss: 29.8170	Accuracy: 0.9769	CTCAccuracy: 0.4532	sec/iter: 0.4921
[1,0]<stderr>:INFO:absl:global_steps: 8235	learning_rate: 9.2070e-05	loss: 32.4231	Accuracy: 0.9847	CTCAccuracy: 0.4425	sec/iter: 0.5223
[1,0]<stderr>:INFO:absl:global_steps: 8245	learning_rate: 9.2182e-05	loss: 35.8653	Accuracy: 0.9836	CTCAccuracy: 0.4482	sec/iter: 0.5190
[1,0]<stderr>:INFO:absl:global_steps: 8255	learning_rate: 9.2294e-05	loss: 30.7356	Accuracy: 0.9843	CTCAccuracy: 0.4642	sec/iter: 0.4958
[1,0]<stderr>:INFO:absl:global_steps: 8265	learning_rate: 9.2406e-05	loss: 35.0550	Accuracy: 0.9814	CTCAccuracy: 0.4415	sec/iter: 0.5178
[1,0]<stderr>:INFO:absl:global_steps: 8275	learning_rate: 9.2517e-05	loss: 36.3531	Accuracy: 0.9841	CTCAccuracy: 0.4741	sec/iter: 0.5267
[1,0]<stderr>:INFO:absl:global_steps: 8285	learning_rate: 9.2629e-05	loss: 33.7640	Accuracy: 0.9835	CTCAccuracy: 0.4569	sec/iter: 0.5000
[1,0]<stderr>:INFO:absl:global_steps: 8295	learning_rate: 9.2741e-05	loss: 33.9520	Accuracy: 0.9872	CTCAccuracy: 0.4444	sec/iter: 0.4987
[1,0]<stderr>:INFO:absl:global_steps: 8305	learning_rate: 9.2853e-05	loss: 33.4225	Accuracy: 0.9825	CTCAccuracy: 0.4283	sec/iter: 0.4769
[1,0]<stderr>:INFO:absl:global_steps: 8315	learning_rate: 9.2965e-05	loss: 39.0768	Accuracy: 0.9856	CTCAccuracy: 0.4564	sec/iter: 0.5434
[1,0]<stderr>:INFO:absl:global_steps: 8325	learning_rate: 9.3076e-05	loss: 34.7461	Accuracy: 0.9817	CTCAccuracy: 0.4594	sec/iter: 0.4848
[1,0]<stderr>:INFO:absl:global_steps: 8335	learning_rate: 9.3188e-05	loss: 28.0557	Accuracy: 0.9849	CTCAccuracy: 0.4666	sec/iter: 0.5340
[1,0]<stderr>:INFO:absl:global_steps: 8345	learning_rate: 9.3300e-05	loss: 42.1880	Accuracy: 0.9836	CTCAccuracy: 0.4556	sec/iter: 0.4957
[1,0]<stderr>:INFO:absl:global_steps: 8355	learning_rate: 9.3412e-05	loss: 31.7486	Accuracy: 0.9902	CTCAccuracy: 0.4339	sec/iter: 0.5651
[1,0]<stderr>:INFO:absl:global_steps: 8365	learning_rate: 9.3524e-05	loss: 37.3422	Accuracy: 0.9847	CTCAccuracy: 0.4591	sec/iter: 0.4938
[1,0]<stderr>:INFO:absl:global_steps: 8375	learning_rate: 9.3635e-05	loss: 40.7532	Accuracy: 0.9869	CTCAccuracy: 0.4581	sec/iter: 0.4932
[1,0]<stderr>:INFO:absl:global_steps: 8385	learning_rate: 9.3747e-05	loss: 39.2193	Accuracy: 0.9834	CTCAccuracy: 0.4510	sec/iter: 0.5027
[1,0]<stderr>:INFO:absl:global_steps: 8395	learning_rate: 9.3859e-05	loss: 34.3143	Accuracy: 0.9863	CTCAccuracy: 0.4722	sec/iter: 0.5104
[1,0]<stderr>:INFO:absl:global_steps: 8405	learning_rate: 9.3971e-05	loss: 36.6003	Accuracy: 0.9831	CTCAccuracy: 0.4354	sec/iter: 0.4888
[1,0]<stderr>:INFO:absl:global_steps: 8415	learning_rate: 9.4083e-05	loss: 38.5602	Accuracy: 0.9857	CTCAccuracy: 0.4847	sec/iter: 0.5001
[1,0]<stderr>:INFO:absl:global_steps: 8425	learning_rate: 9.4194e-05	loss: 36.3686	Accuracy: 0.9872	CTCAccuracy: 0.4908	sec/iter: 0.5286
[1,0]<stderr>:INFO:absl:global_steps: 8435	learning_rate: 9.4306e-05	loss: 38.8390	Accuracy: 0.9876	CTCAccuracy: 0.4840	sec/iter: 0.5169
[1,0]<stderr>:INFO:absl:global_steps: 8445	learning_rate: 9.4418e-05	loss: 37.0509	Accuracy: 0.9879	CTCAccuracy: 0.4437	sec/iter: 0.5178
[1,0]<stderr>:INFO:absl:global_steps: 8455	learning_rate: 9.4530e-05	loss: 31.2945	Accuracy: 0.9825	CTCAccuracy: 0.4440	sec/iter: 0.5276
[1,0]<stderr>:INFO:absl:global_steps: 8465	learning_rate: 9.4642e-05	loss: 41.9739	Accuracy: 0.9818	CTCAccuracy: 0.4635	sec/iter: 0.5333
[1,0]<stderr>:INFO:absl:global_steps: 8475	learning_rate: 9.4753e-05	loss: 33.5881	Accuracy: 0.9885	CTCAccuracy: 0.4624	sec/iter: 0.4937
[1,0]<stderr>:INFO:absl:global_steps: 8485	learning_rate: 9.4865e-05	loss: 37.7864	Accuracy: 0.9846	CTCAccuracy: 0.4525	sec/iter: 0.5221
[1,0]<stderr>:INFO:absl:global_steps: 8495	learning_rate: 9.4977e-05	loss: 30.9355	Accuracy: 0.9863	CTCAccuracy: 0.4518	sec/iter: 0.5188
[1,0]<stderr>:INFO:absl:global_steps: 8505	learning_rate: 9.5089e-05	loss: 37.3624	Accuracy: 0.9838	CTCAccuracy: 0.4582	sec/iter: 0.4866
[1,0]<stderr>:INFO:absl:global_steps: 8515	learning_rate: 9.5201e-05	loss: 42.4711	Accuracy: 0.9876	CTCAccuracy: 0.4658	sec/iter: 0.5438
[1,0]<stderr>:INFO:absl:global_steps: 8525	learning_rate: 9.5312e-05	loss: 34.6479	Accuracy: 0.9878	CTCAccuracy: 0.4656	sec/iter: 0.5252
[1,0]<stderr>:INFO:absl:global_steps: 8535	learning_rate: 9.5424e-05	loss: 32.6483	Accuracy: 0.9907	CTCAccuracy: 0.4725	sec/iter: 0.5106
[1,0]<stderr>:INFO:absl:global_steps: 8545	learning_rate: 9.5536e-05	loss: 39.8035	Accuracy: 0.9853	CTCAccuracy: 0.5000	sec/iter: 0.5199
[1,0]<stderr>:INFO:absl:global_steps: 8555	learning_rate: 9.5648e-05	loss: 32.5384	Accuracy: 0.9906	CTCAccuracy: 0.4860	sec/iter: 0.5160
[1,0]<stderr>:INFO:absl:global_steps: 8565	learning_rate: 9.5760e-05	loss: 37.9011	Accuracy: 0.9882	CTCAccuracy: 0.4719	sec/iter: 0.5024
[1,0]<stderr>:INFO:absl:global_steps: 8575	learning_rate: 9.5871e-05	loss: 37.3727	Accuracy: 0.9884	CTCAccuracy: 0.4804	sec/iter: 0.5192
[1,0]<stderr>:INFO:absl:global_steps: 8585	learning_rate: 9.5983e-05	loss: 24.5459	Accuracy: 0.9870	CTCAccuracy: 0.5106	sec/iter: 0.4825
[1,0]<stderr>:INFO:absl:global_steps: 8595	learning_rate: 9.6095e-05	loss: 34.6056	Accuracy: 0.9887	CTCAccuracy: 0.4904	sec/iter: 0.5021
[1,0]<stderr>:INFO:absl:global_steps: 8605	learning_rate: 9.6207e-05	loss: 32.1087	Accuracy: 0.9854	CTCAccuracy: 0.5140	sec/iter: 0.5099
[1,0]<stderr>:INFO:absl:global_steps: 8615	learning_rate: 9.6319e-05	loss: 26.3898	Accuracy: 0.9901	CTCAccuracy: 0.4868	sec/iter: 0.5436
[1,0]<stderr>:INFO:absl:global_steps: 8625	learning_rate: 9.6430e-05	loss: 37.1254	Accuracy: 0.9885	CTCAccuracy: 0.5108	sec/iter: 0.4676
[1,0]<stderr>:INFO:absl:global_steps: 8635	learning_rate: 9.6542e-05	loss: 27.1075	Accuracy: 0.9870	CTCAccuracy: 0.4874	sec/iter: 0.5174
[1,0]<stderr>:INFO:absl:global_steps: 8645	learning_rate: 9.6654e-05	loss: 36.2586	Accuracy: 0.9881	CTCAccuracy: 0.5095	sec/iter: 0.5303
[1,0]<stderr>:INFO:absl:global_steps: 8655	learning_rate: 9.6766e-05	loss: 32.1711	Accuracy: 0.9896	CTCAccuracy: 0.4928	sec/iter: 0.5443
[1,0]<stderr>:INFO:absl:global_steps: 8665	learning_rate: 9.6878e-05	loss: 31.8860	Accuracy: 0.9865	CTCAccuracy: 0.4772	sec/iter: 0.5204
[1,0]<stderr>:INFO:absl:global_steps: 8675	learning_rate: 9.6989e-05	loss: 38.4155	Accuracy: 0.9870	CTCAccuracy: 0.4756	sec/iter: 0.4900
[1,0]<stderr>:INFO:absl:global_steps: 8685	learning_rate: 9.7101e-05	loss: 42.1565	Accuracy: 0.9867	CTCAccuracy: 0.4744	sec/iter: 0.5144
[1,0]<stderr>:INFO:absl:global_steps: 8695	learning_rate: 9.7213e-05	loss: 27.7826	Accuracy: 0.9910	CTCAccuracy: 0.5128	sec/iter: 0.4826
[1,0]<stderr>:INFO:absl:global_steps: 8705	learning_rate: 9.7325e-05	loss: 29.7050	Accuracy: 0.9933	CTCAccuracy: 0.4876	sec/iter: 0.4835
[1,0]<stderr>:INFO:absl:global_steps: 8715	learning_rate: 9.7437e-05	loss: 23.6663	Accuracy: 0.9902	CTCAccuracy: 0.5135	sec/iter: 0.5212
[1,0]<stderr>:INFO:absl:global_steps: 8725	learning_rate: 9.7548e-05	loss: 30.2420	Accuracy: 0.9864	CTCAccuracy: 0.5294	sec/iter: 0.5480
[1,0]<stderr>:INFO:absl:global_steps: 8735	learning_rate: 9.7660e-05	loss: 30.9286	Accuracy: 0.9867	CTCAccuracy: 0.5099	sec/iter: 0.4774
[1,0]<stderr>:INFO:absl:global_steps: 8745	learning_rate: 9.7772e-05	loss: 35.6104	Accuracy: 0.9880	CTCAccuracy: 0.5094	sec/iter: 0.4760
[1,0]<stderr>:INFO:absl:global_steps: 8755	learning_rate: 9.7884e-05	loss: 31.7787	Accuracy: 0.9907	CTCAccuracy: 0.5039	sec/iter: 0.4890
[1,0]<stderr>:INFO:absl:global_steps: 8765	learning_rate: 9.7996e-05	loss: 35.1710	Accuracy: 0.9899	CTCAccuracy: 0.5104	sec/iter: 0.5148
[1,0]<stderr>:INFO:absl:global_steps: 8775	learning_rate: 9.8107e-05	loss: 28.2667	Accuracy: 0.9898	CTCAccuracy: 0.5059	sec/iter: 0.4969
[1,0]<stderr>:INFO:absl:global_steps: 8785	learning_rate: 9.8219e-05	loss: 33.1183	Accuracy: 0.9914	CTCAccuracy: 0.5210	sec/iter: 0.4999
[1,0]<stderr>:INFO:absl:global_steps: 8795	learning_rate: 9.8331e-05	loss: 33.2417	Accuracy: 0.9920	CTCAccuracy: 0.5105	sec/iter: 0.4878
[1,0]<stderr>:INFO:absl:global_steps: 8805	learning_rate: 9.8443e-05	loss: 28.9621	Accuracy: 0.9937	CTCAccuracy: 0.5034	sec/iter: 0.5456
[1,0]<stderr>:INFO:absl:global_steps: 8815	learning_rate: 9.8555e-05	loss: 31.2436	Accuracy: 0.9902	CTCAccuracy: 0.4870	sec/iter: 0.5206
[1,0]<stderr>:INFO:absl:global_steps: 8825	learning_rate: 9.8666e-05	loss: 32.1254	Accuracy: 0.9867	CTCAccuracy: 0.5194	sec/iter: 0.4951
[1,0]<stderr>:INFO:absl:global_steps: 8835	learning_rate: 9.8778e-05	loss: 33.6408	Accuracy: 0.9901	CTCAccuracy: 0.4971	sec/iter: 0.5345
[1,0]<stderr>:INFO:absl:global_steps: 8845	learning_rate: 9.8890e-05	loss: 36.1510	Accuracy: 0.9911	CTCAccuracy: 0.5289	sec/iter: 0.5244
[1,0]<stderr>:INFO:absl:global_steps: 8855	learning_rate: 9.9002e-05	loss: 24.7454	Accuracy: 0.9872	CTCAccuracy: 0.5090	sec/iter: 0.5080
[1,0]<stderr>:INFO:absl:global_steps: 8865	learning_rate: 9.9114e-05	loss: 28.0565	Accuracy: 0.9869	CTCAccuracy: 0.5427	sec/iter: 0.5062
[1,0]<stderr>:INFO:absl:global_steps: 8875	learning_rate: 9.9226e-05	loss: 31.0470	Accuracy: 0.9925	CTCAccuracy: 0.5036	sec/iter: 0.5193
[1,0]<stderr>:INFO:absl:global_steps: 8885	learning_rate: 9.9337e-05	loss: 33.2845	Accuracy: 0.9935	CTCAccuracy: 0.5141	sec/iter: 0.5075
[1,0]<stderr>:INFO:absl:global_steps: 8895	learning_rate: 9.9449e-05	loss: 33.5685	Accuracy: 0.9927	CTCAccuracy: 0.5340	sec/iter: 0.5175
[1,0]<stderr>:INFO:absl:global_steps: 8905	learning_rate: 9.9561e-05	loss: 27.7425	Accuracy: 0.9929	CTCAccuracy: 0.5486	sec/iter: 0.5005
[1,0]<stderr>:INFO:absl:global_steps: 8915	learning_rate: 9.9673e-05	loss: 34.7307	Accuracy: 0.9912	CTCAccuracy: 0.5390	sec/iter: 0.5109
[1,0]<stderr>:INFO:absl:global_steps: 8925	learning_rate: 9.9785e-05	loss: 40.4683	Accuracy: 0.9853	CTCAccuracy: 0.5061	sec/iter: 0.5308
[1,0]<stderr>:INFO:absl:global_steps: 8935	learning_rate: 9.9896e-05	loss: 29.7055	Accuracy: 0.9912	CTCAccuracy: 0.5330	sec/iter: 0.5096
[1,0]<stderr>:INFO:absl:global_steps: 8945	learning_rate: 1.0001e-04	loss: 28.6987	Accuracy: 0.9936	CTCAccuracy: 0.5465	sec/iter: 0.4881
[1,0]<stderr>:INFO:absl:global_steps: 8955	learning_rate: 1.0012e-04	loss: 36.6390	Accuracy: 0.9882	CTCAccuracy: 0.5153	sec/iter: 0.4985
[1,0]<stderr>:INFO:absl:global_steps: 8965	learning_rate: 1.0023e-04	loss: 29.1239	Accuracy: 0.9949	CTCAccuracy: 0.5623	sec/iter: 0.4945
[1,0]<stderr>:INFO:absl:global_steps: 8975	learning_rate: 1.0034e-04	loss: 31.1758	Accuracy: 0.9917	CTCAccuracy: 0.5188	sec/iter: 0.5149
[1,0]<stderr>:INFO:absl:global_steps: 8985	learning_rate: 1.0046e-04	loss: 35.3982	Accuracy: 0.9918	CTCAccuracy: 0.5216	sec/iter: 0.5145
[1,0]<stderr>:INFO:absl:global_steps: 8995	learning_rate: 1.0057e-04	loss: 31.7655	Accuracy: 0.9924	CTCAccuracy: 0.5131	sec/iter: 0.5135
[1,0]<stderr>:INFO:absl:global_steps: 9005	learning_rate: 1.0068e-04	loss: 34.3454	Accuracy: 0.9935	CTCAccuracy: 0.5291	sec/iter: 0.5045
[1,0]<stderr>:INFO:absl:global_steps: 9015	learning_rate: 1.0079e-04	loss: 27.2916	Accuracy: 0.9908	CTCAccuracy: 0.5570	sec/iter: 0.5187
[1,0]<stderr>:INFO:absl:global_steps: 9025	learning_rate: 1.0090e-04	loss: 33.6782	Accuracy: 0.9899	CTCAccuracy: 0.5066	sec/iter: 0.5291
[1,0]<stderr>:INFO:absl:global_steps: 9035	learning_rate: 1.0101e-04	loss: 33.0657	Accuracy: 0.9946	CTCAccuracy: 0.5507	sec/iter: 0.5032
[1,0]<stderr>:INFO:absl:global_steps: 9045	learning_rate: 1.0113e-04	loss: 26.1600	Accuracy: 0.9906	CTCAccuracy: 0.5431	sec/iter: 0.5069
[1,0]<stderr>:INFO:absl:global_steps: 9055	learning_rate: 1.0124e-04	loss: 26.9438	Accuracy: 0.9873	CTCAccuracy: 0.5475	sec/iter: 0.4955
[1,0]<stderr>:INFO:absl:global_steps: 9065	learning_rate: 1.0135e-04	loss: 27.4049	Accuracy: 0.9937	CTCAccuracy: 0.5608	sec/iter: 0.5323
[1,0]<stderr>:INFO:absl:global_steps: 9075	learning_rate: 1.0146e-04	loss: 30.7729	Accuracy: 0.9933	CTCAccuracy: 0.5063	sec/iter: 0.5319
[1,0]<stderr>:INFO:absl:global_steps: 9085	learning_rate: 1.0157e-04	loss: 29.1127	Accuracy: 0.9899	CTCAccuracy: 0.5620	sec/iter: 0.5065
[1,0]<stderr>:INFO:absl:global_steps: 9095	learning_rate: 1.0169e-04	loss: 39.1329	Accuracy: 0.9926	CTCAccuracy: 0.5339	sec/iter: 0.5493
[1,0]<stderr>:INFO:absl:global_steps: 9105	learning_rate: 1.0180e-04	loss: 29.4717	Accuracy: 0.9926	CTCAccuracy: 0.5332	sec/iter: 0.5287
[1,0]<stderr>:INFO:absl:global_steps: 9115	learning_rate: 1.0191e-04	loss: 29.4885	Accuracy: 0.9948	CTCAccuracy: 0.5578	sec/iter: 0.4985
[1,0]<stderr>:INFO:absl:global_steps: 9125	learning_rate: 1.0202e-04	loss: 25.6022	Accuracy: 0.9881	CTCAccuracy: 0.5646	sec/iter: 0.4615
[1,0]<stderr>:INFO:absl:global_steps: 9135	learning_rate: 1.0213e-04	loss: 32.0648	Accuracy: 0.9919	CTCAccuracy: 0.5754	sec/iter: 0.5339
[1,0]<stderr>:INFO:absl:global_steps: 9145	learning_rate: 1.0224e-04	loss: 35.9456	Accuracy: 0.9915	CTCAccuracy: 0.5503	sec/iter: 0.5220
[1,0]<stderr>:INFO:absl:global_steps: 9155	learning_rate: 1.0236e-04	loss: 33.9234	Accuracy: 0.9878	CTCAccuracy: 0.5259	sec/iter: 0.5238
[1,0]<stderr>:INFO:absl:global_steps: 9165	learning_rate: 1.0247e-04	loss: 22.4294	Accuracy: 0.9915	CTCAccuracy: 0.5516	sec/iter: 0.5296
[1,0]<stderr>:INFO:absl:global_steps: 9175	learning_rate: 1.0258e-04	loss: 29.7635	Accuracy: 0.9901	CTCAccuracy: 0.5584	sec/iter: 0.5062
[1,0]<stderr>:INFO:absl:global_steps: 9185	learning_rate: 1.0269e-04	loss: 28.0566	Accuracy: 0.9950	CTCAccuracy: 0.5638	sec/iter: 0.4988
[1,0]<stderr>:INFO:absl:global_steps: 9195	learning_rate: 1.0280e-04	loss: 26.9499	Accuracy: 0.9917	CTCAccuracy: 0.5874	sec/iter: 0.4927
[1,0]<stderr>:INFO:absl:global_steps: 9205	learning_rate: 1.0292e-04	loss: 28.1017	Accuracy: 0.9901	CTCAccuracy: 0.5575	sec/iter: 0.5265
[1,0]<stderr>:INFO:absl:global_steps: 9215	learning_rate: 1.0303e-04	loss: 35.9249	Accuracy: 0.9895	CTCAccuracy: 0.5767	sec/iter: 0.4834
[1,0]<stderr>:INFO:absl:global_steps: 9225	learning_rate: 1.0314e-04	loss: 26.8866	Accuracy: 0.9904	CTCAccuracy: 0.5675	sec/iter: 0.5123
[1,0]<stderr>:INFO:absl:global_steps: 9235	learning_rate: 1.0325e-04	loss: 24.1793	Accuracy: 0.9912	CTCAccuracy: 0.5618	sec/iter: 0.5099
[1,0]<stderr>:INFO:absl:global_steps: 9245	learning_rate: 1.0336e-04	loss: 22.9745	Accuracy: 0.9894	CTCAccuracy: 0.5564	sec/iter: 0.5110
[1,0]<stderr>:INFO:absl:global_steps: 9255	learning_rate: 1.0347e-04	loss: 24.8152	Accuracy: 0.9918	CTCAccuracy: 0.5715	sec/iter: 0.5206
[1,0]<stderr>:INFO:absl:global_steps: 9265	learning_rate: 1.0359e-04	loss: 20.3393	Accuracy: 0.9911	CTCAccuracy: 0.5631	sec/iter: 0.4872
[1,0]<stderr>:INFO:absl:global_steps: 9275	learning_rate: 1.0370e-04	loss: 26.2768	Accuracy: 0.9928	CTCAccuracy: 0.5824	sec/iter: 0.5005
[1,0]<stderr>:INFO:absl:global_steps: 9285	learning_rate: 1.0381e-04	loss: 22.7403	Accuracy: 0.9932	CTCAccuracy: 0.5836	sec/iter: 0.5176
[1,0]<stderr>:INFO:absl:global_steps: 9295	learning_rate: 1.0392e-04	loss: 22.4265	Accuracy: 0.9916	CTCAccuracy: 0.5730	sec/iter: 0.5017
[1,0]<stderr>:INFO:absl:global_steps: 9305	learning_rate: 1.0403e-04	loss: 28.8755	Accuracy: 0.9906	CTCAccuracy: 0.5587	sec/iter: 0.5163
[1,0]<stderr>:INFO:absl:global_steps: 9315	learning_rate: 1.0414e-04	loss: 22.5755	Accuracy: 0.9922	CTCAccuracy: 0.5899	sec/iter: 0.4861
[1,0]<stderr>:INFO:absl:global_steps: 9325	learning_rate: 1.0426e-04	loss: 33.3515	Accuracy: 0.9931	CTCAccuracy: 0.5699	sec/iter: 0.4930
[1,0]<stderr>:INFO:absl:global_steps: 9335	learning_rate: 1.0437e-04	loss: 24.9352	Accuracy: 0.9942	CTCAccuracy: 0.5784	sec/iter: 0.5034
[1,0]<stderr>:INFO:absl:global_steps: 9345	learning_rate: 1.0448e-04	loss: 25.4086	Accuracy: 0.9930	CTCAccuracy: 0.6085	sec/iter: 0.5172
[1,0]<stderr>:INFO:absl:global_steps: 9355	learning_rate: 1.0459e-04	loss: 27.3562	Accuracy: 0.9873	CTCAccuracy: 0.5705	sec/iter: 0.4941
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 4
[1,0]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,0]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,0]<stdout>:before filter by unk:893
[1,1]<stderr>:INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/dev.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
[1,1]<stdout>:Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
[1,0]<stdout>:after filter by unk:893
[1,0]<stdout>:afiter filter by input length:893
[1,0]<stdout>:after filter by output length:893
[1,1]<stderr>:INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.csv
[1,1]<stdout>:before filter by unk:893
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stdout>:after filter by unk:893
[1,1]<stdout>:afiter filter by input length:893
[1,1]<stdout>:after filter by output length:893
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,1]<stderr>:WARNING:absl:the length of logits is shorter than that of labels
[1,0]<stderr>:INFO:absl:loss: 16.1320	Accuracy: 0.9774	CTCAccuracy: 0.6780	
[1,0]<stderr>:INFO:absl:loss: 21.0539	Accuracy: 0.9920	CTCAccuracy: 0.6275	
[1,0]<stderr>:INFO:absl:loss: 22.5635	Accuracy: 0.9935	CTCAccuracy: 0.6276	
[1,0]<stderr>:INFO:absl:loss: 22.4962	Accuracy: 0.9934	CTCAccuracy: 0.6276	
[1,0]<stderr>:INFO:absl:loss: 21.6874	Accuracy: 0.9941	CTCAccuracy: 0.6227	
[1,0]<stderr>:INFO:absl:loss: 27.3983	Accuracy: 0.9945	CTCAccuracy: 0.6172	
[1,0]<stderr>:INFO:absl:loss: 28.6037	Accuracy: 0.9944	CTCAccuracy: 0.6128	
[1,0]<stderr>:INFO:absl:loss: 30.1197	Accuracy: 0.9936	CTCAccuracy: 0.6099	
[1,0]<stderr>:INFO:absl:loss: 29.7729	Accuracy: 0.9937	CTCAccuracy: 0.6082	
[1,0]<stderr>:INFO:absl:loss: 32.0346	Accuracy: 0.9937	CTCAccuracy: 0.6067	
[1,0]<stderr>:INFO:absl:loss: 23.4562	Accuracy: 0.9939	CTCAccuracy: 0.6062	
[1,0]<stderr>:INFO:absl:loss: 30.9007	Accuracy: 0.9942	CTCAccuracy: 0.6054	
[1,0]<stderr>:INFO:absl:epoch: 4	loss: 24.9274	Accuracy: 0.9942	CTCAccuracy: 0.6054	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/mtl_transformer_ctc/ckpt
Training language model ...
[1,1]<stderr>:INFO:absl:hparams: [('batch_size', 64), ('ckpt', 'examples/asr/thchs30/ckpts/rnnlm'), ('cls', 'main'), ('dataset_builder', 'language_dataset'), ('decode_config', None), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}}), ('model', 'rnnlm'), ('model_config', {'d_model': 512, 'rnn_type': 'lstm', 'num_layer': 3, 'dropout_rate': 0.1, 'sos': -1, 'eos': -1}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 20), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 8000, 'k': 0.5, 'decay_steps': 127600, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [0]), ('sorta_epoch', 1), ('summary_dir', None), ('testset_config', None), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}})]
[1,0]<stderr>:INFO:absl:hparams: [('batch_size', 64), ('ckpt', 'examples/asr/thchs30/ckpts/rnnlm'), ('cls', 'main'), ('dataset_builder', 'language_dataset'), ('decode_config', None), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}}), ('model', 'rnnlm'), ('model_config', {'d_model': 512, 'rnn_type': 'lstm', 'num_layer': 3, 'dropout_rate': 0.1, 'sos': -1, 'eos': -1}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 20), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 8000, 'k': 0.5, 'decay_steps': 127600, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [0]), ('sorta_epoch', 1), ('summary_dir', None), ('testset_config', None), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}})]
[1,1]<stderr>:2020-04-11 15:01:06.439842: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
[1,0]<stderr>:2020-04-11 15:01:06.439841: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
[1,1]<stderr>:2020-04-11 15:01:07.268556: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.268565: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.269630: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,0]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,0]<stderr>:pciBusID: 0000:04:01.0
[1,1]<stderr>:2020-04-11 15:01:07.269646: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,1]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,1]<stderr>:pciBusID: 0000:04:01.0
[1,0]<stderr>:2020-04-11 15:01:07.269736: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.269745: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.270680: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 1 with properties: 
[1,0]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,0]<stderr>:pciBusID: 0000:04:02.0
[1,1]<stderr>:2020-04-11 15:01:07.270700: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 1 with properties: 
[1,1]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,1]<stderr>:pciBusID: 0000:04:02.0
[1,0]<stderr>:2020-04-11 15:01:07.271040: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.271040: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.272607: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.272670: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.274041: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.274039: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.274370: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.274370: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.276171: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.276170: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.277532: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.277528: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.282239: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,1]<stderr>:2020-04-11 15:01:07.282244: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,0]<stderr>:2020-04-11 15:01:07.282428: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.282428: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.283527: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.283578: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.284507: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.284543: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.285425: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.285477: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.286275: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0, 1
[1,1]<stderr>:2020-04-11 15:01:07.286344: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0, 1
[1,0]<stderr>:INFO:absl:hparams: [('batch_size', 64), ('ckpt', 'examples/asr/thchs30/ckpts/rnnlm'), ('cls', 'main'), ('dataset_builder', 'language_dataset'), ('decode_config', None), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}}), ('model', 'rnnlm'), ('model_config', {'d_model': 512, 'rnn_type': 'lstm', 'num_layer': 3, 'dropout_rate': 0.1, 'sos': -1, 'eos': -1}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 20), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 8000, 'k': 0.5, 'decay_steps': 127600, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [0]), ('sorta_epoch', 1), ('summary_dir', None), ('testset_config', None), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}})]
[1,1]<stderr>:INFO:absl:hparams: [('batch_size', 64), ('ckpt', 'examples/asr/thchs30/ckpts/rnnlm'), ('cls', 'main'), ('dataset_builder', 'language_dataset'), ('decode_config', None), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}}), ('model', 'rnnlm'), ('model_config', {'d_model': 512, 'rnn_type': 'lstm', 'num_layer': 3, 'dropout_rate': 0.1, 'sos': -1, 'eos': -1}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 20), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 8000, 'k': 0.5, 'decay_steps': 127600, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [0]), ('sorta_epoch', 1), ('summary_dir', None), ('testset_config', None), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}})]
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.trans.csv
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.trans.csv
[1,1]<stderr>:  0%|          | 0/9999 [00:00<?, ?it/s][1,0]<stderr>:  0%|          | 0/9999 [00:00<?, ?it/s][1,1]<stderr>: 52%|█████▏    | 5190/9999 [00:00<00:00, 51899.80it/s][1,0]<stderr>: 52%|█████▏    | 5240/9999 [00:00<00:00, 52394.93it/s][1,1]<stderr>:100%|██████████| 9999/9999 [00:00<00:00, 50178.63it/s][1,0]<stderr>:100%|██████████| 9999/9999 [00:00<00:00, 50124.23it/s][1,1]<stderr>:2020-04-11 15:01:07.599745: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
[1,0]<stderr>:2020-04-11 15:01:07.600976: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
[1,1]<stderr>:2020-04-11 15:01:07.607850: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2294605000 Hz
[1,1]<stderr>:2020-04-11 15:01:07.608528: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55d6f6b6eea0 executing computations on platform Host. Devices:
[1,1]<stderr>:2020-04-11 15:01:07.608556: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
[1,0]<stderr>:2020-04-11 15:01:07.608755: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2294605000 Hz
[1,0]<stderr>:2020-04-11 15:01:07.609408: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x563b487fae30 executing computations on platform Host. Devices:
[1,0]<stderr>:2020-04-11 15:01:07.609433: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
[1,0]<stderr>:2020-04-11 15:01:07.854783: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.855500: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x563b4883dda0 executing computations on platform CUDA. Devices:
[1,0]<stderr>:2020-04-11 15:01:07.855537: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Tesla V100-PCIE-16GB, Compute Capability 7.0
[1,1]<stderr>:2020-04-11 15:01:07.855823: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.855854: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.856875: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,0]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,0]<stderr>:pciBusID: 0000:04:01.0
[1,0]<stderr>:2020-04-11 15:01:07.856989: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.857006: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.857025: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.857037: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.857052: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.857067: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.857082: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,1]<stderr>:2020-04-11 15:01:07.857107: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55d6f6bb1e10 executing computations on platform CUDA. Devices:
[1,1]<stderr>:2020-04-11 15:01:07.857144: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Tesla V100-PCIE-16GB, Compute Capability 7.0
[1,0]<stderr>:2020-04-11 15:01:07.857159: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.857440: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.858035: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.858175: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
[1,1]<stderr>:name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
[1,1]<stderr>:pciBusID: 0000:04:02.0
[1,1]<stderr>:2020-04-11 15:01:07.858258: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.858279: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.858294: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.858311: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.858328: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.858345: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.858362: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
[1,1]<stderr>:2020-04-11 15:01:07.858426: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.858700: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
[1,0]<stderr>:2020-04-11 15:01:07.858823: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,1]<stderr>:2020-04-11 15:01:07.859064: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.859505: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 1
[1,1]<stderr>:2020-04-11 15:01:07.859588: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
[1,0]<stderr>:2020-04-11 15:01:07.861067: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
[1,0]<stderr>:2020-04-11 15:01:07.861091: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
[1,0]<stderr>:2020-04-11 15:01:07.861097: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
[1,0]<stderr>:2020-04-11 15:01:07.861461: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.862409: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.862425: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
[1,1]<stderr>:2020-04-11 15:01:07.862443: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      1 
[1,1]<stderr>:2020-04-11 15:01:07.862452: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 1:   N 
[1,1]<stderr>:2020-04-11 15:01:07.862786: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,0]<stderr>:2020-04-11 15:01:07.863492: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14926 MB memory) -> physical GPU (device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:04:01.0, compute capability: 7.0)
[1,1]<stderr>:2020-04-11 15:01:07.863610: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
[1,1]<stderr>:2020-04-11 15:01:07.864066: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14926 MB memory) -> physical GPU (device: 1, name: Tesla V100-PCIE-16GB, pci bus id: 0000:04:02.0, compute capability: 7.0)
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:trying to restore from : examples/asr/thchs30/ckpts/rnnlm
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:trying to restore from : examples/asr/thchs30/ckpts/rnnlm
[1,0]<stderr>:2020-04-11 15:01:09.294282: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,1]<stderr>:2020-04-11 15:01:09.326514: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.trans.csv
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/train.trans.csv
[1,0]<stderr>:  0%|          | 0/9999 [00:00<?, ?it/s][1,1]<stderr>:  0%|          | 0/9999 [00:00<?, ?it/s][1,0]<stderr>: 57%|█████▋    | 5689/9999 [00:00<00:00, 56689.61it/s][1,1]<stderr>: 50%|████▉     | 4978/9999 [00:00<00:00, 49778.15it/s][1,0]<stderr>:100%|██████████| 9999/9999 [00:00<00:00, 56335.87it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:Creates the sub-dataset which is the 0 part of 2
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 0
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>: 98%|█████████▊| 9753/9999 [00:00<00:00, 49148.71it/s][1,1]<stderr>:100%|██████████| 9999/9999 [00:00<00:00, 48660.01it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:Creates the sub-dataset which is the 1 part of 2
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1	learning_rate: 3.0882e-08	loss: 8.3966	AverageLoss: 7.8890	
[1,0]<stderr>:INFO:absl:global_steps: 11	learning_rate: 3.3970e-07	loss: 7.8891	AverageLoss: 7.8891	sec/iter: 0.0948
[1,0]<stderr>:INFO:absl:global_steps: 21	learning_rate: 6.4851e-07	loss: 7.8891	AverageLoss: 7.8891	sec/iter: 0.0950
[1,0]<stderr>:INFO:absl:global_steps: 31	learning_rate: 9.5733e-07	loss: 7.8890	AverageLoss: 7.8891	sec/iter: 0.0966
[1,0]<stderr>:INFO:absl:global_steps: 41	learning_rate: 1.2661e-06	loss: 7.8890	AverageLoss: 7.8891	sec/iter: 0.1014
[1,0]<stderr>:INFO:absl:global_steps: 51	learning_rate: 1.5750e-06	loss: 7.8890	AverageLoss: 7.8890	sec/iter: 0.1037
[1,0]<stderr>:INFO:absl:global_steps: 61	learning_rate: 1.8838e-06	loss: 7.8889	AverageLoss: 7.8890	sec/iter: 0.1062
[1,0]<stderr>:INFO:absl:global_steps: 71	learning_rate: 2.1926e-06	loss: 7.8889	AverageLoss: 7.8889	sec/iter: 0.1066
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 0
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 53619.77it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 49307.68it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 8.6607	AverageLoss: 7.8888	
[1,0]<stderr>:INFO:absl:loss: 8.0905	AverageLoss: 7.8889	
[1,0]<stderr>:INFO:absl:epoch: 0	loss: 8.0641	AverageLoss: 7.8889	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 1
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 79	learning_rate: 2.4396e-06	loss: 7.8889	AverageLoss: 7.8889	sec/iter: 0.7105
[1,0]<stderr>:INFO:absl:global_steps: 89	learning_rate: 2.7485e-06	loss: 7.8889	AverageLoss: 7.8889	sec/iter: 0.1072
[1,0]<stderr>:INFO:absl:global_steps: 99	learning_rate: 3.0573e-06	loss: 7.8888	AverageLoss: 7.8888	sec/iter: 0.1069
[1,0]<stderr>:INFO:absl:global_steps: 109	learning_rate: 3.3661e-06	loss: 7.8887	AverageLoss: 7.8888	sec/iter: 0.1004
[1,0]<stderr>:INFO:absl:global_steps: 119	learning_rate: 3.6749e-06	loss: 7.8886	AverageLoss: 7.8887	sec/iter: 0.1026
[1,0]<stderr>:INFO:absl:global_steps: 129	learning_rate: 3.9837e-06	loss: 7.8886	AverageLoss: 7.8886	sec/iter: 0.1073
[1,0]<stderr>:INFO:absl:global_steps: 139	learning_rate: 4.2925e-06	loss: 8.0650	AverageLoss: 7.8885	sec/iter: 0.1056
[1,0]<stderr>:INFO:absl:global_steps: 149	learning_rate: 4.6014e-06	loss: 7.8883	AverageLoss: 7.8884	sec/iter: 0.1022
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 1
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52296.15it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 47352.48it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 8.6599	AverageLoss: 7.8881	
[1,0]<stderr>:INFO:absl:loss: 8.0897	AverageLoss: 7.8882	
[1,0]<stderr>:INFO:absl:epoch: 1	loss: 8.0634	AverageLoss: 7.8882	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 2
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 157	learning_rate: 4.8484e-06	loss: 7.8882	AverageLoss: 7.8882	sec/iter: 0.6798
[1,0]<stderr>:INFO:absl:global_steps: 167	learning_rate: 5.1572e-06	loss: 7.8881	AverageLoss: 7.8881	sec/iter: 0.1086
[1,0]<stderr>:INFO:absl:global_steps: 177	learning_rate: 5.4660e-06	loss: 7.9260	AverageLoss: 7.8879	sec/iter: 0.0980
[1,0]<stderr>:INFO:absl:global_steps: 187	learning_rate: 5.7749e-06	loss: 8.0489	AverageLoss: 7.8877	sec/iter: 0.1043
[1,0]<stderr>:INFO:absl:global_steps: 197	learning_rate: 6.0837e-06	loss: 7.8870	AverageLoss: 7.8874	sec/iter: 0.1014
[1,0]<stderr>:INFO:absl:global_steps: 207	learning_rate: 6.3925e-06	loss: 7.9606	AverageLoss: 7.8870	sec/iter: 0.1112
[1,0]<stderr>:INFO:absl:global_steps: 217	learning_rate: 6.7013e-06	loss: 7.8859	AverageLoss: 7.8861	sec/iter: 0.1073
[1,0]<stderr>:INFO:absl:global_steps: 227	learning_rate: 7.0101e-06	loss: 7.8845	AverageLoss: 7.8851	sec/iter: 0.1078
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 2
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52440.56it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 49882.93it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 8.6534	AverageLoss: 7.8822	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:loss: 8.0826	AverageLoss: 7.8820	
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:epoch: 2	loss: 8.0570	AverageLoss: 7.8819	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 3
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 235	learning_rate: 7.2572e-06	loss: 8.0102	AverageLoss: 7.8818	sec/iter: 0.7134
[1,0]<stderr>:INFO:absl:global_steps: 245	learning_rate: 7.5660e-06	loss: 7.8763	AverageLoss: 7.8793	sec/iter: 0.1035
[1,0]<stderr>:INFO:absl:global_steps: 255	learning_rate: 7.8748e-06	loss: 7.8586	AverageLoss: 7.8689	sec/iter: 0.1039
[1,0]<stderr>:INFO:absl:global_steps: 265	learning_rate: 8.1836e-06	loss: 7.8191	AverageLoss: 7.8397	sec/iter: 0.1025
[1,0]<stderr>:INFO:absl:global_steps: 275	learning_rate: 8.4924e-06	loss: 7.7043	AverageLoss: 7.7567	sec/iter: 0.1049
[1,0]<stderr>:INFO:absl:global_steps: 285	learning_rate: 8.8013e-06	loss: 7.5859	AverageLoss: 7.6465	sec/iter: 0.1052
[1,0]<stderr>:INFO:absl:global_steps: 295	learning_rate: 9.1101e-06	loss: 7.5236	AverageLoss: 7.5450	sec/iter: 0.1043
[1,0]<stderr>:INFO:absl:global_steps: 305	learning_rate: 9.4189e-06	loss: 7.3985	AverageLoss: 7.4439	sec/iter: 0.1097
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 3
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52014.06it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52440.56it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 8.0223	AverageLoss: 7.3074	
[1,0]<stderr>:INFO:absl:loss: 7.4846	AverageLoss: 7.3371	
[1,0]<stderr>:INFO:absl:epoch: 3	loss: 7.4973	AverageLoss: 7.3341	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 4
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 313	learning_rate: 9.6659e-06	loss: 7.3676	AverageLoss: 7.3676	sec/iter: 0.6750
[1,0]<stderr>:INFO:absl:global_steps: 323	learning_rate: 9.9748e-06	loss: 7.4201	AverageLoss: 7.3214	sec/iter: 0.1101
[1,0]<stderr>:INFO:absl:global_steps: 333	learning_rate: 1.0284e-05	loss: 7.4186	AverageLoss: 7.2905	sec/iter: 0.1044
[1,0]<stderr>:INFO:absl:global_steps: 343	learning_rate: 1.0592e-05	loss: 7.1866	AverageLoss: 7.2489	sec/iter: 0.1112
[1,0]<stderr>:INFO:absl:global_steps: 353	learning_rate: 1.0901e-05	loss: 7.1453	AverageLoss: 7.1707	sec/iter: 0.1108
[1,0]<stderr>:INFO:absl:global_steps: 363	learning_rate: 1.1210e-05	loss: 7.1087	AverageLoss: 7.1495	sec/iter: 0.1021
[1,0]<stderr>:INFO:absl:global_steps: 373	learning_rate: 1.1519e-05	loss: 7.1324	AverageLoss: 7.1698	sec/iter: 0.1035
[1,0]<stderr>:INFO:absl:global_steps: 383	learning_rate: 1.1828e-05	loss: 7.2097	AverageLoss: 7.1425	sec/iter: 0.0985
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 4
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 49659.79it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50541.98it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.6876	AverageLoss: 7.0025	
[1,0]<stderr>:INFO:absl:loss: 7.1915	AverageLoss: 7.0661	
[1,0]<stderr>:INFO:absl:epoch: 4	loss: 7.2181	AverageLoss: 7.0606	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 5
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 391	learning_rate: 1.2075e-05	loss: 7.1366	AverageLoss: 7.1366	sec/iter: 0.7155
[1,0]<stderr>:INFO:absl:global_steps: 401	learning_rate: 1.2384e-05	loss: 7.0832	AverageLoss: 7.1136	sec/iter: 0.1052
[1,0]<stderr>:INFO:absl:global_steps: 411	learning_rate: 1.2692e-05	loss: 7.0521	AverageLoss: 7.0512	sec/iter: 0.1115
[1,0]<stderr>:INFO:absl:global_steps: 421	learning_rate: 1.3001e-05	loss: 7.1386	AverageLoss: 7.0362	sec/iter: 0.1038
[1,0]<stderr>:INFO:absl:global_steps: 431	learning_rate: 1.3310e-05	loss: 7.0867	AverageLoss: 7.0633	sec/iter: 0.1043
[1,0]<stderr>:INFO:absl:global_steps: 441	learning_rate: 1.3619e-05	loss: 7.0503	AverageLoss: 7.0183	sec/iter: 0.1085
[1,0]<stderr>:INFO:absl:global_steps: 451	learning_rate: 1.3928e-05	loss: 7.0296	AverageLoss: 7.0362	sec/iter: 0.1118
[1,0]<stderr>:INFO:absl:global_steps: 461	learning_rate: 1.4236e-05	loss: 6.9528	AverageLoss: 7.0336	sec/iter: 0.1030
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 5
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52291.77it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50205.57it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.5858	AverageLoss: 6.9097	
[1,0]<stderr>:INFO:absl:loss: 7.0988	AverageLoss: 6.9751	
[1,0]<stderr>:INFO:absl:epoch: 5	loss: 7.1263	AverageLoss: 6.9704	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 6
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 469	learning_rate: 1.4483e-05	loss: 6.9303	AverageLoss: 6.9303	sec/iter: 0.7141
[1,0]<stderr>:INFO:absl:global_steps: 479	learning_rate: 1.4792e-05	loss: 7.3012	AverageLoss: 6.9860	sec/iter: 0.1051
[1,0]<stderr>:INFO:absl:global_steps: 489	learning_rate: 1.5101e-05	loss: 7.0335	AverageLoss: 7.0128	sec/iter: 0.1017
[1,0]<stderr>:INFO:absl:global_steps: 499	learning_rate: 1.5410e-05	loss: 7.2175	AverageLoss: 6.9838	sec/iter: 0.1044
[1,0]<stderr>:INFO:absl:global_steps: 509	learning_rate: 1.5719e-05	loss: 7.0570	AverageLoss: 6.9884	sec/iter: 0.1064
[1,0]<stderr>:INFO:absl:global_steps: 519	learning_rate: 1.6028e-05	loss: 7.0149	AverageLoss: 6.9881	sec/iter: 0.1035
[1,0]<stderr>:INFO:absl:global_steps: 529	learning_rate: 1.6336e-05	loss: 7.0084	AverageLoss: 6.9606	sec/iter: 0.1079
[1,0]<stderr>:INFO:absl:global_steps: 539	learning_rate: 1.6645e-05	loss: 6.8632	AverageLoss: 6.9768	sec/iter: 0.1037
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 6
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 53719.85it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 48618.87it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.5412	AverageLoss: 6.8692	
[1,0]<stderr>:INFO:absl:loss: 7.0568	AverageLoss: 6.9336	
[1,0]<stderr>:INFO:absl:epoch: 6	loss: 7.0844	AverageLoss: 6.9293	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 7
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 547	learning_rate: 1.6892e-05	loss: 7.0028	AverageLoss: 7.0028	sec/iter: 0.6948
[1,0]<stderr>:INFO:absl:global_steps: 557	learning_rate: 1.7201e-05	loss: 7.0004	AverageLoss: 6.9621	sec/iter: 0.1062
[1,0]<stderr>:INFO:absl:global_steps: 567	learning_rate: 1.7510e-05	loss: 6.9015	AverageLoss: 6.9689	sec/iter: 0.1061
[1,0]<stderr>:INFO:absl:global_steps: 577	learning_rate: 1.7819e-05	loss: 7.0566	AverageLoss: 6.9803	sec/iter: 0.1033
[1,0]<stderr>:INFO:absl:global_steps: 587	learning_rate: 1.8128e-05	loss: 6.9832	AverageLoss: 6.9419	sec/iter: 0.1028
[1,0]<stderr>:INFO:absl:global_steps: 597	learning_rate: 1.8436e-05	loss: 6.9885	AverageLoss: 6.9519	sec/iter: 0.1060
[1,0]<stderr>:INFO:absl:global_steps: 607	learning_rate: 1.8745e-05	loss: 7.2440	AverageLoss: 6.9004	sec/iter: 0.1051
[1,0]<stderr>:INFO:absl:global_steps: 617	learning_rate: 1.9054e-05	loss: 7.0128	AverageLoss: 6.9609	sec/iter: 0.1039
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 7
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 55579.28it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50916.16it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.5107	AverageLoss: 6.8413	
[1,0]<stderr>:INFO:absl:loss: 7.0233	AverageLoss: 6.9078	
[1,0]<stderr>:INFO:absl:epoch: 7	loss: 7.0593	AverageLoss: 6.9049	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 8
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 625	learning_rate: 1.9301e-05	loss: 7.0963	AverageLoss: 7.0265	sec/iter: 0.6922
[1,0]<stderr>:INFO:absl:global_steps: 635	learning_rate: 1.9610e-05	loss: 6.9560	AverageLoss: 6.9266	sec/iter: 0.1085
[1,0]<stderr>:INFO:absl:global_steps: 645	learning_rate: 1.9919e-05	loss: 6.9623	AverageLoss: 6.9444	sec/iter: 0.1059
[1,0]<stderr>:INFO:absl:global_steps: 655	learning_rate: 2.0227e-05	loss: 6.9575	AverageLoss: 6.9691	sec/iter: 0.1024
[1,0]<stderr>:INFO:absl:global_steps: 665	learning_rate: 2.0536e-05	loss: 6.7997	AverageLoss: 6.9159	sec/iter: 0.1082
[1,0]<stderr>:INFO:absl:global_steps: 675	learning_rate: 2.0845e-05	loss: 6.9165	AverageLoss: 6.9308	sec/iter: 0.1037
[1,0]<stderr>:INFO:absl:global_steps: 685	learning_rate: 2.1154e-05	loss: 6.8351	AverageLoss: 6.8981	sec/iter: 0.1028
[1,0]<stderr>:INFO:absl:global_steps: 695	learning_rate: 2.1463e-05	loss: 6.9511	AverageLoss: 6.9650	sec/iter: 0.1071
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 8
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 49529.62it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 48490.32it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.4838	AverageLoss: 6.8169	
[1,0]<stderr>:INFO:absl:loss: 7.0062	AverageLoss: 6.8882	
[1,0]<stderr>:INFO:absl:epoch: 8	loss: 7.0402	AverageLoss: 6.8864	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 9
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 703	learning_rate: 2.1710e-05	loss: 6.9050	AverageLoss: 6.9050	sec/iter: 0.6921
[1,0]<stderr>:INFO:absl:global_steps: 713	learning_rate: 2.2019e-05	loss: 6.9194	AverageLoss: 6.9463	sec/iter: 0.1029
[1,0]<stderr>:INFO:absl:global_steps: 723	learning_rate: 2.2327e-05	loss: 6.9394	AverageLoss: 6.8992	sec/iter: 0.1049
[1,0]<stderr>:INFO:absl:global_steps: 733	learning_rate: 2.2636e-05	loss: 6.8310	AverageLoss: 6.9178	sec/iter: 0.1026
[1,0]<stderr>:INFO:absl:global_steps: 743	learning_rate: 2.2945e-05	loss: 7.1494	AverageLoss: 6.9423	sec/iter: 0.1042
[1,0]<stderr>:INFO:absl:global_steps: 753	learning_rate: 2.3254e-05	loss: 6.9532	AverageLoss: 6.9258	sec/iter: 0.1097
[1,0]<stderr>:INFO:absl:global_steps: 763	learning_rate: 2.3563e-05	loss: 6.9466	AverageLoss: 6.9232	sec/iter: 0.1050
[1,0]<stderr>:INFO:absl:global_steps: 773	learning_rate: 2.3871e-05	loss: 6.8364	AverageLoss: 6.9122	sec/iter: 0.1003
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 9
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 53094.72it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 48443.86it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.5068	AverageLoss: 6.8378	
[1,0]<stderr>:INFO:absl:loss: 6.9760	AverageLoss: 6.8731	
[1,0]<stderr>:INFO:absl:epoch: 9	loss: 7.0242	AverageLoss: 6.8693	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 10
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 781	learning_rate: 2.4119e-05	loss: 7.2028	AverageLoss: 7.1466	sec/iter: 0.6770
[1,0]<stderr>:INFO:absl:global_steps: 791	learning_rate: 2.4427e-05	loss: 7.0661	AverageLoss: 6.9385	sec/iter: 0.1058
[1,0]<stderr>:INFO:absl:global_steps: 801	learning_rate: 2.4736e-05	loss: 6.9293	AverageLoss: 6.9470	sec/iter: 0.1068
[1,0]<stderr>:INFO:absl:global_steps: 811	learning_rate: 2.5045e-05	loss: 6.8839	AverageLoss: 6.8922	sec/iter: 0.1086
[1,0]<stderr>:INFO:absl:global_steps: 821	learning_rate: 2.5354e-05	loss: 6.9323	AverageLoss: 6.9176	sec/iter: 0.1082
[1,0]<stderr>:INFO:absl:global_steps: 831	learning_rate: 2.5663e-05	loss: 6.8575	AverageLoss: 6.8811	sec/iter: 0.1098
[1,0]<stderr>:INFO:absl:global_steps: 841	learning_rate: 2.5971e-05	loss: 6.9523	AverageLoss: 6.8946	sec/iter: 0.1125
[1,0]<stderr>:INFO:absl:global_steps: 851	learning_rate: 2.6280e-05	loss: 6.8493	AverageLoss: 6.8820	sec/iter: 0.1043
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 10
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 51855.45it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 53530.01it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.4636	AverageLoss: 6.7985	
[1,0]<stderr>:INFO:absl:loss: 6.9620	AverageLoss: 6.8528	
[1,0]<stderr>:INFO:absl:epoch: 10	loss: 7.0049	AverageLoss: 6.8516	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 11
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 859	learning_rate: 2.6527e-05	loss: 6.8572	AverageLoss: 6.8572	sec/iter: 0.7280
[1,0]<stderr>:INFO:absl:global_steps: 869	learning_rate: 2.6836e-05	loss: 6.9836	AverageLoss: 6.9000	sec/iter: 0.1046
[1,0]<stderr>:INFO:absl:global_steps: 879	learning_rate: 2.7145e-05	loss: 6.9277	AverageLoss: 6.9168	sec/iter: 0.1052
[1,0]<stderr>:INFO:absl:global_steps: 889	learning_rate: 2.7454e-05	loss: 6.8774	AverageLoss: 6.8853	sec/iter: 0.1046
[1,0]<stderr>:INFO:absl:global_steps: 899	learning_rate: 2.7763e-05	loss: 6.8200	AverageLoss: 6.8912	sec/iter: 0.1076
[1,0]<stderr>:INFO:absl:global_steps: 909	learning_rate: 2.8071e-05	loss: 6.8430	AverageLoss: 6.8976	sec/iter: 0.1031
[1,0]<stderr>:INFO:absl:global_steps: 919	learning_rate: 2.8380e-05	loss: 7.1888	AverageLoss: 6.8984	sec/iter: 0.1002
[1,0]<stderr>:INFO:absl:global_steps: 929	learning_rate: 2.8689e-05	loss: 6.9924	AverageLoss: 6.8714	sec/iter: 0.1058
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 11
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50082.58it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52008.27it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.4876	AverageLoss: 6.8203	
[1,0]<stderr>:INFO:absl:loss: 6.9429	AverageLoss: 6.8396	
[1,0]<stderr>:INFO:absl:epoch: 11	loss: 6.9915	AverageLoss: 6.8373	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 12
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 937	learning_rate: 2.8936e-05	loss: 6.9734	AverageLoss: 6.9086	sec/iter: 0.6942
[1,0]<stderr>:INFO:absl:global_steps: 947	learning_rate: 2.9245e-05	loss: 6.9625	AverageLoss: 6.8846	sec/iter: 0.1110
[1,0]<stderr>:INFO:absl:global_steps: 957	learning_rate: 2.9554e-05	loss: 6.8853	AverageLoss: 6.8835	sec/iter: 0.1006
[1,0]<stderr>:INFO:absl:global_steps: 967	learning_rate: 2.9863e-05	loss: 7.0901	AverageLoss: 6.8562	sec/iter: 0.1036
[1,0]<stderr>:INFO:absl:global_steps: 977	learning_rate: 3.0171e-05	loss: 6.8012	AverageLoss: 6.8910	sec/iter: 0.1024
[1,0]<stderr>:INFO:absl:global_steps: 987	learning_rate: 3.0480e-05	loss: 7.1343	AverageLoss: 6.9373	sec/iter: 0.1028
[1,0]<stderr>:INFO:absl:global_steps: 997	learning_rate: 3.0789e-05	loss: 6.9644	AverageLoss: 6.8568	sec/iter: 0.1072
[1,0]<stderr>:INFO:absl:global_steps: 1007	learning_rate: 3.1098e-05	loss: 6.9382	AverageLoss: 6.8322	sec/iter: 0.1010
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 12
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 56753.73it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50140.98it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.4075	AverageLoss: 6.7473	
[1,0]<stderr>:INFO:absl:loss: 6.9305	AverageLoss: 6.8228	
[1,0]<stderr>:INFO:absl:epoch: 12	loss: 6.9753	AverageLoss: 6.8234	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 13
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1015	learning_rate: 3.1345e-05	loss: 6.9240	AverageLoss: 6.9240	sec/iter: 0.6993
[1,0]<stderr>:INFO:absl:global_steps: 1025	learning_rate: 3.1654e-05	loss: 6.9075	AverageLoss: 6.8854	sec/iter: 0.1090
[1,0]<stderr>:INFO:absl:global_steps: 1035	learning_rate: 3.1962e-05	loss: 6.8829	AverageLoss: 6.8531	sec/iter: 0.1061
[1,0]<stderr>:INFO:absl:global_steps: 1045	learning_rate: 3.2271e-05	loss: 6.8341	AverageLoss: 6.8252	sec/iter: 0.1080
[1,0]<stderr>:INFO:absl:global_steps: 1055	learning_rate: 3.2580e-05	loss: 6.8786	AverageLoss: 6.8647	sec/iter: 0.1058
[1,0]<stderr>:INFO:absl:global_steps: 1065	learning_rate: 3.2889e-05	loss: 6.7925	AverageLoss: 6.8128	sec/iter: 0.1020
[1,0]<stderr>:INFO:absl:global_steps: 1075	learning_rate: 3.3198e-05	loss: 7.0657	AverageLoss: 6.8925	sec/iter: 0.0972
[1,0]<stderr>:INFO:absl:global_steps: 1085	learning_rate: 3.3507e-05	loss: 6.8718	AverageLoss: 6.9050	sec/iter: 0.1044
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 13
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52375.22it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52202.03it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.3688	AverageLoss: 6.7121	
[1,0]<stderr>:INFO:absl:loss: 6.9336	AverageLoss: 6.8163	
[1,0]<stderr>:INFO:absl:epoch: 13	loss: 6.9695	AverageLoss: 6.8190	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 14
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1093	learning_rate: 3.3754e-05	loss: 6.7778	AverageLoss: 6.7778	sec/iter: 0.6853
[1,0]<stderr>:INFO:absl:global_steps: 1103	learning_rate: 3.4062e-05	loss: 6.7252	AverageLoss: 6.7979	sec/iter: 0.1031
[1,0]<stderr>:INFO:absl:global_steps: 1113	learning_rate: 3.4371e-05	loss: 6.7526	AverageLoss: 6.8475	sec/iter: 0.1032
[1,0]<stderr>:INFO:absl:global_steps: 1123	learning_rate: 3.4680e-05	loss: 6.7888	AverageLoss: 6.8381	sec/iter: 0.1042
[1,0]<stderr>:INFO:absl:global_steps: 1133	learning_rate: 3.4989e-05	loss: 6.9261	AverageLoss: 6.8911	sec/iter: 0.1059
[1,0]<stderr>:INFO:absl:global_steps: 1143	learning_rate: 3.5298e-05	loss: 6.8366	AverageLoss: 6.8285	sec/iter: 0.1075
[1,0]<stderr>:INFO:absl:global_steps: 1153	learning_rate: 3.5607e-05	loss: 6.7316	AverageLoss: 6.9023	sec/iter: 0.1045
[1,0]<stderr>:INFO:absl:global_steps: 1163	learning_rate: 3.5915e-05	loss: 6.8701	AverageLoss: 6.8901	sec/iter: 0.1023
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 14
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52449.38it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 47618.87it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.3716	AverageLoss: 6.7147	
[1,0]<stderr>:INFO:absl:loss: 6.9024	AverageLoss: 6.7951	
[1,0]<stderr>:INFO:absl:epoch: 14	loss: 6.9475	AverageLoss: 6.7968	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 15
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1171	learning_rate: 3.6162e-05	loss: 6.8513	AverageLoss: 6.8513	sec/iter: 0.7365
[1,0]<stderr>:INFO:absl:global_steps: 1181	learning_rate: 3.6471e-05	loss: 7.0551	AverageLoss: 6.8561	sec/iter: 0.1049
[1,0]<stderr>:INFO:absl:global_steps: 1191	learning_rate: 3.6780e-05	loss: 6.8151	AverageLoss: 6.7821	sec/iter: 0.1063
[1,0]<stderr>:INFO:absl:global_steps: 1201	learning_rate: 3.7089e-05	loss: 6.7511	AverageLoss: 6.8259	sec/iter: 0.1110
[1,0]<stderr>:INFO:absl:global_steps: 1211	learning_rate: 3.7398e-05	loss: 6.9633	AverageLoss: 6.8364	sec/iter: 0.1078
[1,0]<stderr>:INFO:absl:global_steps: 1221	learning_rate: 3.7706e-05	loss: 6.9274	AverageLoss: 6.8729	sec/iter: 0.1121
[1,0]<stderr>:INFO:absl:global_steps: 1231	learning_rate: 3.8015e-05	loss: 6.8724	AverageLoss: 6.8693	sec/iter: 0.1046
[1,0]<stderr>:INFO:absl:global_steps: 1241	learning_rate: 3.8324e-05	loss: 6.8651	AverageLoss: 6.8348	sec/iter: 0.1048
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 15
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50277.76it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52415.58it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.3253	AverageLoss: 6.6725	
[1,0]<stderr>:INFO:absl:loss: 6.8925	AverageLoss: 6.7827	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:epoch: 15	loss: 6.9334	AverageLoss: 6.7837	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 16
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1249	learning_rate: 3.8571e-05	loss: 6.8578	AverageLoss: 6.8578	sec/iter: 0.6839
[1,0]<stderr>:INFO:absl:global_steps: 1259	learning_rate: 3.8880e-05	loss: 6.8508	AverageLoss: 6.7909	sec/iter: 0.1085
[1,0]<stderr>:INFO:absl:global_steps: 1269	learning_rate: 3.9189e-05	loss: 6.8424	AverageLoss: 6.8561	sec/iter: 0.1027
[1,0]<stderr>:INFO:absl:global_steps: 1279	learning_rate: 3.9498e-05	loss: 7.0745	AverageLoss: 6.8362	sec/iter: 0.1013
[1,0]<stderr>:INFO:absl:global_steps: 1289	learning_rate: 3.9806e-05	loss: 6.9447	AverageLoss: 6.8521	sec/iter: 0.1067
[1,0]<stderr>:INFO:absl:global_steps: 1299	learning_rate: 4.0115e-05	loss: 6.9330	AverageLoss: 6.8308	sec/iter: 0.1103
[1,0]<stderr>:INFO:absl:global_steps: 1309	learning_rate: 4.0424e-05	loss: 6.9121	AverageLoss: 6.8292	sec/iter: 0.1039
[1,0]<stderr>:INFO:absl:global_steps: 1319	learning_rate: 4.0733e-05	loss: 6.9818	AverageLoss: 6.8225	sec/iter: 0.1074
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 16
[1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52576.15it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 51844.68it/s][1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.2809	AverageLoss: 6.6320	
[1,0]<stderr>:INFO:absl:loss: 6.8874	AverageLoss: 6.7697	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:epoch: 16	loss: 6.9196	AverageLoss: 6.7711	
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 17
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1327	learning_rate: 4.0980e-05	loss: 6.9069	AverageLoss: 6.7962	sec/iter: 0.7191
[1,0]<stderr>:INFO:absl:global_steps: 1337	learning_rate: 4.1289e-05	loss: 6.7617	AverageLoss: 6.8189	sec/iter: 0.1055
[1,0]<stderr>:INFO:absl:global_steps: 1347	learning_rate: 4.1598e-05	loss: 6.9024	AverageLoss: 6.8083	sec/iter: 0.1045
[1,0]<stderr>:INFO:absl:global_steps: 1357	learning_rate: 4.1906e-05	loss: 6.7994	AverageLoss: 6.8268	sec/iter: 0.1008
[1,0]<stderr>:INFO:absl:global_steps: 1367	learning_rate: 4.2215e-05	loss: 6.7746	AverageLoss: 6.8178	sec/iter: 0.1037
[1,0]<stderr>:INFO:absl:global_steps: 1377	learning_rate: 4.2524e-05	loss: 6.9236	AverageLoss: 6.8097	sec/iter: 0.1046
[1,0]<stderr>:INFO:absl:global_steps: 1387	learning_rate: 4.2833e-05	loss: 6.8693	AverageLoss: 6.8260	sec/iter: 0.1044
[1,0]<stderr>:INFO:absl:global_steps: 1397	learning_rate: 4.3142e-05	loss: 6.8809	AverageLoss: 6.8255	sec/iter: 0.1043
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 17
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50896.76it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 52335.66it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.2927	AverageLoss: 6.6428	
[1,0]<stderr>:INFO:absl:loss: 6.8530	AverageLoss: 6.7524	
[1,0]<stderr>:INFO:absl:epoch: 17	loss: 6.9035	AverageLoss: 6.7545	
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 18
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1405	learning_rate: 4.3389e-05	loss: 6.8767	AverageLoss: 6.8767	sec/iter: 0.7011
[1,0]<stderr>:INFO:absl:global_steps: 1415	learning_rate: 4.3697e-05	loss: 7.0826	AverageLoss: 6.8090	sec/iter: 0.1085
[1,0]<stderr>:INFO:absl:global_steps: 1425	learning_rate: 4.4006e-05	loss: 6.6809	AverageLoss: 6.7777	sec/iter: 0.1055
[1,0]<stderr>:INFO:absl:global_steps: 1435	learning_rate: 4.4315e-05	loss: 6.8798	AverageLoss: 6.7877	sec/iter: 0.1084
[1,0]<stderr>:INFO:absl:global_steps: 1445	learning_rate: 4.4624e-05	loss: 6.8192	AverageLoss: 6.8288	sec/iter: 0.1009
[1,0]<stderr>:INFO:absl:global_steps: 1455	learning_rate: 4.4933e-05	loss: 6.8271	AverageLoss: 6.7784	sec/iter: 0.0965
[1,0]<stderr>:INFO:absl:global_steps: 1465	learning_rate: 4.5242e-05	loss: 6.8194	AverageLoss: 6.8003	sec/iter: 0.0983
[1,0]<stderr>:INFO:absl:global_steps: 1475	learning_rate: 4.5550e-05	loss: 6.8942	AverageLoss: 6.8080	sec/iter: 0.1045
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 18
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 48878.02it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 51526.93it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.2251	AverageLoss: 6.5812	
[1,0]<stderr>:INFO:absl:loss: 6.8419	AverageLoss: 6.7324	
[1,0]<stderr>:INFO:absl:epoch: 18	loss: 6.8831	AverageLoss: 6.7359	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
[1,1]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:>>>>> start training in epoch 19
[1,0]<stderr>:INFO:absl:perform batch_wise_shuffle with batch_size 64
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:global_steps: 1483	learning_rate: 4.5797e-05	loss: 6.6861	AverageLoss: 6.6861	sec/iter: 0.7103
[1,0]<stderr>:INFO:absl:global_steps: 1493	learning_rate: 4.6106e-05	loss: 6.9001	AverageLoss: 6.8105	sec/iter: 0.1153
[1,0]<stderr>:INFO:absl:global_steps: 1503	learning_rate: 4.6415e-05	loss: 6.7139	AverageLoss: 6.7971	sec/iter: 0.1073
[1,0]<stderr>:INFO:absl:global_steps: 1513	learning_rate: 4.6724e-05	loss: 6.8792	AverageLoss: 6.7759	sec/iter: 0.1061
[1,0]<stderr>:INFO:absl:global_steps: 1523	learning_rate: 4.7033e-05	loss: 6.8040	AverageLoss: 6.7869	sec/iter: 0.0997
[1,0]<stderr>:INFO:absl:global_steps: 1533	learning_rate: 4.7342e-05	loss: 6.6760	AverageLoss: 6.7675	sec/iter: 0.1023
[1,0]<stderr>:INFO:absl:global_steps: 1543	learning_rate: 4.7650e-05	loss: 6.8533	AverageLoss: 6.7888	sec/iter: 0.0984
[1,0]<stderr>:INFO:absl:global_steps: 1553	learning_rate: 4.7959e-05	loss: 6.8750	AverageLoss: 6.7877	sec/iter: 0.1105
[1,0]<stderr>:INFO:absl:>>>>> start evaluate in epoch 19
[1,1]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,1]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,0]<stderr>:INFO:absl:Loading data from examples/asr/thchs30/data/dev.trans.csv
[1,0]<stderr>:  0%|          | 0/892 [00:00<?, ?it/s][1,1]<stderr>:100%|██████████| 892/892 [00:00<00:00, 50073.87it/s][1,0]<stderr>:100%|██████████| 892/892 [00:00<00:00, 51949.78it/s][1,1]<stderr>:
[1,1]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:
[1,0]<stderr>:INFO:absl:please be patient, enable tf.function, it takes time ...
[1,0]<stderr>:INFO:absl:loss: 7.2287	AverageLoss: 6.5844	
[1,0]<stderr>:INFO:absl:loss: 6.8215	AverageLoss: 6.7239	
[1,0]<stderr>:INFO:absl:epoch: 19	loss: 6.8731	AverageLoss: 6.7255	
[1,0]<stderr>:INFO:absl:saving model in :examples/asr/thchs30/ckpts/rnnlm/ckpt
Running decode ...
INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/'), ('cls', 'main'), ('dataset_builder', 'speech_recognition_dataset'), ('decode_config', {'beam_search': True, 'beam_size': 10, 'ctc_weight': 0.5, 'lm_weight': 0.7, 'lm_type': 'rnn', 'lm_path': 'examples/asr/thchs30/configs/rnnlm.json'}), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('model', 'mtl_transformer_ctc'), ('model_config', {'model': 'speech_transformer', 'model_config': {'return_encoder_output': True, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 4, 'num_decoder_layers': 2, 'dff': 1280, 'rate': 0.1, 'label_smoothing_rate': 0.0, 'schedual_sampling_rate': 0.9}, 'mtl_weight': 0.5}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 5), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 25000, 'k': 1.0, 'decay_steps': 100000000, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [1]), ('sorta_epoch', 1), ('summary_dir', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000], 'speed_permutation': [0.9, 1.0, 1.1]})]
2020-04-11 15:05:36.006494: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-04-11 15:05:36.839631: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:36.840147: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:04:01.0
2020-04-11 15:05:36.840211: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:36.840686: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 1 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:04:02.0
2020-04-11 15:05:36.840933: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2020-04-11 15:05:36.842490: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
2020-04-11 15:05:36.843904: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
2020-04-11 15:05:36.844226: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
2020-04-11 15:05:36.845992: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
2020-04-11 15:05:36.847345: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
2020-04-11 15:05:36.851970: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-04-11 15:05:36.852124: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:36.852675: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:36.853157: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:36.853599: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:36.854016: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0, 1
INFO:absl:hparams: [('batch_size', 8), ('ckpt', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/'), ('cls', 'main'), ('dataset_builder', 'speech_recognition_dataset'), ('decode_config', {'beam_search': True, 'beam_size': 10, 'ctc_weight': 0.5, 'lm_weight': 0.7, 'lm_type': 'rnn', 'lm_path': 'examples/asr/thchs30/configs/rnnlm.json'}), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('model', 'mtl_transformer_ctc'), ('model_config', {'model': 'speech_transformer', 'model_config': {'return_encoder_output': True, 'num_filters': 512, 'd_model': 512, 'num_heads': 8, 'num_encoder_layers': 4, 'num_decoder_layers': 2, 'dff': 1280, 'rate': 0.1, 'label_smoothing_rate': 0.0, 'schedual_sampling_rate': 0.9}, 'mtl_weight': 0.5}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 5), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 25000, 'k': 1.0, 'decay_steps': 100000000, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [1]), ('sorta_epoch', 1), ('summary_dir', 'examples/asr/thchs30/ckpts/mtl_transformer_ctc/event'), ('testset_config', {'data_csv': 'examples/asr/thchs30/data/test.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000]}), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.csv', 'audio_config': {'type': 'Fbank', 'filterbank_channel_count': 40}, 'cmvn_file': 'examples/asr/thchs30/data/cmvn', 'text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'input_length_range': [10, 15000], 'speed_permutation': [0.9, 1.0, 1.1]})]
INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/train.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [0.9, 1.0, 1.1]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
INFO:absl:Loading data from examples/asr/thchs30/data/train.csv
INFO:absl:perform speed permutation
2020-04-11 15:05:37.270443: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-04-11 15:05:37.278571: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2294605000 Hz
2020-04-11 15:05:37.279353: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55e7ddcefc50 executing computations on platform Host. Devices:
2020-04-11 15:05:37.279379: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
2020-04-11 15:05:37.443350: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:37.444113: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55e7ddd32bc0 executing computations on platform CUDA. Devices:
2020-04-11 15:05:37.444147: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Tesla V100-PCIE-16GB, Compute Capability 7.0
2020-04-11 15:05:37.444427: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:37.444888: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:04:02.0
2020-04-11 15:05:37.444939: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2020-04-11 15:05:37.444951: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
2020-04-11 15:05:37.444963: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
2020-04-11 15:05:37.444975: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
2020-04-11 15:05:37.444986: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
2020-04-11 15:05:37.444997: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
2020-04-11 15:05:37.445009: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-04-11 15:05:37.445059: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:37.445501: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:37.445913: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 1
2020-04-11 15:05:37.446043: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2020-04-11 15:05:37.447597: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-04-11 15:05:37.447614: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      1 
2020-04-11 15:05:37.447620: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 1:   N 
2020-04-11 15:05:37.447916: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:37.448403: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-11 15:05:37.448871: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14926 MB memory) -> physical GPU (device: 1, name: Tesla V100-PCIE-16GB, pci bus id: 0000:04:02.0, compute capability: 7.0)
INFO:absl:trying to restore from : examples/asr/thchs30/ckpts/mtl_transformer_ctc/
2020-04-11 15:05:40.328288: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-04-11 15:05:41.988790: W tensorflow/stream_executor/cuda/redzone_allocator.cc:312] Not found: ./bin/ptxas not found
Relying on driver to perform ptx compilation. This message will be only logged once.
2020-04-11 15:05:42.199445: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1154: alias_inplace_add (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Prefer tf.tensor_scatter_nd_add, which offers the same functionality with well-defined read-write semantics.
WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1154: alias_inplace_add (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Prefer tf.tensor_scatter_nd_add, which offers the same functionality with well-defined read-write semantics.
WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1137: alias_inplace_update (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Prefer tf.tensor_scatter_nd_update, which offers the same functionality with well-defined read-write semantics.
WARNING:tensorflow:From /work20/luoxiaojie/anaconda3/envs/athena/lib/python3.7/site-packages/tensorflow_core/python/ops/ctc_ops.py:1137: alias_inplace_update (from tensorflow.python.ops.inplace_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Prefer tf.tensor_scatter_nd_update, which offers the same functionality with well-defined read-write semantics.
INFO:absl:hparams: [('batch_size', 64), ('ckpt', 'examples/asr/thchs30/ckpts/rnnlm'), ('cls', 'main'), ('dataset_builder', 'language_dataset'), ('decode_config', None), ('devset_config', {'data_csv': 'examples/asr/thchs30/data/dev.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}}), ('model', 'rnnlm'), ('model_config', {'d_model': 512, 'rnn_type': 'lstm', 'num_layer': 3, 'dropout_rate': 0.1, 'sos': -1, 'eos': -1}), ('num_classes', None), ('num_data_threads', 1), ('num_epochs', 20), ('optimizer', 'warmup_adam'), ('optimizer_config', {'d_model': 512, 'warmup_steps': 8000, 'k': 0.5, 'decay_steps': 127600, 'decay_rate': 0.1}), ('pretrained_model', None), ('solver_config', {'clip_norm': 100, 'log_interval': 10, 'enable_tf_function': True}), ('solver_gpu', [0]), ('sorta_epoch', 1), ('summary_dir', None), ('testset_config', None), ('trainset_config', {'data_csv': 'examples/asr/thchs30/data/train.trans.csv', 'input_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}, 'output_text_config': {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'}})]
INFO:absl:Loading data from examples/asr/thchs30/data/train.trans.csv
  0%|          | 0/9999 [00:00<?, ?it/s] 31%|███       | 3070/9999 [00:00<00:00, 21748.92it/s] 83%|████████▎ | 8343/9999 [00:00<00:00, 26402.55it/s]100%|██████████| 9999/9999 [00:00<00:00, 36595.31it/s]
INFO:absl:trying to restore from : examples/asr/thchs30/ckpts/rnnlm
INFO:absl:hparams: [('audio_config', {'type': 'Fbank', 'filterbank_channel_count': 40}), ('cls', <class 'athena.data.datasets.speech_recognition.SpeechRecognitionDatasetBuilder'>), ('cmvn_file', 'examples/asr/thchs30/data/cmvn'), ('data_csv', 'examples/asr/thchs30/data/test.csv'), ('input_length_range', [10, 15000]), ('output_length_range', [1, 10000]), ('remove_unk', True), ('speed_permutation', [1.0]), ('text_config', {'type': 'vocab', 'model': 'examples/asr/thchs30/data/vocab'})]
INFO:absl:Successfully load cmvn file examples/asr/thchs30/data/cmvn
INFO:absl:Loading data from examples/asr/thchs30/data/test.csv
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  191  225   18  225   18  225   18
   225   18  225   18  107  243  420 2667]], shape=(1, 22), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 21	avg_acc: 0.0455	sec/iter: 17.2757
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  107  191  225   18  225
    18  225   18  225   18  107  243  420 2667]], shape=(1, 23), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 22	avg_acc: 0.0227	sec/iter: 16.9487
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   18  107  317  225   18  107  191  225   18  225   18
   225   18  225   18  107  336 2667]], shape=(1, 21), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 19	avg_acc: 0.0606	sec/iter: 13.1167
INFO:absl:predictions: tf.Tensor(
[[ 107  602  254  168   45  287  238   56  130  297  166   31  107  109
   317   45   46  420  238  208  254  694 2667]], shape=(1, 23), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 24	avg_acc: 0.0549	sec/iter: 15.5242
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  243  420  238  208    6  120   31  107   20   45
    48  208    6  357  237    6   72   31  254  694 2667]], shape=(1, 25), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 25	avg_acc: 0.0431	sec/iter: 16.0805
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195    6   45  357  238   54  508  107  582  316
     6  357  238  222    6  357  237  238  222    6  357 2667]], shape=(1, 26), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 24	avg_acc: 0.0217	sec/iter: 18.0112
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  225   18  225   18  225
    18  225   18  107  109  317   18  107  109  317   18  107  243  254
   168 2667]], shape=(1, 30), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 29	avg_acc: 0.0061	sec/iter: 17.6952
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  254  212  287   48  208   31  254
   238  208   72   31   56  254  168  107  108 2667]], shape=(1, 24), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 24	avg_acc: 0.0208	sec/iter: 16.5940
INFO:absl:predictions: tf.Tensor(
[[ 254  168  107  108    6  254  168  107  109  508  107  109  254   45
    72   31  254  137   72   31  254  168  238  208  254  107  109 2667]], shape=(1, 28), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 24	avg_acc: 0.0407	sec/iter: 18.1568
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  903   37   38   56  130
   297  187  254   45  107  317  268  238  208    6  107  582  107  585
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 26	avg_acc: 0.0442	sec/iter: 19.1097
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  438  254   45  502  254
   108  187  254  238  208   72   31   56  254   87   72   31 2667]], shape=(1, 27), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 24	avg_acc: 0.0507	sec/iter: 20.7641
INFO:absl:predictions: tf.Tensor(
[[ 267  268   63    4   45  417  672  107  109  357   45  417  529   45
   417  529   45  417  383  107  109   38   45  417  529  284  115  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 24	avg_acc: 0.0435	sec/iter: 18.5598
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   18  107  317   18  225   18  107  243  113  722  110
   105  187  254   45  287  323  249 2667]], shape=(1, 22), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 19	avg_acc: 0.0498	sec/iter: 17.2519
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  120  107  109  357  237   56  254  168  917  107
   582  238  222  254    4  115  357 2667]], shape=(1, 22), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 19	avg_acc: 0.0581	sec/iter: 17.0319
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  222   72   31  254  168   32  187  254  168   32
   187  254   45  357  238  222  254  168  238  208  254  168 2667]], shape=(1, 27), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 24	avg_acc: 0.0543	sec/iter: 18.5353
INFO:absl:predictions: tf.Tensor(
[[ 268  417  417  417  417  417  417  417  113    4   45  417  529  107
   582   45  417 2667]], shape=(1, 18), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 20	avg_acc: 0.0588	sec/iter: 12.3026
INFO:absl:predictions: tf.Tensor(
[[ 187   31  130  582   45  120  283  645  630  187   31  107  582   45
   287  238   87  733  254   87  344  105   31  876  877   45  357 2667]], shape=(1, 28), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 29	avg_acc: 0.0592	sec/iter: 17.3634
INFO:absl:predictions: tf.Tensor(
[[ 315  107  226  226  226  226  226  226  225   18    7  179    6  254
    63  108   45  107  108   45  357  238  222   19   18  107  179    6
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 27	avg_acc: 0.0578	sec/iter: 18.6080
INFO:absl:predictions: tf.Tensor(
[[  56  107  179   18  107  317  225   18  107  243  113  107  243  438
   254   45  225   18  107  243  438  420 2667]], shape=(1, 23), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 20	avg_acc: 0.0593	sec/iter: 19.3750
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19  317   18  107  226   18
   225   18  225   18   19   18  244   18  244   18  244   18  107  243
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 31	avg_acc: 0.0462	sec/iter: 21.9826
INFO:absl:predictions: tf.Tensor(
[[ 254  168  222  107  582   45  120   72   31  508  187  254  238   87
    72   31  254  238  187  254  168  238  222  254  168  238  222  254
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 25	avg_acc: 0.0421	sec/iter: 20.0479
/work20/luoxiaojie/athena/athena/tools/ctc_scorer.py:148: RuntimeWarning: invalid value encountered in logaddexp
  r_sum = np.logaddexp(r_prev[:, 0], r_prev[:, 1])
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  357  237   56  130  297   45  107  109  317   18
   107  109  357  237   56  107  109  105  187  254  107  109  357 2667]], shape=(1, 28), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 27	avg_acc: 0.0401	sec/iter: 19.1350
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317   18  107  317   18  225   18
   225   18  225   18  107  226   18  225   18  107  109  346  222  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 27	avg_acc: 0.0415	sec/iter: 20.3431
INFO:absl:predictions: tf.Tensor(
[[ 254  168  130  297  107  582   45  107  824   72   31  107  109  317
    45  120  254  168   32  187  107   93  137   31 2667]], shape=(1, 25), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 22	avg_acc: 0.0432	sec/iter: 20.8426
INFO:absl:predictions: tf.Tensor(
[[ 107  109  195   45    6  254  168  107  109  108   45    6  254  238
    87   72   31  876  254  168   87   72   31 2667]], shape=(1, 24), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 23	avg_acc: 0.0477	sec/iter: 22.6503
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87 1257  130  297   45  357  237    6  357  222  254  168
   107   20  107  108   45  107  109  254  266  222  254  168   45 2667]], shape=(1, 28), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 27	avg_acc: 0.0457	sec/iter: 21.3135
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255  316  179   18  107  317   18  107  317   18  107  191
   225   18  225   18  244   18   19   18  244   18  244   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 27	avg_acc: 0.0495	sec/iter: 18.8355
INFO:absl:predictions: tf.Tensor(
[[ 254  168  222  107  108   45  120   72   31  254  238   87  828  254
   238  222  254  694  254  168  383 2667]], shape=(1, 22), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 21	avg_acc: 0.0520	sec/iter: 16.4972
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  582   45  287  266   87   31  130  297   45  130
   297  266  222  254  168   45  917   45   87   22   45 2667]], shape=(1, 26), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 28	avg_acc: 0.0552	sec/iter: 18.8214
INFO:absl:predictions: tf.Tensor(
[[ 267  268   63   45  208  242   56  130  297  107  109  317   45  417
   529   45  417  529   45  417 2667]], shape=(1, 21), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 22	avg_acc: 0.0548	sec/iter: 20.4596
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  222  254  168   32  187   31  107
    20  254   45  222    6  254  105   31  107  109   56  254  168  238
   208   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 30	avg_acc: 0.0528	sec/iter: 22.0133
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  113  137   45  187  254  238
   208   31  130  297  187  130  109   32  187  130  297  238  222  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 30	avg_acc: 0.0508	sec/iter: 21.7503
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  179   18  107  317   19   18  225   18  225   18  225
    18  225   18  225   18  244   18  244   18  107  243  254   45  103
   254 2667]], shape=(1, 30), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 28	avg_acc: 0.0481	sec/iter: 24.3223
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  815  208  242   56  130  297   45  222  254  238  222
   254  238  222  107  109   29  598  357  238   87  428    6  254   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 26	avg_acc: 0.0477	sec/iter: 20.3427
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   56  130  297   45  120   56  130  582
   420  238  208    6  107  109  187  254  694 2667]], shape=(1, 24), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 24	avg_acc: 0.0475	sec/iter: 19.0694
INFO:absl:predictions: tf.Tensor(
[[ 254  168  107  108    6  254  168  107  109    6   45  107  109  108
    45   72   31  254  168  107  109   29   45  107  109  108   45  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 25	avg_acc: 0.0503	sec/iter: 20.9939
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254  238  208  254  238  208  254   45  208  254  168   56  254   45
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 27	avg_acc: 0.0489	sec/iter: 20.0021
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  107   18  225   18  225
   317  225   18  225   18  107  179  208  993  254   63  108 2667]], shape=(1, 27), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 25	avg_acc: 0.0477	sec/iter: 18.0676
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  222  107  243  420  238  208    6  107  582   45
   357  237   56  130  107  582  107  109   48  208  254  694 2667]], shape=(1, 27), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 25	avg_acc: 0.0465	sec/iter: 17.2189
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  222  243  420  238  208    6  107  582   45  120
    56  130  107  582  238  208  254  694 2667]], shape=(1, 23), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 22	avg_acc: 0.0483	sec/iter: 18.4598
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  254   63  108    6  357  237    6  254   45  357  238
   222  254  238  222  254  168  107  109  105  187  254   45  357 2667]], shape=(1, 28), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 26	avg_acc: 0.0498	sec/iter: 22.0084
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  222  243  420  238  208    6  107  582   45  120
    45  357  237   56  130  582  107  109   48  208  254  694 2667]], shape=(1, 27), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 23	avg_acc: 0.0505	sec/iter: 18.7415
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  120  283  222   31  254  168
   238  208   72   31  107  108    6  254   87   72   31 2667]], shape=(1, 26), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 24	avg_acc: 0.0519	sec/iter: 19.5080
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  296  137   72   31  107   20  137
    48  208  242  187  130  297   45  469  107  109  357  237  238  208
   316 2667]], shape=(1, 30), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 29	avg_acc: 0.0514	sec/iter: 21.9005
INFO:absl:predictions: tf.Tensor(
[[ 187   31  130  297   45  120  283  645  238  208   31  130  297   87
   140    6  357  238  208  242 2667]], shape=(1, 21), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 23	avg_acc: 0.0529	sec/iter: 17.8879
INFO:absl:predictions: tf.Tensor(
[[ 167    6  357  187   31  107  537  417  529   72   31  107  582   45
   107  109   29  598  107  582  316   45  107  582  238  222  254   45
   417  529 2667]], shape=(1, 31), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 29	avg_acc: 0.0508	sec/iter: 21.8638
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254   45  337  917  238   87  222  254
   238   56  130  917  107  582  238  222  187  254   45  365  222  254
    45  799 2667]], shape=(1, 31), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 26	avg_acc: 0.0520	sec/iter: 20.7108
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297    6  107  109  317   22  254   45   72
   254  238  222  254  238  222  254  168  107   93  137 2667]], shape=(1, 26), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 24	avg_acc: 0.0548	sec/iter: 20.3319
INFO:absl:predictions: tf.Tensor(
[[ 167   45   87  222  107  317   18  107  243  113  187  254  168   45
   120   45  187  167  168  107  582   45  268   63  108   45  203   45
   211  212 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 30	avg_acc: 0.0557	sec/iter: 21.2733
INFO:absl:predictions: tf.Tensor(
[[   6   45  222   32  187  130  297   87 1257  222    6  357  237    6
   254   45  317   18  107  317  538  268  694  233   37   45  357 2667]], shape=(1, 28), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 28	avg_acc: 0.0574	sec/iter: 18.7838
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  107  582   45  317
   225   18  225  317   18  244   18  225   18  107  191  708  137 2667]], shape=(1, 28), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 32	avg_acc: 0.0567	sec/iter: 22.2757
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18   19   18  225   18  107  243  438  254
    45  287  208    6  538    6  357  238  208   19   18  107  985   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 29	avg_acc: 0.0576	sec/iter: 20.4297
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  107  243   20  254
   105  187   31  167   45  287   48  208   31  107  109  357 2667]], shape=(1, 27), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 26	avg_acc: 0.0605	sec/iter: 19.3716
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  287  238   87  815  208    6  254  168   45  287   45
   287  449  238  208  242   45  917  420  238  222  254  238  222  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 28	avg_acc: 0.0587	sec/iter: 21.1205
INFO:absl:predictions: tf.Tensor(
[[ 349  296   56  130  297   45  243  113  107  108  316  107   20   45
   107   20  130  297   87  828  107  109  357  238  222  254  168  238
   222  254   45 2667]], shape=(1, 32), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 29	avg_acc: 0.0595	sec/iter: 23.5918
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  243  113  187   31  107  179   45
   337  917  107  243   56  357  237  675  187   18  107  191  708 2667]], shape=(1, 28), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 27	avg_acc: 0.0596	sec/iter: 20.0182
INFO:absl:predictions: tf.Tensor(
[[ 254   45  222  107  317  225   18  225   18  107  226   18  107  243
    45  357  237  675  187  876  877   45  268  694   45  124  222  254
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 31	avg_acc: 0.0591	sec/iter: 21.4511
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  113   56  107  109  317
   268   56  107  109   29  598  107  109  317   18  225   18  107  109
   108  266  316 2667]], shape=(1, 32), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 30	avg_acc: 0.0603	sec/iter: 22.8366
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179   18  107  317   19   18  225   18   15   18
   225   18  225   18  107  109  317   18  107  109  317   18  107  243
   420 2667]], shape=(1, 30), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 29	avg_acc: 0.0581	sec/iter: 22.7995
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254   45  357   72   31  130  222  254  108    6
   357  237  238  222  254   87  428   87  234  694 2667]], shape=(1, 25), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 27	avg_acc: 0.0588	sec/iter: 20.9015
INFO:absl:predictions: tf.Tensor(
[[ 254  168  107  108    6  254  168  107  109  508  187  254   45  254
   238  208    6  107  109  694 2667]], shape=(1, 21), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 23	avg_acc: 0.0614	sec/iter: 20.8091
INFO:absl:predictions: tf.Tensor(
[[ 174  222  208  242   56  130  297   45  120  121  254   87  828  107
   109   22   45  271  287  323  738   87  344  107  582   45 2667]], shape=(1, 27), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 26	avg_acc: 0.0616	sec/iter: 20.9921
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  179   18  107  317   18  244   18  225   18  225   18
   225   18  225   18  107  226   18  244   18  244   18  107  191  192
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 32	avg_acc: 0.0610	sec/iter: 22.0571
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  254  168   32  187  254  168   45
   254  168   32  187  254  105   31  107   20  254  168  238    6  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 30	avg_acc: 0.0610	sec/iter: 21.9969
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297  238   32  187  254  168   32  187  254
   238  208    6  357  238  208  254   45  107  109  346  508  107  109
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 27	avg_acc: 0.0611	sec/iter: 22.0160
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  225   18  225   18
   225   18  225   18  107  243  420 2667]], shape=(1, 22), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 21	avg_acc: 0.0609	sec/iter: 22.0877
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107   20   45  107  317  225   18  225   18  107  582   45
   243  254   45  671  108  187   62  115  694 2667]], shape=(1, 24), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 31	avg_acc: 0.0614	sec/iter: 21.8763
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  191   19   18  107  179   18
   225   18  225   18   19   18  244   18  244  431 2667]], shape=(1, 25), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 26	avg_acc: 0.0621	sec/iter: 26.4708
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   48    6  107   20   31  130  297   45  107
   582   45  357  238  222  107  109   22   45  107  537  420  238  222
   254   45  176 2667]], shape=(1, 32), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 31	avg_acc: 0.0621	sec/iter: 22.1071
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  489  828    4   45  305    6  254
   108  187  130  109   32  187  130  107  109  317  420  238  208  316
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 29	avg_acc: 0.0616	sec/iter: 21.0659
INFO:absl:predictions: tf.Tensor(
[[  87  222  130  297   45  222  254   45  107  109  420  238  222  254
   238  208    6  357  238  222  107  109  357  237  238  346  508  107
   109    6  235 2667]], shape=(1, 32), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 29	avg_acc: 0.0612	sec/iter: 21.8427
INFO:absl:predictions: tf.Tensor(
[[ 107  109  195   45  195  208    6  357  238  208    6  107  109  317
   210    4   45  417  529   45  357   45  107  109  357  238  208    6
   107  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 25	avg_acc: 0.0623	sec/iter: 22.1853
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  297  107  109  317   18  107  108  316   45  120
   121  111  238   87  249  357   45  357  238  222  254  168   45   87
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 30	avg_acc: 0.0623	sec/iter: 20.9214
INFO:absl:predictions: tf.Tensor(
[[ 648   87  815  208  242  254  168  630  195  208  254   87  208  254
   238  208  254   87  208  242   45  208  254  238  208  254  168  238
   208 2667]], shape=(1, 30), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 25	avg_acc: 0.0629	sec/iter: 20.7407
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87 1257  130  222  254   45  357  237    6  254  222  254
   238  222  254  238  222  130  297   45  107  109  105  538    6  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 29	avg_acc: 0.0611	sec/iter: 21.8137
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243   18  225   18  225   18
   225   18  107  336  636  143   31  107  109  514  105  187  254   45
   103  254 2667]], shape=(1, 31), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 28	avg_acc: 0.0608	sec/iter: 21.1582
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  225   18  225   18
   107  191   19   18   19   18  244   18   19   18  244   18  107  179
   137   86  105   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 32	avg_acc: 0.0590	sec/iter: 26.6165
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179  107  317  225   18  107  226   18  107  109  317
    18  225   18  708  222  254   45  254  168  137  708    4 2667]], shape=(1, 27), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 30	avg_acc: 0.0590	sec/iter: 23.4999
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  191  225   18  225   18  225   18  225   18
   225   18  225   18  107  243   18  244   18  225   18  225   18  109
   196  817   45  799 2667]], shape=(1, 33), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 32	avg_acc: 0.0590	sec/iter: 23.8217
INFO:absl:predictions: tf.Tensor(
[[ 254  168  107  108    6  254  168  238  208    6  107  582   45  254
   168  107  109  108   45   72   31  254  168  203  254   45  120  203
   254  168 2667]], shape=(1, 31), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 25	avg_acc: 0.0601	sec/iter: 22.3979
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45  120   31  107  582   45  917   87  222   22
    45   48    6  420  238   87  222   87  733  876  877  238  222    6
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 26	avg_acc: 0.0606	sec/iter: 21.3799
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  287  166   72   31  130  297  203   22   31  254   45
   357  238   87  346  508  187  254  168  238    6  254   45 2667]], shape=(1, 27), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 26	avg_acc: 0.0603	sec/iter: 20.1706
INFO:absl:predictions: tf.Tensor(
[[ 107  296  254  168  107  108  566   45  120  283  645   31  254  238
   208   72   31  107  108   45   72   31 2667]], shape=(1, 23), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 23	avg_acc: 0.0614	sec/iter: 22.0839
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  220  268  469  196   45  903   37  107  109   29  598
   107  109   29  598   45  903   37   38   37   45  107  537  420   45
   171   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 31	avg_acc: 0.0594	sec/iter: 23.4667
INFO:absl:predictions: tf.Tensor(
[[ 130  336 1047  357   32  187  254  168   32  187  254  168   32  187
   254  238  208  993  254  238   32  187  130  336  238  222  254   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 32	avg_acc: 0.0589	sec/iter: 22.8099
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  254  168  107  109   48    6  107   20   45   20
    45  357  238  222  254  168  107  602 2667]], shape=(1, 23), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 21	avg_acc: 0.0596	sec/iter: 21.4766
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   56  130  297   45  268   63  694  254
    87  428   56  254  238  222  254   45  107   93  137  254  168   87
   234   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 30	avg_acc: 0.0593	sec/iter: 23.8566
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   56  130  297   45  903   20   31  167
   168   45   72   31  130  297   45  107   20  254  168  238  222  254
    45  105   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 30	avg_acc: 0.0601	sec/iter: 23.7077
INFO:absl:predictions: tf.Tensor(
[[ 243  113  107  108  187   31  130  297   45  225   18  107  179    6
   254   45  107  109   29  598  107  109    6  254  168  238    6  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 26	avg_acc: 0.0598	sec/iter: 23.2757
INFO:absl:predictions: tf.Tensor(
[[ 254   45    6  109  317   18  107  243  254  168   32  187  167  168
    45  357  187  254   87  428   87  234  694  233  124   87  346  508
   187   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 24	avg_acc: 0.0619	sec/iter: 27.0593
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   45  107  317   18  107  243  113  137   31  130  297
    45  917   31  107  336   22 2667]], shape=(1, 21), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 18	avg_acc: 0.0629	sec/iter: 16.4289
INFO:absl:predictions: tf.Tensor(
[[   6  357  221  961  287  208  242  243  113  107  582   45  120   56
   130  582  107  235  233   37   45  107  235  233   37 2667]], shape=(1, 26), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 26	avg_acc: 0.0623	sec/iter: 18.2431
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  582   45  614  630  187    6  105   31  107  582
    45  287  449  238   87  344    6  235  233   22 2667]], shape=(1, 25), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 25	avg_acc: 0.0624	sec/iter: 18.7977
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  305   45  243  113  107  108  187  254
   238  187  254  238  187  254  238  208   31  107  109  357 2667]], shape=(1, 27), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 27	avg_acc: 0.0617	sec/iter: 20.2818
INFO:absl:predictions: tf.Tensor(
[[ 130  222   62   63   45  120  283   45  606  208  242   56  130  297
    45  357  238  222  254   87  234  694  297    6  235 2667]], shape=(1, 26), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 28	avg_acc: 0.0618	sec/iter: 20.5091
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179    9  179   18  107  317   18  225   18   19   18
    19   18   19   18  107  109  317  268   45  271  284  645  237  675
   374   18   19   18  107  109 2667]], shape=(1, 35), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 29	avg_acc: 0.0625	sec/iter: 25.0225
INFO:absl:predictions: tf.Tensor(
[[ 254  168  222   32  187  130  297   45  357  238  222  254  238  222
   254  238  222  254  168   32  187  107   93  137 2667]], shape=(1, 25), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 22	avg_acc: 0.0627	sec/iter: 21.8800
INFO:absl:predictions: tf.Tensor(
[[ 167  168  315  316  179   18  107  317  143  243  438  254   63  108
   316 1239  115   11   18  225   18  244  431   45  469  357  238  208
    31  107  109  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 30	avg_acc: 0.0634	sec/iter: 23.8075
INFO:absl:predictions: tf.Tensor(
[[ 130  109  196  107  109   38   37   45  313   22   20   31  107 1025
   917  238  222    6  311  261   45  107  582  238  222  107  109   45
   614  630 2667]], shape=(1, 31), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 27	avg_acc: 0.0634	sec/iter: 24.0370
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  107  179   18  107  317  225   18  225   18  244   18
   225   18  244   18  107  317   22   45  120  283   56  254  168  137
    45  355  694 2667]], shape=(1, 32), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 33	avg_acc: 0.0630	sec/iter: 25.9822
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  582   45   87  222    6  130  582   45  287  238
    87  344  130  297  266  115  238  222  254  168   45   87   31 2667]], shape=(1, 28), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 29	avg_acc: 0.0634	sec/iter: 20.8375
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  317  489  243  113  143   31   56  130  297
    45  317  225   18  107  191  192  254  168   32  187  167   45 2667]], shape=(1, 28), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 32	avg_acc: 0.0630	sec/iter: 23.3766
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179  137  317  220  231  234  405  406  675
   187  254  238   56  254   45  208  254  168   56  254  168  993 2667]], shape=(1, 28), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 27	avg_acc: 0.0624	sec/iter: 23.8018
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109  108   45  120  107  109   48    6   87   31  107
   296  254   45  287  449  238   87  222  254   87  222  254   87  234
    87   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 28	avg_acc: 0.0628	sec/iter: 23.0468
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  243  113  114  439  451   70  662
   254  255  208    6  107  235  233   37  210  233   37   45  107  585
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 29	avg_acc: 0.0618	sec/iter: 22.1864
INFO:absl:predictions: tf.Tensor(
[[ 254   45    6  109  317   18  107  243  254  168   32  187  167   45
   357   45  287  238   87  234    6  235  233  124  222  254  168  238
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 25	avg_acc: 0.0632	sec/iter: 22.0725
INFO:absl:predictions: tf.Tensor(
[[ 174   56  130  297   45  107  317  225   18  225   18  107  243  438
   254   63  108   45  355  694   45  287  323  738  238  222    6  357
    29  598  447 2667]], shape=(1, 32), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 29	avg_acc: 0.0632	sec/iter: 25.3192
INFO:absl:predictions: tf.Tensor(
[[ 254   63    6   45  357  238  222  130  297   45  317  225   18  107
   336   45  357  187  254   63  210  107  109  357  237   56  254   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 27	avg_acc: 0.0639	sec/iter: 24.3170
INFO:absl:predictions: tf.Tensor(
[[ 315    6  107  109  317   45  243  113   56  130  297   87  143  316
   179    6  357  238   87  234  694  233   37   45  107  191  225   18
   107  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 29	avg_acc: 0.0630	sec/iter: 23.6364
INFO:absl:predictions: tf.Tensor(
[[ 648   71   87   20   31  349  296   20   31  130  582   45  222  254
   238  222  254  222  254  238  208  242 2667]], shape=(1, 23), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 25	avg_acc: 0.0637	sec/iter: 20.0107
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  113  137   45  187  254  238
    32  187  268   32  187  793   45  107  191  708  284  645  238  222
     6   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 29	avg_acc: 0.0634	sec/iter: 22.2471
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87 1257  222  254   45  337  917  420  238  222  254  238
   222    6  357  238  222 1017   87  428   87  234   87  234  694 2667]], shape=(1, 28), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 28	avg_acc: 0.0634	sec/iter: 22.1661
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  238  222  254   45  120   31  130  222  254  238  222
   130  297   45  357  238  222  107  179   18  107  109  105   31  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 30	avg_acc: 0.0617	sec/iter: 21.4510
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195  140   72   31   93  137   45  140   87  140
    87  140    6   45   54  115  238  208  242  238  222    6  235  233
    22   45 2667]], shape=(1, 31), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 33	avg_acc: 0.0619	sec/iter: 23.4657
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  107  109  108   45   29  598    6  225   18  225   18
   107  109  346  222  254    4   45  120  283  645  238  222  254   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 34	avg_acc: 0.0615	sec/iter: 22.4566
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87 1257  313   22   20  254  168   32  187   31  107   20
    31  876  877   45  357  238  222  254  168  238  222    6  357 2667]], shape=(1, 28), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 28	avg_acc: 0.0610	sec/iter: 19.7912
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254   45  903   37  903   37   38   56
   130  297   45   46   32  187  130  582  107  582  420 2667]], shape=(1, 26), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 28	avg_acc: 0.0605	sec/iter: 21.0110
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  226    7  179   18  107  317   19   18  225   18  225
   317   18  107   73  107  109  317   18  107  109  317   18  107  243
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 30	avg_acc: 0.0591	sec/iter: 28.1417
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254   45  903   37   38  903   37   38
    56  130  297   45  287   48    6  107  582  420 2667]], shape=(1, 25), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 27	avg_acc: 0.0589	sec/iter: 24.1819
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  222  130  222  254  255    6  120  121   45  254
   238  222  107  582  238  222  268  694   45  120  107  109  357  238
   208   31 2667]], shape=(1, 31), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 27	avg_acc: 0.0587	sec/iter: 22.5757
INFO:absl:predictions: tf.Tensor(
[[ 315  107  226  226  225  179   18  107  109  317   19   18  107   20
   107  226  226  225   18  107  179   18    7   18  107   18  107  585
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 27	avg_acc: 0.0585	sec/iter: 20.5284
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  225   18  107  317   18  244
    18  225   18  225   18  244   18  107  109  179   18   19   18  107
   585 2667]], shape=(1, 30), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 25	avg_acc: 0.0600	sec/iter: 23.1739
INFO:absl:predictions: tf.Tensor(
[[ 208   72   31  107  109  317   18    7  243  113  208  242   56  254
   238  208    6  225   18  225   18  244  431   45  671 1291   55 2667]], shape=(1, 28), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 24	avg_acc: 0.0602	sec/iter: 20.3877
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  357   45  120  166   72   31  130  582  420  648  187
   167  168   45  287  167  168  107  109   87   72   31 2667]], shape=(1, 26), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 27	avg_acc: 0.0597	sec/iter: 25.0936
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  582   45  287  238   87  234    6  254   45  357
   238   87   31 2667]], shape=(1, 18), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 23	avg_acc: 0.0593	sec/iter: 19.9437
INFO:absl:predictions: tf.Tensor(
[[ 187   31  130  297   45  120  283  645  630  187   31  903   20  420
   238   87 1209   31  876  877   45  889 2667]], shape=(1, 23), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 30	avg_acc: 0.0591	sec/iter: 20.3485
INFO:absl:predictions: tf.Tensor(
[[  56   63  108    6  107  109   29   45  357  237  107  109   29  598
   107  109  357  237  107  109   29  598  107  109   63  108    6  109
   108  316 2667]], shape=(1, 31), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 29	avg_acc: 0.0591	sec/iter: 26.8158
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  254   45
   671  108   45  287  565   18  225   18  225   18  109  254  105   31
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 32	avg_acc: 0.0586	sec/iter: 23.2436
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  103  254  168   45  671  108   45  917  420   20   45
    87  234  917  238   56  130  582  238  222   22   45  917  420 2667]], shape=(1, 28), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 26	avg_acc: 0.0590	sec/iter: 27.0623
INFO:absl:predictions: tf.Tensor(
[[ 107  317   18  225   18  225   18  225  317   18  225   18  225   18
   225   18  107  243  113   56  130  297   45  243  113  187  130  297
   187   31   93  137   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 33	avg_acc: 0.0582	sec/iter: 27.4020
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  225   18  225   18  225   18
   225   18  225   18  244   18   11   18  225   18  107  191  192 2667]], shape=(1, 28), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 26	avg_acc: 0.0593	sec/iter: 25.7494
INFO:absl:predictions: tf.Tensor(
[[ 254   63  108    6   45  357  254  168  107  109  357  254   87  234
    45  120  254  168   32  187  254   45  107  109  357  254  168  238
   177    6  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 30	avg_acc: 0.0601	sec/iter: 25.3013
INFO:absl:predictions: tf.Tensor(
[[ 254   72   31  107  109    6   45  417  529  107  109  417  529   45
   417  529   45  417  529   46  420   45  107  109  357  254   87  254
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 28	avg_acc: 0.0611	sec/iter: 22.2523
INFO:absl:predictions: tf.Tensor(
[[ 167   45   87  222  254   87  428    6  254  107  582   45  287  238
    87  815  208    6  254  266  234  694  107  109  357   45  120  283
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 26	avg_acc: 0.0624	sec/iter: 23.5528
INFO:absl:predictions: tf.Tensor(
[[ 130  537  438  420   45  120  283  645  323   87  828   20  233   37
    45  671  323  738  502  115  694  233 2667]], shape=(1, 23), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 29	avg_acc: 0.0624	sec/iter: 23.3379
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  208    6  357  237   56
   130  297   45  243  254  168  107  109   61 1434  212  287  208  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 31	avg_acc: 0.0624	sec/iter: 23.9457
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87   39  274  222    6  235  233   37   45  130  582
   238    6   45  271  287  238   87  917  238   87  346  508  107  985
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 28	avg_acc: 0.0624	sec/iter: 23.7147
INFO:absl:predictions: tf.Tensor(
[[ 167  168   87  815  208  242   56  254  168  630   45   20   45  254
   238  208   42  895  684  208  242   45  684   87  428  222  254  168
    45  120   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 27	avg_acc: 0.0634	sec/iter: 26.1643
INFO:absl:predictions: tf.Tensor(
[[ 130  107  109  196   45  903   37   38  284  645   31  107  582   45
   903   37   38   39  274  542   45  542   45  542   45  542  137  542
   137  542   45  542   45 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 32	avg_acc: 0.0641	sec/iter: 29.7457
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  109  317   18  244   18  107  243  438  254  168
   238   56  130  582   45  355 1138  417  383  317  143   31  876  877
    45  303  629 2667]], shape=(1, 32), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 31	avg_acc: 0.0638	sec/iter: 29.4276
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  244   18  244   18
   244  191   19   18  244   18  244   18  244   18  244   18  244   18
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 33	avg_acc: 0.0635	sec/iter: 24.1529
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  107  243  438  254   63
   497   87  815  208    6  357  238  208  242   56  130  109    6  357
    45  107  109 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 24	avg_acc: 0.0655	sec/iter: 25.0145
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  107  582   45  120  283   31  107  582   45  357
    45   87  428   87  249  357 1017   22  827  818  458  454  187  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 27	avg_acc: 0.0659	sec/iter: 24.9294
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  225   18  225   18  225   18  225
    18  244  431   45  903   37   22   45  120  283  645  238  222  254
    45  196  817   45 2667]], shape=(1, 33), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0654	sec/iter: 24.5195
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  191  225   18
   225   18  225   18  225   18   11   18  244  431   45  498    6   18
   107  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0649	sec/iter: 26.7624
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  357  238  222  254  238  222
   254  238  222  254  238    6   45  107  109  357  238  222  254  168
   238  208   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 33	avg_acc: 0.0646	sec/iter: 25.7357
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   87   72   31  130  297   45  120   20   31
   349  582   45   48  662   22   87  222  254  168   87  428   87  428
    87   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 31	avg_acc: 0.0648	sec/iter: 24.5828
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195  315   45    6   45  303   31  107  582    6
    45  357  238   56  130  582   87   72   31   87  222    6  357  238
   222   22 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 28	avg_acc: 0.0654	sec/iter: 25.4035
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18  107  243  438  112   85  265  903   20   31
   254   87  234   48  208  254   87  428   56  130  297   45  301  537
   420 2667]], shape=(1, 30), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 29	avg_acc: 0.0650	sec/iter: 25.6018
INFO:absl:predictions: tf.Tensor(
[[ 254   45    6  109  317   18  107  243  113  187  167   45  357  187
   254   87  222  254  238  222   22 2667]], shape=(1, 22), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 25	avg_acc: 0.0659	sec/iter: 21.4775
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  107  179   18  107   72   31  130  336   87  222  254
    45  357  238  222   32  187  254  168  238  208  242   56  254   45
   357   31  107   93  137 2667]], shape=(1, 34), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 33	avg_acc: 0.0656	sec/iter: 26.3970
INFO:absl:predictions: tf.Tensor(
[[ 167  168   87  815  208  242   56  254   45  630  115  130  582   45
    48   72   31  107   20   45  630   45  684   87  222   22   45  422
   254 2667]], shape=(1, 30), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 29	avg_acc: 0.0660	sec/iter: 26.7032
INFO:absl:predictions: tf.Tensor(
[[ 414  415  323   87  222  254   45  287  238  222  254  168  238  208
   254  168  323  120  121  143  103  254  105   31 2667]], shape=(1, 25), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 24	avg_acc: 0.0667	sec/iter: 23.7542
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225  317   18  107  317  225   18
   244   18  225   18   19   18  225   18  225   18  225   18  107  109
   105 2667]], shape=(1, 30), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 26	avg_acc: 0.0680	sec/iter: 27.8579
INFO:absl:predictions: tf.Tensor(
[[ 267  268   63  108   45  222   19  109  317   18  107  243  254   45
    45   56  130  582   45  287  238  346  508    4   45  287  238  208
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 29	avg_acc: 0.0682	sec/iter: 23.6084
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  222  254   45   72   31  130  297   45  130  297
   238  222  107   20   45  107   20   45  107   93  137  238   87  234
    87  266  222  254  168  238 2667]], shape=(1, 35), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 31	avg_acc: 0.0683	sec/iter: 27.6252
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  107  120   45  606  208  254   87  222  254  266  222
   254  238  222    6   45   72   31  107  109  420  238  222    6  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 31	avg_acc: 0.0685	sec/iter: 23.8678
INFO:absl:predictions: tf.Tensor(
[[ 174   87  222  254  168  130  297   45  120  283  645  630  187  254
   238  222  254  222  254   45  107  109   87  208    6  357 2667]], shape=(1, 27), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 27	avg_acc: 0.0685	sec/iter: 24.0130
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  719  317  225   18  225   18  107  243  438  254   45
   225   18  107  243  438  420 2667]], shape=(1, 21), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 27	avg_acc: 0.0683	sec/iter: 23.5340
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  179   18  107  317  225   18  225   18    7   18  225
    18  225   18  225   18  244   18  244   18  107  226   18  225   18
   107  243 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 30	avg_acc: 0.0682	sec/iter: 24.5652
INFO:absl:predictions: tf.Tensor(
[[  56   63  268   63   45  208  242   56  130  297  107  296   45  107
   109   29  598   45  107  109   29  598  107  109  317   18  107  824
   892  262   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 33	avg_acc: 0.0682	sec/iter: 24.5743
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87 1257  130  222  254   45  357  237    6  254  255  222
   254  168  238  222  130  297  107  108   45  107  109  876  877   45
   889 2667]], shape=(1, 30), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 28	avg_acc: 0.0676	sec/iter: 25.9354
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18  225   18  107  243  113  137   31  167  168
   107  582   45  103  187  107  582  420 2667]], shape=(1, 23), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 22	avg_acc: 0.0675	sec/iter: 21.5874
INFO:absl:predictions: tf.Tensor(
[[ 648  187   31  130  297   45  313  107  109   29  598  107  582  420
    45  287  238  222  107  537  420  630  187  254   87  234 2667]], shape=(1, 27), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 27	avg_acc: 0.0673	sec/iter: 24.7025
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45  120   31  107  582   45   48    6   87   72
    31  107  582  238  222   87   22   45  107  582  420  238   87  249
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 26	avg_acc: 0.0675	sec/iter: 23.8670
INFO:absl:predictions: tf.Tensor(
[[ 254   72   31  107  109    6   45  417  529  107  109  108   45  417
   529   45  417  529  417  529  107  109  108   45  417  529  254   87
   234 2667]], shape=(1, 30), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 26	avg_acc: 0.0687	sec/iter: 24.7203
INFO:absl:predictions: tf.Tensor(
[[ 254  168  107  108  238  208    6  107  109   29  297  107  109  317
    45  254  238  346  508  254   45  107  109  357  238  346  508  107
   109 2667]], shape=(1, 30), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 26	avg_acc: 0.0689	sec/iter: 24.7205
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  296   56  254   45  903   37   22   45  287
   771   48    6  708  222  107  109   87  420  254   87  234   31  254
    45   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 29	avg_acc: 0.0690	sec/iter: 24.8154
INFO:absl:predictions: tf.Tensor(
[[ 648  187   31  130  297   45  304  238  222  107  582  316   45  120
   121  111  238  508  187   31  107  537  420  630  187  254  105   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 28	avg_acc: 0.0686	sec/iter: 22.7730
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  225   18  225   18  107
   226   18  107  336    7  191  179   18  244   18  225   18  244   18
   107  336 2667]], shape=(1, 31), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 33	avg_acc: 0.0684	sec/iter: 24.5777
INFO:absl:predictions: tf.Tensor(
[[ 107  317  225   18  225   18  107  243  113  137   31  130  582   45
   305  564  187   31  107  108  284  645  237  238  208  893  107  109
   633   31   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 33	avg_acc: 0.0685	sec/iter: 26.2046
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179  489  254  168  107  109  317   45  107  602
   254   87  428    6  357  238  208  120   56  130  297  107  109    6
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 31	avg_acc: 0.0686	sec/iter: 26.1325
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18  431   45  243 1444   22   31  107  582  420
    45  271  224   56  130  582  196  313  107  191  225   18  225   18
   225   18    7   18  225   18 2667]], shape=(1, 35), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 31	avg_acc: 0.0686	sec/iter: 27.6756
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222    6  254  222  254  222
   254  108  316  254  222  254   87  428  254  105   31  254  105   31
   107  585 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 30	avg_acc: 0.0691	sec/iter: 25.0633
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   19  191  225   18  225   18  107  179   18
   107  109  317   18   19   18  107  109  317   18  107   18  107  243
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 27	avg_acc: 0.0691	sec/iter: 25.8553
INFO:absl:predictions: tf.Tensor(
[[ 254  168   56  130  297  107  108 1017   87 1209   56  130  297   45
   254  168  107  108 1017   22   45  107  109  105   31  107  585   71
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 29	avg_acc: 0.0689	sec/iter: 25.5682
INFO:absl:predictions: tf.Tensor(
[[  87  815  208  242   56  254  168  255  208  120  121   45  254  168
   238  208  120  107  109  357  238  208  242   45  120  283  645  238
   208   31 2667]], shape=(1, 31), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 23	avg_acc: 0.0694	sec/iter: 25.5235
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195    6   45  357  238    6   45  357  238   56
   130  582   45   54  115   22   45   54  115   22 2667]], shape=(1, 25), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 29	avg_acc: 0.0698	sec/iter: 22.0545
INFO:absl:predictions: tf.Tensor(
[[ 648   87  815  208  242  254  168  630  195  208  242   56  130  297
    45  417   87   56  357  208  254  105  108   45  208  242  107  108
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 29	avg_acc: 0.0696	sec/iter: 27.2880
INFO:absl:predictions: tf.Tensor(
[[  39  274  222    6   45  120  576   45  357   29  222    6  107  582
    45  357  237  238  222   22   45  357   45  304  238  222  254   45
   120  283   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 30	avg_acc: 0.0695	sec/iter: 24.2323
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  244   18  107  191
   708  243  113   56   18  244   18  244   73  244   18  244   18 2667]], shape=(1, 28), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 27	avg_acc: 0.0699	sec/iter: 23.1853
INFO:absl:predictions: tf.Tensor(
[[ 254   63  108    6  357  508  187  130  107  109   38   56  254   87
   428   87  428   56  357  238  208  254   45  107  109  357  237  238
   222  268   63 2667]], shape=(1, 32), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 34	avg_acc: 0.0696	sec/iter: 25.7401
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  191   19   18  225   18  225   18  225   18
   225  191  708  357  261  428  438  420  323  738  167   45  498    6
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 29	avg_acc: 0.0703	sec/iter: 24.3027
INFO:absl:predictions: tf.Tensor(
[[ 254  222  208  242   45  254  168  107  417  529  671  108   45  417
   529   45  417  529   45  417  529   45  917  420 2667]], shape=(1, 25), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 20	avg_acc: 0.0707	sec/iter: 22.6898
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18   19   18  107  317  225
    18  107  243  113   63  108  187  107  109   38  284  645  237   56
   107  109  705 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 26	avg_acc: 0.0717	sec/iter: 26.6892
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  130  297   45  107  108  238  222  254  168  238
   222  107  372  238  222  254   45  120  254  238  222  254  238  222
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 30	avg_acc: 0.0706	sec/iter: 23.7851
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  357  237   56  254  168   56  167  168   56  130
   297   45  107  537  420   45  107  109   29  297  203  254  168   87
   234   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 29	avg_acc: 0.0711	sec/iter: 25.9529
INFO:absl:predictions: tf.Tensor(
[[ 254  168  238  222  254  168  130  297   45  107  582  107   20   45
   107   20   45  271  287  238   87  344  130  297  238  222  254  168
   238  208   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 32	avg_acc: 0.0710	sec/iter: 24.5363
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  222  254  222  254  255    6  254  168  107  582
    45  287  238  222   22   45  120  283  645  238  222  254  168  238
   208   31 2667]], shape=(1, 31), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 28	avg_acc: 0.0707	sec/iter: 25.2324
INFO:absl:predictions: tf.Tensor(
[[ 254  168  107  108   45  254   72   31  107  109  105   31   56  130
   297   45  917  420  238  208  254  168  107  109  508  107  582  254
    87   72   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 29	avg_acc: 0.0711	sec/iter: 26.2187
INFO:absl:predictions: tf.Tensor(
[[ 130  297  508  187   31  130  297   45  222   31  130  582  238  222
     6  357  238  222  254  168  238  222  108 2667]], shape=(1, 24), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 22	avg_acc: 0.0709	sec/iter: 21.1559
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  107  317  225   18
   225   18  225   18  244   18  244   18  244   18  244   18  244  179
  2667]], shape=(1, 29), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 26	avg_acc: 0.0715	sec/iter: 24.2105
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  357  238  222    6  254  168   32
   187  254  168   32  187  254  238  222   32  187  254  168  238  222
   254   45  176 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 25	avg_acc: 0.0722	sec/iter: 26.5264
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  438  254
    45  287  124  222  254  105   31   18  225   18  244  431   45  303
    37  254 2667]], shape=(1, 31), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 31	avg_acc: 0.0720	sec/iter: 23.7040
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179  107  317   19  109  317   18  107  109
   317  225   18   19   18    7   18  107   73  708  222  254   45  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 32	avg_acc: 0.0716	sec/iter: 23.1962
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   87  208  242  187   31  107  582   45  120
    87  428    6  357  508  107  109   29  297   45  107  109  187  254
    45  254  168 2667]], shape=(1, 32), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 29	avg_acc: 0.0718	sec/iter: 24.7198
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  225   18  225  317
    18   19   18  225   18  107  109  317   18  107  109  317   18   19
   109 2667]], shape=(1, 30), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0716	sec/iter: 27.9869
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   48  208  242   56  187  254   45  107
   537  420  238   56  130  297  107  109  420  365   37   45  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 30	avg_acc: 0.0712	sec/iter: 26.9726
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317   18  107  317  225   18
   225   18  107  243  113  137  708  107  109  705   37   38   56  107
   109   22 2667]], shape=(1, 31), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 28	avg_acc: 0.0714	sec/iter: 26.6980
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  120  222  254  222  254  168   32  187   31  107
   179    6   18  107  317   22   45  120   31   18  244   18  107  582
  2667]], shape=(1, 29), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 24	avg_acc: 0.0717	sec/iter: 24.0687
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  323  222  254   87  222   22  254
   238  222   22  254  238  222  254  168  428   87   72   31  254  105
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 29	avg_acc: 0.0723	sec/iter: 24.6071
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  225   18  107  191   19   18  225   18  225   18
   225   18  225   18  225   18  225   18  109  105  187  167   45  305
    45  243 2667]], shape=(1, 31), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 31	avg_acc: 0.0725	sec/iter: 24.5392
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  113  187   31   56  187   31
   254    4   45  187  107  582  107  317  343  268   87  428    6  107
   109  357 2667]], shape=(1, 31), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 32	avg_acc: 0.0721	sec/iter: 25.0836
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   48    6  107   20   31  107  582   45  120
    87  428    6  357  238  187  876  877   45  107  537  420  238  177
     6  254   45 2667]], shape=(1, 32), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 29	avg_acc: 0.0724	sec/iter: 27.9570
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18    7  191
    19   18  225   18  225   18  225   18  244   18   19   18  107  243
   254   45  268 2667]], shape=(1, 32), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 31	avg_acc: 0.0726	sec/iter: 29.9484
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  305  269  130  297  107  109  357   45  196   45  357
    45  287  238   32  187  254  168  238   87  234 2667]], shape=(1, 25), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 24	avg_acc: 0.0722	sec/iter: 22.5755
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  222  130  297  166  212  287  238  222  262  316  179
    18  244   18  107  109  317   18  244  109  105   31 2667]], shape=(1, 26), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 23	avg_acc: 0.0727	sec/iter: 22.7575
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222   22   31  130  582  420
   238   87  428  222  254  105   31  323  105   31  876  877   45  105
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0723	sec/iter: 23.1115
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18   19   18  226  243  254  255  208  242   56  130
   297  187  254  168  107   73  107  179   18  107  109  108   45  120
   283  645 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 29	avg_acc: 0.0726	sec/iter: 24.8207
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109    8   19  191  244   18  107  109  179   18  107
    20  254   45  107  109   56  254  168  107  109  357  238   56  167
    45  287 2667]], shape=(1, 31), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0724	sec/iter: 24.7396
INFO:absl:predictions: tf.Tensor(
[[ 254   72   31    6  107  109  357   45  417  529   45  417  529   45
   417  529   45  417  529  671  108  187  876  877   45  417  254   45
   417  529 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 27	avg_acc: 0.0731	sec/iter: 23.5613
INFO:absl:predictions: tf.Tensor(
[[  87  428   56  254  168  130  297   45  268   63  108   45  107  537
   420  238  222  107  582  238   87  234  694  254  168   87  346  508
   233 2667]], shape=(1, 30), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 28	avg_acc: 0.0732	sec/iter: 24.3179
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  179   18  107  317   18  225   18  225   18  431
    45  722  110  105 1756  187  876  877   45 1283 1577  120  121  120
   283  645 2667]], shape=(1, 31), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 32	avg_acc: 0.0728	sec/iter: 23.5109
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  317  225   18  107  226  243  113  137   31  130  297
   187  225   18  107  537   84   37   45  107  109  317   18  107   73
   708  222  254   45  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0724	sec/iter: 29.9422
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  630  108  238  222  254   87
   222  254  238  222  254  238  222  254  238  222  254  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 33	avg_acc: 0.0722	sec/iter: 26.3138
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   87  222  254  108    6  254  168  238
   222  254  238  222  254   45   72   31  254  168  238  222  254   45
   328  222   87  234 2667]], shape=(1, 33), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 30	avg_acc: 0.0717	sec/iter: 25.5485
INFO:absl:predictions: tf.Tensor(
[[  87  428   56  130  582   45  107  109  317  268   31  107  243  420
   238   56  130  297   45  107  109  357  237  238  222  254  168   45
   262  316 2667]], shape=(1, 31), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 29	avg_acc: 0.0718	sec/iter: 24.8767
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179  107  317   18  107  243  113  107  296   56  130
   297   45  107  336  127  284  645  237  675  374   18  107  824  892
   447 2667]], shape=(1, 30), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 26	avg_acc: 0.0726	sec/iter: 25.3156
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  222  315  323  120   45  222   22  316  179  238
   222  254  168  323  662   22   45  120  254   87  222  254  168  238
  2667]], shape=(1, 29), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 28	avg_acc: 0.0720	sec/iter: 24.9702
INFO:absl:predictions: tf.Tensor(
[[  56   63  108    6  357   61  120  121  111  238   87  115   87  428
    87  815  208  242  107  109   29  598  357  238  346  508  357  238
   222  268   63 2667]], shape=(1, 32), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 33	avg_acc: 0.0719	sec/iter: 26.6942
INFO:absl:predictions: tf.Tensor(
[[ 254   45    6  107  317   18  107  243  113  107  243  420  238  187
   254   45  357  187  254   87  222   87  234  694  107  109    6  254
    45  176 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 27	avg_acc: 0.0721	sec/iter: 23.2820
INFO:absl:predictions: tf.Tensor(
[[ 107  226  179   18  107  317   18  107  243  113  137   31  107  296
    45 1283  107  336  284  645  237   56  254  168  107  109   29  598
    45  196  108 2667]], shape=(1, 32), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 32	avg_acc: 0.0719	sec/iter: 24.1432
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  225  317   18  107  317   18  107  109  317   18  225
    18  225   18  225   18   19   18    7   18  107   18    7   18   67
   192 2667]], shape=(1, 30), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 30	avg_acc: 0.0719	sec/iter: 22.7121
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   32  187   31  107  108   45   72   31
   254   63  108    6  538  508  529  323   87  222  254  168  238  222
   254  168 2667]], shape=(1, 31), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 31	avg_acc: 0.0717	sec/iter: 25.2859
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109  108   45  222  254   87  428   87   31  107  109
   254   45  671  120   45  124   87  222  254   87  420  238  222  254
   168  238   87 1209   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 31	avg_acc: 0.0714	sec/iter: 25.2240
INFO:absl:predictions: tf.Tensor(
[[ 254  168  108  115  130  297   87  222  107   93  137  254  168  238
   222  254  238   87   72   31  107  109  105   31  238  222  254   45
   120   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 30	avg_acc: 0.0712	sec/iter: 22.7485
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  903   37   38   56  130
   582  254   87  815  208    6  107  109  107  582  420 2667]], shape=(1, 26), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 27	avg_acc: 0.0710	sec/iter: 24.2500
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  179   18  107  317  225   18  225   18  225   18  225
    18  225   18  225   18  244   18  244  431   45  268   63  108   45
   671 1291 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 29	avg_acc: 0.0711	sec/iter: 24.7543
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   19   18  107  317   18  107  243  438  254
    45  287   48  208    6  357  238  208   72   31   18  107  498    6
   538    6  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 28	avg_acc: 0.0715	sec/iter: 24.6511
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  296   20   45  243  113  137   31  107   20
    45  287  238  187  254  212  287  208   37  203  107  109  105   31
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 28	avg_acc: 0.0718	sec/iter: 22.9125
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  107  243  438  254   63
   287  208  254   45   46  420  238   56  130  297  498    6  107  109
    29  297   45   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 32	avg_acc: 0.0716	sec/iter: 24.6598
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254  168  107  108   45  357  237   56  254  238
   222  254  238  222  876  877   45  357   32  187  268  238  222  254
   168  107  602  254   63 2667]], shape=(1, 34), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 34	avg_acc: 0.0714	sec/iter: 25.4009
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225  317  225   18  225   18  225   18  225
    18  107  243  438  254   63  210    4   45  357  238  222  243  420
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 28	avg_acc: 0.0711	sec/iter: 24.8123
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   87  428   48  208   31  107   20  254   45
    48  208   20  254   87  733  876  877  238  222  254  168  238    6
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 26	avg_acc: 0.0712	sec/iter: 22.2612
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179   18  107  317   19   18  225   18  107
   191   19   18  107  226   18   19   18  107  191  708  357  266  346
   508  137   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 32	avg_acc: 0.0709	sec/iter: 27.8606
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  244   18  107  243
    20  254   45  243   56  244   18  244   18  244   18   19   18  244
   179 2667]], shape=(1, 30), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 24	avg_acc: 0.0717	sec/iter: 29.0583
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317   18  225   18  225   18  225
    18  107  243  113  187  107  109  346  508   19   18  107  243  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 29	avg_acc: 0.0714	sec/iter: 25.7788
INFO:absl:predictions: tf.Tensor(
[[ 346  222  167  168   45  357   29  598  107   93   22  316  266  115
   130  297   45  107  582   45  107  109  876  877   45  124  328  222
   633   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 30	avg_acc: 0.0714	sec/iter: 25.0094
INFO:absl:predictions: tf.Tensor(
[[ 254   45  222    6  254  168  107  108   45  120  166   72   31  167
    45   87   72   31  130  917  238  222  254   87   72   31  876  877
    45   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 28	avg_acc: 0.0719	sec/iter: 26.9572
INFO:absl:predictions: tf.Tensor(
[[ 167  168  383  548  630  187  167  168   32  187   31  107  582   45
   469   45  271  287  238  222   32  187  254  168   45  417  529 2667]], shape=(1, 28), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 27	avg_acc: 0.0717	sec/iter: 24.7572
INFO:absl:predictions: tf.Tensor(
[[ 254   63  108  316  179   18  107  317  225   18  107  191   19   18
    19   18  225   18  244   18  225   18  244   18  107  191   19   18
   244   18  107  585 2667]], shape=(1, 33), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 32	avg_acc: 0.0712	sec/iter: 28.5607
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  268 1908   48  208  242   56  130  297   45
   287  254  107  109  317   45  107  537  420  917  420  238  222    6
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 30	avg_acc: 0.0712	sec/iter: 24.6141
INFO:absl:predictions: tf.Tensor(
[[ 174  222  254   45  130  297  166  130  222  167  168   45   87  428
    87  234  694  254  168   45  357   45  268   45  417 2667]], shape=(1, 26), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 32	avg_acc: 0.0712	sec/iter: 22.1000
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  225   18  225   18  225   18  107  243  438  254
    63  108    6  357  238  208   72   31  130  336  238  222  254   45
   120  283  645 2667]], shape=(1, 32), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 31	avg_acc: 0.0711	sec/iter: 27.5672
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  113   56  254   45  287  540  304   30
    72   31  107  108   45  287  208  242   37  120  121   63    6  357
   237    6  708  916  316 2667]], shape=(1, 34), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 32	avg_acc: 0.0707	sec/iter: 26.9815
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  222  254   87   72   31  107  582   45  287  238
   222  254  238  222  254  168   56  254  168   56  130  297   45  889
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 32	avg_acc: 0.0706	sec/iter: 25.7756
INFO:absl:predictions: tf.Tensor(
[[ 107  226  179    7  317   18  107  243  113  187   31  107   20  254
   238  208  254   63  108   45  208   72   31  130  297  238  222   98
   196 1283 2667]], shape=(1, 31), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 30	avg_acc: 0.0704	sec/iter: 24.7811
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317  225   18   19   18  107  243   56  130  336
    22   45  271  287  208  254   87   72   31  876  877   45  357  266
   633   31  107  109 2667]], shape=(1, 33), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 37	avg_acc: 0.0700	sec/iter: 30.0769
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317   18  107  243  113  187  225   18  225
    18  107  372  238  187  107  191  192  105  187  167  168  137  892
   262   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 31	avg_acc: 0.0701	sec/iter: 26.5845
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18    7  243  254   45
   287  208  254   45  287   48  208  254   63  108  238  222  254  168
   238  208  137 2667]], shape=(1, 32), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0699	sec/iter: 27.4654
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  130  235  286  107  109  317  343  254   45  287  238
     6  254   45  357  238   87  346  508  187  254   87  234   45  120
   283    6  254   63 2667]], shape=(1, 33), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 34	avg_acc: 0.0700	sec/iter: 27.1834
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  107  243  438  254   63
   108   45  287  238  346  508  187  254  255    6  109  502  254   45
   120   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 27	avg_acc: 0.0706	sec/iter: 26.5815
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  107  226   18  107  317
   225   18  107  336  268   63  210  107  191   19   18  107  109  346
   508  187  107  109 2667]], shape=(1, 33), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 25	avg_acc: 0.0714	sec/iter: 29.0539
INFO:absl:predictions: tf.Tensor(
[[ 187   31   18  107  179   18  107  317  225   18  225   18  225  317
    18  225   18  225   18  244   18  244  431   45  268  238    6  107
   109   29   22 2667]], shape=(1, 32), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 30	avg_acc: 0.0714	sec/iter: 26.6302
INFO:absl:predictions: tf.Tensor(
[[ 613    4  255    6  107  109  317   18  225   18  226  243   56  254
   168   56  254  238   56  244   18  244   18  244   18  225   18  244
    18  244  109 2667]], shape=(1, 32), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 32	avg_acc: 0.0714	sec/iter: 27.6351
INFO:absl:predictions: tf.Tensor(
[[ 174  208  242   56  130  297   45  107  317  268  694  107  582   45
   107  582  107   20   62  112  107  235 2667]], shape=(1, 23), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 25	avg_acc: 0.0712	sec/iter: 22.2433
INFO:absl:predictions: tf.Tensor(
[[ 107  226  179   18  107  317   19   18  107  179   18  107  296   56
   130  297  107  226   18  225   18  107  191   19   18  107  191   15
  2667]], shape=(1, 29), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 33	avg_acc: 0.0711	sec/iter: 27.1323
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  179   18  107  109  317   18  244   18  244
   317  210    4   84  375   38   56  244   18  244   18   67  192 2667]], shape=(1, 28), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 26	avg_acc: 0.0714	sec/iter: 23.8706
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195  140   87  140   72   31  130  582   45  566
   285   31  876  877  238    6   45  357  238  222    6  357  238  222
    87   31 2667]], shape=(1, 31), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 36	avg_acc: 0.0711	sec/iter: 26.4471
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18    7  243  438  420   32  187   31   56  254
    45   56  130  582   56  167  168  107  191  708   18  225   18  225
    18  225   18  107  985 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 30	avg_acc: 0.0712	sec/iter: 28.8750
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255  316  179    7  317   18  107  317   18  244   18  107
   191  225   18  244   18  244   18  244   18  244   18   67  192 2667]], shape=(1, 28), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 25	avg_acc: 0.0717	sec/iter: 24.7426
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  225   18    7   18  225   18
   225   18  225   18  107  226   18  225   18  225   18  225   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0714	sec/iter: 27.6799
INFO:absl:predictions: tf.Tensor(
[[ 167  168   32  187   31  107  317   22  316  254   87  234   87  428
   733  254  238   87  428  508  187  254   87  428   87  222  254   45
   120   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 29	avg_acc: 0.0716	sec/iter: 25.0941
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  317  225   18  107  243  438  254  168  238
   208  137  542  137  542  137  542  708  266  222  542  137  542  137
   542  137  542  137  542 2667]], shape=(1, 34), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 31	avg_acc: 0.0714	sec/iter: 33.3230
INFO:absl:predictions: tf.Tensor(
[[ 613    4    6  107  109  317   18  225   18  244   18   15   18  244
    18  244   18  244   18  244   18  244   18  244   18  244   18  244
    18 2667]], shape=(1, 30), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 29	avg_acc: 0.0714	sec/iter: 28.6152
INFO:absl:predictions: tf.Tensor(
[[ 613    4  107  109  179    7  317   18  317   18  225   18  225   18
   225   18  225   18  244   18  244   18  244   18  244   18  225   18
   244  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 32	avg_acc: 0.0713	sec/iter: 25.2071
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18   19   18  107  179   18  107  226  226    7  317
   225   18  225   18  107  179   18  244  431   45  662  357 2667]], shape=(1, 27), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 26	avg_acc: 0.0711	sec/iter: 23.9799
INFO:absl:predictions: tf.Tensor(
[[ 648   87  166   72   31  130  297   45  225   18  225   18  244  254
   222  254  238  222    6  357   45  107  109    6  254  168  238    6
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 29	avg_acc: 0.0708	sec/iter: 24.7364
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  238  208    6  107  109   32  187  254
    45   72   31  107  109  357  238  222  254  168  238  222  254  168
   238  208   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 27	avg_acc: 0.0708	sec/iter: 27.0801
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243  113  107  296   56  254   45  903
    20   31  107  582   56  107  109  357  237  177    6  254   45  143
   316 2667]], shape=(1, 30), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 34	avg_acc: 0.0709	sec/iter: 26.6893
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  243  254  168   56  130  297   45  903  447  254
    63   33   34  187  254   45   48  208  254   87  234  694  254   87
   234   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 29	avg_acc: 0.0709	sec/iter: 25.5597
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  222   31  107   20   45  222  254
   168  238  222    6   45  107  109  357  254  168   87   72   31 2667]], shape=(1, 28), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 31	avg_acc: 0.0707	sec/iter: 23.0657
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  107  243  438  254  168  107  109
    48  208   72   31   56  357  237  323  738   87   72   31  107  179
     6  254   45 2667]], shape=(1, 32), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 31	avg_acc: 0.0706	sec/iter: 25.6469
INFO:absl:predictions: tf.Tensor(
[[ 374  179   18  107  317  225   18  225   18  225   18  225   18  225
    18  225   18  107  226   18   15   18  244  431   45  243   48    6
   357  108  316 2667]], shape=(1, 32), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 31	avg_acc: 0.0703	sec/iter: 24.8388
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  222   62   29  598  357  238  222 1490  684  752   45
   287  238  346  508  187  876  877   45  120  121  120  283   45  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 25	avg_acc: 0.0704	sec/iter: 22.9282
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243   48  208   31   56  254  107   20
    31  107  109  108  187  254   45  107  537  420  168  238  208    6
   107  109  108 2667]], shape=(1, 32), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 31	avg_acc: 0.0700	sec/iter: 27.8118
INFO:absl:predictions: tf.Tensor(
[[ 187   31  130  297   45  222  254  222  107  109  438  420   45  287
   238   87 1209   31  876  877   45  107 1340 2667]], shape=(1, 24), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 30	avg_acc: 0.0699	sec/iter: 25.9351
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18  107  317   19   18  225   18  107  109
   317   18  225   18  107  109  357  237  675  187  167   45  124  105
    31  107  109   30 2667]], shape=(1, 33), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 29	avg_acc: 0.0700	sec/iter: 24.9570
INFO:absl:predictions: tf.Tensor(
[[ 404  268   63    4  255  208  242   56  107  109  317   45  417  529
    45  417  529   45  417  529   45  417  672  203  417  672 2667]], shape=(1, 27), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 22	avg_acc: 0.0699	sec/iter: 23.1654
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  179  107  317   18  225   18  225   18  244   18  244
    18  244  431   45  671  237  675  187  107  109  346  508  222  254
    45  187   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 32	avg_acc: 0.0699	sec/iter: 25.4045
INFO:absl:predictions: tf.Tensor(
[[  63    4   63    6   38   45  357   72   31  130  297   87  428    6
   254  238  222    6  357   45  107  537  420  238  222  254  168  238
   222  268 2667]], shape=(1, 31), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 32	avg_acc: 0.0699	sec/iter: 25.6488
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317  268   63   45  903   37   38  233   37   45   46
   420  238  208  242   45  903   37   45  630  195   37   45  120  283
    45  107  985   31 2667]], shape=(1, 33), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 33	avg_acc: 0.0699	sec/iter: 27.3044
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   56  130  297   45  305  254  168  107
    20  254   45  903   20   31  876  254  266  222  254  168  508  107
    93  137   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 32	avg_acc: 0.0696	sec/iter: 26.3789
INFO:absl:predictions: tf.Tensor(
[[ 174    6  357   87  166  254  168   56  167  168   56  130  582   45
    87  166  130  297   45  107  109  357  420  630  187  167  168  203
   254   45  176 2667]], shape=(1, 32), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 33	avg_acc: 0.0698	sec/iter: 26.9305
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18    7   18  107  243
   254   45  671  120  254   87  208  242  671 1291   48  208    6  107
   109   29  297 2667]], shape=(1, 32), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0695	sec/iter: 27.8350
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225   18  225   18
   244  243  113  137  708  357  237  675  374   18  244   18   67  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 27	avg_acc: 0.0697	sec/iter: 24.3115
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254  168   56  254  168   87  828  107
   109  187  254  255    6  254  168  107  109  108   45  120  283  645
   237    6  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0695	sec/iter: 28.4198
INFO:absl:predictions: tf.Tensor(
[[   6  107  179  137  287  254   45  903   37   38   87   22  254   87
   234   45  287  238  222  254  168  238   87  234   31  254   63 2667]], shape=(1, 28), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 25	avg_acc: 0.0695	sec/iter: 24.5365
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  346   72   31  130  297   45  469  357  266  222
   254  168   56  130  582   45  107  582  107  109  346  222  254  266
   222   22 2667]], shape=(1, 31), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 28	avg_acc: 0.0695	sec/iter: 25.8900
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  130  297   45  107  317   22   45  684  752   45
   357  108  316  266  222   87 1257  313   22   45  357  238  222  254
    45  357   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 31	avg_acc: 0.0695	sec/iter: 26.4989
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  113  187  254   63  497
   187  130  297  269    4   45  107  109  187  254   63  497 2667]], shape=(1, 27), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 25	avg_acc: 0.0696	sec/iter: 21.1497
INFO:absl:predictions: tf.Tensor(
[[  63  108    6  357  107  109  317   18  107  243   56  254   63  108
    45  224   87  428   87  815  208  242  107  109   29  297  238  208
     6  107   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 33	avg_acc: 0.0695	sec/iter: 30.4613
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18  107  243  113   56  130  297   45  243
   254   87  234   31  107  109  357  420   45  287  208   72  876  877
    31  107  985   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 32	avg_acc: 0.0693	sec/iter: 27.2977
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  614  630  111  238   87   72   31  107   20   45  287
   238   87  234  917  238   87  166   71   87  105   31   93  137   45
   105   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 27	avg_acc: 0.0693	sec/iter: 26.5083
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  113  187   31   56  254   45  903
    37  592   45  903   37   22   45  107  191  708  107  179   18  244
    18  107  985   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 31	avg_acc: 0.0691	sec/iter: 27.7391
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  357  238  208  242   45  357  237    6  254   45  357
   237    6  357  238  208    6  357  237  107  109  357  254   45 2667]], shape=(1, 28), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 29	avg_acc: 0.0695	sec/iter: 22.6365
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222  254  168   32  187  254
   238  208   72   31   56  254  168  428   87   72   31 2667]], shape=(1, 26), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 23	avg_acc: 0.0698	sec/iter: 23.2664
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  243  254   63
   108   45  671  108  566  143   31   18  225   18  109  538  161  162
   105  187  254   63 2667]], shape=(1, 33), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 31	avg_acc: 0.0696	sec/iter: 26.6032
INFO:absl:predictions: tf.Tensor(
[[  56  107  179   18  107  317  225   18  107  243  438  254   63  108
    45  287  771  254  266  222   22   45  268   63  108 1017   87  234
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 31	avg_acc: 0.0695	sec/iter: 23.9254
INFO:absl:predictions: tf.Tensor(
[[ 130  336  258  195  315   45  357  237  675   85  225   18  225   18
   225   18  107  582   45  268   32  187  107  109  357  237  238  222
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 31	avg_acc: 0.0693	sec/iter: 24.9782
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  420  630  187  254   45  903   20  420
   238  208    6  708  187  254  694   33 2667]], shape=(1, 23), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 25	avg_acc: 0.0692	sec/iter: 22.8153
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  226  226   18  225   18   19   18  107
   243  266  310  585   45 2667]], shape=(1, 34), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 32	avg_acc: 0.0692	sec/iter: 28.2287
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195  140   87  140    6   45  120    6   87  140
    87  140    6  357  238   87  344    6  357  238    6  357  238  222
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 35	avg_acc: 0.0691	sec/iter: 25.6675
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317  225   18  225   18  107  243  438  254
   238  346  508  187   31  107   73  107  109  105  187  254   45  287
   771 2667]], shape=(1, 30), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 31	avg_acc: 0.0689	sec/iter: 26.2352
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255  316  179   18  107  317   18   19   18  107  317   18
   225   18  244   18  244  179   18  244   18  244   18  225   18  107
   985 2667]], shape=(1, 30), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 27	avg_acc: 0.0691	sec/iter: 25.3260
INFO:absl:predictions: tf.Tensor(
[[ 130  297  166   45  222  130  297   45  357  238   87 1209  167  168
    45  357   45  630  187  876  877  238  222  254  168   45  357 2667]], shape=(1, 28), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 33	avg_acc: 0.0692	sec/iter: 23.4762
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18  225   18  225   18
    19  109  357 2667]], shape=(1, 32), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 32	avg_acc: 0.0692	sec/iter: 25.4164
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222   22  316  254   87   72
    31  254  238  222  254  238  222  254  238  346  508  107  109  105
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 29	avg_acc: 0.0695	sec/iter: 25.7165
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  113   56  130  297   45
   287  771   48  208    6  357  237  107  109   29  110  630  187  254
    45  671  716 2667]], shape=(1, 32), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 31	avg_acc: 0.0695	sec/iter: 25.8920
INFO:absl:predictions: tf.Tensor(
[[ 254  168  238  222  254  168   32  187   31  323   22   45  120  121
   111  238   87  222   22  254  266  222  254  168   87  346  508  137
   105   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 30	avg_acc: 0.0698	sec/iter: 27.2196
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  438  254   63  108  187  254   63
   108  187   31  187   31  107  191  225   18  107  372  238  208  254
   168  238 2667]], shape=(1, 31), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 32	avg_acc: 0.0695	sec/iter: 26.4222
INFO:absl:predictions: tf.Tensor(
[[ 251  108  115  109   29  110  630  195  115   45  115  116  254   87
    72   31  107  109  346  508    4  115  107  109  571   52 2667]], shape=(1, 27), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 22	avg_acc: 0.0695	sec/iter: 23.0498
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  379  336   87  222    6  357  237    6  254  168   45
   357  237  238   87  208    6  357 2667]], shape=(1, 22), dtype=int64)	labels: [[ 251  268  417    4  255  391  110  630  416  243   12    4  417 1950
  1391 1539  508    8  318  822    4  115  197]]	errs: 23	avg_acc: 0.0693	sec/iter: 21.4452
INFO:absl:predictions: tf.Tensor(
[[ 254   87  234    6  254  168  107  109  187  254   45  287  238  208
   254  168  107  109  108   45  107  109  187  254  168  238  222  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 31	avg_acc: 0.0692	sec/iter: 24.5246
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  438  112   85  233   37   45
   287   48  208  357  237  107  109  107   73  708  222    6  357 2667]], shape=(1, 28), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 28	avg_acc: 0.0695	sec/iter: 24.9122
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222   31  130  537  420  254
   238   87  428  733  357   45  323  105   31  254  105   31 2667]], shape=(1, 27), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 31	avg_acc: 0.0693	sec/iter: 24.0571
INFO:absl:predictions: tf.Tensor(
[[  56   63  268   63  268   63   45   29  598  107  582    6   45  107
   109   29  598   45  107  109   29  598  107  109  317   18  107  824
   892  262   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 32	avg_acc: 0.0694	sec/iter: 31.5231
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  107  243  438  254   63
   497  254   45  301   38   37    4 1283 1577  284  645  237  238  222
   254   45  310  585   45 2667]], shape=(1, 34), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 34	avg_acc: 0.0692	sec/iter: 29.5435
INFO:absl:predictions: tf.Tensor(
[[   6   45  222  243   48    6  357  237    6  357  237    6  357  237
     6  357  237    6  254   45  107  317  268   63  108   45  610  239
  2667]], shape=(1, 29), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 27	avg_acc: 0.0695	sec/iter: 26.0398
INFO:absl:predictions: tf.Tensor(
[[  87  815  208  242  254  168  255  208  671  143   31  254  168  238
   208  120  195  208  120  121  120  121  120  283   45  357  238  208
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 22	avg_acc: 0.0699	sec/iter: 28.9990
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  225   18  225
    18  225   18  225   18  107  226   18  244  431   45  211  212  582
    45  310  585 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 33	avg_acc: 0.0699	sec/iter: 33.3739
INFO:absl:predictions: tf.Tensor(
[[ 346  222  254  168   45  120   56  130  297   45  120  283   31  107
   109  317   22   45  271  287  323   22  489  391  267   22  316  254
    45  120   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 34	avg_acc: 0.0698	sec/iter: 27.5124
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243   48  208    6  235  233   37
   210  107  582  107  537  417  529  107   73  107  582  238  208    6
   107  109  108 2667]], shape=(1, 32), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 31	avg_acc: 0.0696	sec/iter: 27.2745
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87  234  917   87 1257  313   31  107   20   45   20
   254  238   56  130  297  107  109  105   31  316   45  917  420 2667]], shape=(1, 28), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 26	avg_acc: 0.0697	sec/iter: 25.4278
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18   19   18  107  243  438  254   63  108
   316  187  225   18  244  431   45 1271  187  268   63  108   45  469
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 31	avg_acc: 0.0696	sec/iter: 26.3017
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317  225   18  107  243  113  137   48  208  254  168  238
   208  357  237   56  130  297  107  109  138  287  238   87   72   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 31	avg_acc: 0.0695	sec/iter: 25.9882
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  243  438  254  255    6  107  109
    30   56  254   45  917  107  109  317   18  225   18  225   18  107
   431   45  889 2667]], shape=(1, 32), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 32	avg_acc: 0.0693	sec/iter: 29.1755
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  305  269  130  297   87  222   22   45    6  254  238
   222  254   45  287  238    6   45  107  109  876  877  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 29	avg_acc: 0.0690	sec/iter: 26.4265
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317   18  225   18  225   18  225
    18  225   18  225   18  107  179   18  244   18  244   18   11  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 28	avg_acc: 0.0686	sec/iter: 25.7313
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  238  222  254   45  222    6  107  582  238   87
    45  120  107  582   45  357  238  222   22 2667]], shape=(1, 24), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 27	avg_acc: 0.0685	sec/iter: 21.7911
INFO:absl:predictions: tf.Tensor(
[[ 167   45   87  222  107  317   18  107  243  254   87  428 1243  187
   254   45   48    6  357  508  187  876  877   45  130  297   45  120
   283   45   87   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 30	avg_acc: 0.0686	sec/iter: 26.6304
INFO:absl:predictions: tf.Tensor(
[[ 107  109  195   45  195  417  672   45  903   37   45  903   37   45
   107   45  107  582  107   93   45  107   45  107  582   45  107 2667]], shape=(1, 28), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 28	avg_acc: 0.0684	sec/iter: 23.4130
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  243  438
   254   45  671  716   18  225   18  225   18  225   18  225   18  225
    18  244  431   45 2667]], shape=(1, 33), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 31	avg_acc: 0.0683	sec/iter: 29.1447
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  226   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18  225   18  225   18
   107  585 2667]], shape=(1, 31), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 29	avg_acc: 0.0680	sec/iter: 27.0641
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  108   45  671  108  316  179   18  225   18  225   18  225
    18  244  254   63 2667]], shape=(1, 33), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 32	avg_acc: 0.0678	sec/iter: 27.7811
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  226  243   48  208  120   56  130  297   45
   107  109  187  254  168   45  107  109  187  254   87  234   45  694
   233 2667]], shape=(1, 30), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 29	avg_acc: 0.0678	sec/iter: 27.9907
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  244   18  244   18
    19  191   19   18   19   18  244   18  244   18  244   18  244   67
   192 2667]], shape=(1, 30), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 29	avg_acc: 0.0679	sec/iter: 28.1382
INFO:absl:predictions: tf.Tensor(
[[ 254  168  222   32  187  254  168  130  297   45  903   20   31  349
   582   45   72   31  130  582  238  222  254   87   72   31  876  877
    45  475   72   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 30	avg_acc: 0.0681	sec/iter: 28.5758
INFO:absl:predictions: tf.Tensor(
[[  87  254  168  238  222  254  105   31  130  297   45  107  537  420
   323   87  234  694  254   87  428  733  254  238  222   87  222  254
    45  120   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 31	avg_acc: 0.0679	sec/iter: 31.2358
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18   19   18  107  317   18  107  109  317
   225   18  225   18  107  191   19   18  244   18  244   18  107  824
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 29	avg_acc: 0.0680	sec/iter: 27.8613
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  317   18  107  243  305   45  120  107  179   18  225
    18  225   18  225   18  107  243   48  208   20  254   87  346  508
   254   45  187   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 30	avg_acc: 0.0681	sec/iter: 26.7583
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107  243  438  112   85  225
    18  225   18  225   18  225   18  107  109  105  187  254   45 2667]], shape=(1, 28), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 27	avg_acc: 0.0679	sec/iter: 23.4278
INFO:absl:predictions: tf.Tensor(
[[ 648  107  109    8  254   45   72   31  130  297   45   72   31  107
    20  254  168  107  108    6   45  107   20   45  107  109  105   31
   254   45  120   31 2667]], shape=(1, 33), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 28	avg_acc: 0.0679	sec/iter: 27.9720
INFO:absl:predictions: tf.Tensor(
[[ 208  254  168  107  108    6   45  195  208    6  107  109  238  208
   254  238  208   72   31  107  109  357  237  346  508  107  109   29
   297   45  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 27	avg_acc: 0.0679	sec/iter: 27.1103
INFO:absl:predictions: tf.Tensor(
[[  87  254  168  238  222  254  168  238  208    6   45  120  254  238
   208  254  168  107  582  238  208  242  107  109  108   45  120  254
   168 2667]], shape=(1, 30), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 33	avg_acc: 0.0679	sec/iter: 23.6471
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  222  254  222  254  168   45  120
    45  222   22   45  222  254  105   31  107   20  254  168  508  107
   109  105   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 31	avg_acc: 0.0678	sec/iter: 25.4587
INFO:absl:predictions: tf.Tensor(
[[ 648   87  208  222  254  168  107  179  208   31  107  109  317   20
   254  168  238  208    6  107  582  107  109   61  107  602 2667]], shape=(1, 27), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 30	avg_acc: 0.0677	sec/iter: 22.1952
INFO:absl:predictions: tf.Tensor(
[[ 225   18  225   18  179   18   19   18   19   18  225   18  225   18
   225   18  225   18  225   18  225   18  244   18  225   18  225   18
   107  824 2667]], shape=(1, 31), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 37	avg_acc: 0.0675	sec/iter: 24.7899
INFO:absl:predictions: tf.Tensor(
[[ 346  222  167  168   45  130  297   45  107  582  420   45  107   20
   254   45  107  582  238  208  316  254  168   45  107  108   45  107
    93  137   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 33	avg_acc: 0.0674	sec/iter: 27.7043
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  225   18  107  179   18  107
   109  317   18   19   18  225   18  225   18  107  191  708  916 2667]], shape=(1, 28), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 27	avg_acc: 0.0674	sec/iter: 29.6744
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  130  297   45  222  167  168   45  107  582   45
   120   45  287  238   87   22 2667]], shape=(1, 21), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 26	avg_acc: 0.0674	sec/iter: 26.0552
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  107  179   18  107  317  225
    18  225   18   19   18  225   18  225   18  107  431   45  303  629
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 27	avg_acc: 0.0674	sec/iter: 25.4643
INFO:absl:predictions: tf.Tensor(
[[ 323  404    4  255    6   45  120  283   31  107  824   56  130  297
    45  357  238   87  428  630  111  238  177    6  254  168   45  323
   738   45 2667]], shape=(1, 31), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 35	avg_acc: 0.0674	sec/iter: 28.4873
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45   72   31  167  168   32  187  254
   168  238  222  107  108  316  254   87  234   87  222  254  168  238
   222   31 2667]], shape=(1, 31), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 31	avg_acc: 0.0673	sec/iter: 26.8631
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225   18  225  317
   225  317  225   18  225   18  107  243  113  137 2667]], shape=(1, 25), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 33	avg_acc: 0.0671	sec/iter: 27.5077
INFO:absl:predictions: tf.Tensor(
[[ 346  222  167  168   45  385  137   45  107  582   45  120   31  107
   582   45  107  582  107   20   45  107  582  316  254   45  120  254
    45  799 2667]], shape=(1, 31), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 32	avg_acc: 0.0671	sec/iter: 27.2653
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179    7  317   18  107  243  438  254   63  497   87
  1209   56  130  297   45  903   37   38  284  645  630  187  167   45
   889   87  234 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 27	avg_acc: 0.0675	sec/iter: 27.1877
INFO:absl:predictions: tf.Tensor(
[[ 254  168  108   45  222  254  168   87   72   31  107  582   45   20
   254  238   56  130  297   45  107  109  222  254  238   87  346  508
    56  254  168  107  585 2667]], shape=(1, 34), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 30	avg_acc: 0.0676	sec/iter: 29.9451
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87  222  130  297   45   87  166    6   22   38   20
    45  357  238   87  234   45  107  109  252  238  346  508   56  254
   168  196 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 33	avg_acc: 0.0678	sec/iter: 30.0027
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18    7  317  225   18  244   18  107  243   56
   130  582   45  243  113  137  893  194  187  268  694  107  109   29
   598  244   18  107  585 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 29	avg_acc: 0.0679	sec/iter: 31.2289
INFO:absl:predictions: tf.Tensor(
[[  56  107  226  226    7  179   18  107  317  225   18  107  191   19
    18  107  243  107   73  244   18  244   18  107  226   18  107   73
   244   18   19   18  107  109 2667]], shape=(1, 35), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 31	avg_acc: 0.0680	sec/iter: 30.7924
INFO:absl:predictions: tf.Tensor(
[[   6  107  108  187  254  168  107  108  316  179   29  598  107  109
     6  254   45  417  529   45  120  121   45  120  254  168  238  222
   254   45  176 2667]], shape=(1, 32), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 32	avg_acc: 0.0681	sec/iter: 28.8628
INFO:absl:predictions: tf.Tensor(
[[   6   45  222  243  254  168    6   45  417  529  671  108  203  254
    63  108    6  287  238  208    6   98  109  108  346  508   19  109
   357  238  346  508  268   63 2667]], shape=(1, 35), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0680	sec/iter: 27.6991
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317   18  107  243  489    6  107  296  196
    45  903   37  107  336  103  187  107  109  317   18  107  109    6
   107  109  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 30	avg_acc: 0.0681	sec/iter: 25.8588
INFO:absl:predictions: tf.Tensor(
[[ 349  287  254  168  365    6  107  317   18  107  336   22   31  130
   297   45  469  357  238  222  107  109   29  297  266  222  107  109
   357   45  614  630 2667]], shape=(1, 33), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 30	avg_acc: 0.0682	sec/iter: 27.6385
INFO:absl:predictions: tf.Tensor(
[[   6  357   72   31  130  297   45  357   29  598  107  582  316  179
   225  317   18  225   18  107  191  244   18  107  179   18  107  824
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 30	avg_acc: 0.0682	sec/iter: 23.7327
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  120  283  222   22  254  168  238
   222  254   45  120  283  645  238  222  254  168  428   87  428  508
    22 2667]], shape=(1, 30), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0679	sec/iter: 27.4777
INFO:absl:predictions: tf.Tensor(
[[ 254   72   31  107  109    6   45  417  529  107  109  108   56  130
   297   45  917  420  417  383  107  109  108   45  417  529  254   45
   417  529 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 25	avg_acc: 0.0685	sec/iter: 24.9714
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  179   18  107  243  438  254
   238  208    6   18  107  109   29  297   45  889 2667]], shape=(1, 25), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 26	avg_acc: 0.0686	sec/iter: 23.6503
INFO:absl:predictions: tf.Tensor(
[[  90  404    4  255    6  107  296   45  357  237  238  222  254  238
   208  242   56  254  538    6  357  237  238  222  254   63  357 2667]], shape=(1, 28), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 32	avg_acc: 0.0684	sec/iter: 22.5809
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  903   20   31  254  255  222   31  107   20   45
   287  771   48  208   31  107  109  502  115  130  107  109   87   31
   254   45   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 29	avg_acc: 0.0685	sec/iter: 29.7622
INFO:absl:predictions: tf.Tensor(
[[ 130  107  226  226  225  179   18  107  179  137   31  107  109  317
    18  244   18  107  109  317   18  244   18   19   18  107  109  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 30	avg_acc: 0.0686	sec/iter: 23.3061
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  317  225   18  225   18  225   18  225   18  225   18
   225   18  225   18   19   18  225   18  225   18  225   18  225   18
   225   18  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 38	avg_acc: 0.0684	sec/iter: 30.3127
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  317   18  225   18  107  243  113  107  582   45  120
   121   45  187   31  187   31  107  243  113  187  268  238  208    6
   107  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 27	avg_acc: 0.0683	sec/iter: 27.2635
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45    6  107  109  357   45  417  529   45  196  108   45
   303  120  121  111  238   87  428   87  234 2667]], shape=(1, 24), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 29	avg_acc: 0.0686	sec/iter: 25.9081
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  903   20   31  107  296   22   31  107   20   45
   287  771   48  208   31  107 1025  917   87  105   31  107  372  875
    31  254   45 2667]], shape=(1, 32), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 28	avg_acc: 0.0687	sec/iter: 27.9827
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  113  187   31  107  336
   274  254   45  187  107  109  317  143  284  645  630   45   18  107
  1283 2667]], shape=(1, 30), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 31	avg_acc: 0.0686	sec/iter: 24.6737
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  305  317  225   18  225
    18  107  243  438  187  107  243  305   45  268  238    6  107  179
     6  107  602 2667]], shape=(1, 32), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 28	avg_acc: 0.0685	sec/iter: 28.3428
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  120  283  222   22   31  254  222
   254  222  254  168   32  187  254  168  428   87   72   31  254  105
    31  107   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 32	avg_acc: 0.0685	sec/iter: 27.1753
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  225   18  225   18  244   18  107  243   56  130
   297   45  271   19  191  179   18  244   18   19   18  225   18  244
    18   19   18  107  585 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 28	avg_acc: 0.0687	sec/iter: 29.8245
INFO:absl:predictions: tf.Tensor(
[[ 254  315  316  179   18  107  317   18  225   18  244   18  107  243
   254   87  234  694  254  266  222  254  105   31  167  168  137  105
    31  107  235 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 27	avg_acc: 0.0692	sec/iter: 28.4169
INFO:absl:predictions: tf.Tensor(
[[ 174    6  109  317  103  254  168   56  130  297   45  196   45  130
   582   56  130  107  582   45  107   73  244   18  107  537  222  254
    45  889 2667]], shape=(1, 31), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 28	avg_acc: 0.0692	sec/iter: 28.8894
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222   22   31  130  537  420
   238   87  428  222  254  105   31  323  105   31  254   45  105   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0690	sec/iter: 26.3366
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225  317   19   18  107  243  254
    45  357  108  238  208   72   31  254   87  254  694 2667]], shape=(1, 26), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 24	avg_acc: 0.0690	sec/iter: 24.9711
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225   18  225   18  225   18  225   18  225
    18  225   18  225   18  244   18  244   18  225   18  225   18  225
    18  225   18  107  109  357 2667]], shape=(1, 35), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0688	sec/iter: 33.9939
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109  195   87  428   87  428   45  107  582   45  120
    45  357  238   87  208  254   87  428   87  222  107  222  254   45
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 29	avg_acc: 0.0689	sec/iter: 28.2120
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  357   45  120  576   45  120  283   56  130  582   45
   107  537   45  357   45  120   22   45  120  121  120  283   45  357
    31  107   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 30	avg_acc: 0.0689	sec/iter: 27.3674
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317  220   45  243  420  630  187   31  130  582
   420  365   87  234   45  287  208  254  266  222  254  168  508  107
   602 2667]], shape=(1, 30), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 31	avg_acc: 0.0688	sec/iter: 25.2985
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  225  317  225   18  107  243  438  107  243  438  254
    45  317  225   18  225   18  225   18  225   18  225   18  225   18
   225   18  244   18  244  357 2667]], shape=(1, 35), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 33	avg_acc: 0.0685	sec/iter: 29.9529
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254   45  357  237    6  357  237   56  130  917
   107   20  254  168  107  582   45  107  109   29  297    6  254   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 27	avg_acc: 0.0684	sec/iter: 25.3631
INFO:absl:predictions: tf.Tensor(
[[  56  107  226  226    7  179  107  317   18  107  243  438  254   63
   497   87  428  508  187  254   87  815  208  254  238  222  254   45
   107  752   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 30	avg_acc: 0.0685	sec/iter: 27.0390
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18    7  243  254   45  305  317  268   32  187  254
   238  208   72   31  107   20  107  109  108  238   56  130  107  585
   571   52 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 31	avg_acc: 0.0685	sec/iter: 27.6317
INFO:absl:predictions: tf.Tensor(
[[ 167  168  238  222  107  109  357  237  233   37   45  258  195   46
    22   45  120  121   45   54  662  357  238  208  254  168   45  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 29	avg_acc: 0.0687	sec/iter: 24.8842
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  225   18  225   18
   107  226  226   18   15   18  225   18  244   18  107  317   18  107
   179  137 2667]], shape=(1, 31), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 32	avg_acc: 0.0685	sec/iter: 25.8674
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179    7  317   18  107  243  254   63  497  187  130
   537  420  365  222  675  187  268   63  497  362  114   63  108   45
   315  718   87 1209   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 29	avg_acc: 0.0687	sec/iter: 31.6810
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  222  254  168  107  108   45  357  238  222  254
   238  222  254  238  222  254  238  222  254  222  254  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 30	avg_acc: 0.0682	sec/iter: 26.9474
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  497  187  254   45  187  107  109  317  225   18  109 2667]], shape=(1, 28), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 26	avg_acc: 0.0679	sec/iter: 27.3522
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  903   37   22   45  903
    37   38   39   32  187  876  877   45  130  297   54  508  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 27	avg_acc: 0.0678	sec/iter: 28.6058
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179   18  107  317   19   18  244   18  225   18
   225  317   18  107  243   56  244   18  244   18  244   18  107  109
    29  598 2667]], shape=(1, 31), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 29	avg_acc: 0.0682	sec/iter: 27.0032
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87   31  130  297   45  222  130  537  222   22   20   31
   130  297  266  222  254  168  107  109  105  187  254  168   45  614
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 26	avg_acc: 0.0685	sec/iter: 25.4246
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317  225   18  225  317   18  225   18  244   18  225  191
    19   18  244   18   19   18  107  191   19   18  107  585 2667]], shape=(1, 27), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 27	avg_acc: 0.0687	sec/iter: 26.0424
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  179   18  107  317   18  244   18  107
    73   19   18  244   18  107  191   19   18  107  226   18   19   18
    19   18  107  191  244   18 2667]], shape=(1, 35), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 36	avg_acc: 0.0686	sec/iter: 31.2554
INFO:absl:predictions: tf.Tensor(
[[ 648  107  179   18  107  317  225   18  225   18  107  243  438  254
    45  671  238  208    6  538  508  187  254  266   87  346  508  137
    31  316   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 31	avg_acc: 0.0687	sec/iter: 28.6468
INFO:absl:predictions: tf.Tensor(
[[   7  317   18  107  243  113  107  317  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18  244   18  109   29
   598   45  268 2667]], shape=(1, 32), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0685	sec/iter: 28.5952
INFO:absl:predictions: tf.Tensor(
[[ 167  168  383  548  630  187  254  168   87   72   31  107  582   45
   469   45  271  287  508  187  254  168   87  428   87  346  508  187
   254  105   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 31	avg_acc: 0.0681	sec/iter: 28.6150
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   45  254  168  107  317   45  671  143   31  130  297
     6   45  287  254  168   45  305   45  268   63  719  671 1291  305
    45  671 2667]], shape=(1, 31), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 33	avg_acc: 0.0681	sec/iter: 24.9051
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  191   19   18  225   18  225   18  107
   243  489    6   18  107  109  105  187  254  168  238  346  508  107
   108   45  287 2667]], shape=(1, 32), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0680	sec/iter: 26.0704
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225   18  225   18  225   18  107  243  438
   254   45  225   18  107  191  244   18  244   18  225   18  225   18
   225   18  107  191  244  191  357 2667]], shape=(1, 36), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 34	avg_acc: 0.0677	sec/iter: 31.1026
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18    7   18  225   18  107  243  113  187   31  107
    20  254   45  305  187   31  107  317   18  225   18  225   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 29	avg_acc: 0.0675	sec/iter: 28.1817
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  336   87  222    6  357  237    6  254   87  222
   254   45  357  238   87  208  254  168   45  357  238  222    6   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 28	avg_acc: 0.0672	sec/iter: 26.5044
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  108   45  903   37   45  903   37   45  903   20   31
   130  297   45  630  111  258  195   46  420   22   45   87   22 2667]], shape=(1, 28), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 30	avg_acc: 0.0672	sec/iter: 26.5054
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  244   73  244   18  244   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 30	avg_acc: 0.0675	sec/iter: 30.5150
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  130  297   45  315  254  168   32  187
   254   87  346  508  103  254  168  238  222  107  824  508  107   93
   137   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 31	avg_acc: 0.0674	sec/iter: 27.6287
INFO:absl:predictions: tf.Tensor(
[[ 107  317  225   18  225   18  107  243  113  137   31  130  297   45
   187   31  130  297    6  301   38   56  130  297  508  187  254   45
   107  537  222   31 2667]], shape=(1, 33), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 35	avg_acc: 0.0673	sec/iter: 29.5406
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   18  225   18  225   18  244  431
    45  243  113  187  268  469   37   45  107  109  357   87  428   56
   130  297   45  268 2667]], shape=(1, 33), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 27	avg_acc: 0.0676	sec/iter: 30.6281
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  225   18  179   18  107  109  317   18  244   18  225
    18  225   18  225   18  244   18  244   18  244   18  109   63  108
    45  614  195  497 2667]], shape=(1, 33), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 35	avg_acc: 0.0675	sec/iter: 32.8804
INFO:absl:predictions: tf.Tensor(
[[ 130  222  268   63   45  606  208  242   56  130  336   22  671  120
   121   45  357  238   56  274  357  237   56  254   63  108   45   63
   497   87  344    6  357 2667]], shape=(1, 34), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 37	avg_acc: 0.0676	sec/iter: 34.3034
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  497  187  876  877   45  120  283  645  237  238  222    6
   107  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 35	avg_acc: 0.0675	sec/iter: 30.1221
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  222  130  297   45  287  167  917  238   87  249  357
   238   87   72   31  876  877   45  287  238  222  254  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 26	avg_acc: 0.0675	sec/iter: 29.5075
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222   22   31  130  297  166
    20  254  168   45  222  254  168   45  107  109  105   31   45  105
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0673	sec/iter: 25.7218
INFO:absl:predictions: tf.Tensor(
[[ 648  187   31  107  109    8   52   45  417  529   41  417  529   46
   420  238  187  876  877   45  120  121   45  225   18  107  985 2667]], shape=(1, 28), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 27	avg_acc: 0.0675	sec/iter: 24.5606
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  226  226  225   18  107  179  708  137   31  130  297
   187  254  107  109  317   18   19   18  244   18  107  191   19   18
   107  109  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 31	avg_acc: 0.0673	sec/iter: 26.9881
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179    7  317   18  107  243  113  137  130  297   45
   718   87 1257  313  284  645  237  675  187  130  222  254   87  234
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 27	avg_acc: 0.0676	sec/iter: 24.2656
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  109  317   18  107  243  113  107  582   45
   489  225   18  225   18  107   73  244   18  109  566  285  195  497
    45  310  585 2667]], shape=(1, 32), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 36	avg_acc: 0.0675	sec/iter: 27.1110
INFO:absl:predictions: tf.Tensor(
[[ 267  268   63    4   45  417   63  108   45  606  208  268  417  672
   203  417  529   45  357   45  107  109   45  107  191   19   18  107
   109  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 34	avg_acc: 0.0674	sec/iter: 26.6044
INFO:absl:predictions: tf.Tensor(
[[  56  107  179   18  107  317   18  107  243  438  254   63  108  238
    87 1209   56  130  297   45  120  283  645  630  268  694   45 2667]], shape=(1, 28), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 31	avg_acc: 0.0673	sec/iter: 24.2618
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179  107  317   19   18  225   18  107  191
   226   18  107  243  113  133 1069  233   37   45  107  824  892  262
    45  107  109  196   45 2667]], shape=(1, 34), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 32	avg_acc: 0.0671	sec/iter: 31.2875
INFO:absl:predictions: tf.Tensor(
[[   6   45  222  243  113  137   72   31  130  297   45  337  917  420
   238   87  222    6  357  238   87  140    6  357  238  346  508  107
    93  137   31 2667]], shape=(1, 32), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 30	avg_acc: 0.0672	sec/iter: 26.8836
INFO:absl:predictions: tf.Tensor(
[[  87  815  208  242   56  130  297   45  120  254   87  254  238  222
   107   20  254   45  287  238  208  254  168  107  582   45 2667]], shape=(1, 27), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 24	avg_acc: 0.0673	sec/iter: 24.2454
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  225   18  225   18  225
    18  107  226   18   19   18  179   18  225   18  107  109  317   18
   107  109  438  420 2667]], shape=(1, 33), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0672	sec/iter: 27.6634
INFO:absl:predictions: tf.Tensor(
[[ 254  266  222  107  179   18  107  317  225   18  107  243  254   45
   287  187  254  168   32  187  876  877   31  876  877   45  357 2667]], shape=(1, 28), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 24	avg_acc: 0.0671	sec/iter: 24.4626
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  107  243   56  244   18  244   18  244   18  244
   196   45  799 2667]], shape=(1, 32), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0669	sec/iter: 29.1484
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  130  297   45  107   93  137   72   31
   254  168   32  187  254  168  238  222  254  168  238  222    6  107
   109   29 1094 2667]], shape=(1, 32), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 30	avg_acc: 0.0669	sec/iter: 27.3755
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  130  109   29  598   87  222  130  537  420   45  120
   121   45  268  238   87  249  357  238  222  254  168   45   87  428
    55 2667]], shape=(1, 30), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 30	avg_acc: 0.0669	sec/iter: 24.8633
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  179   18  107  317   18  107  317   18  107  317
    18  225   18  107  243  438  254   63  497  107  824  892  893  305
    45  225   18  225   18  107 2667]], shape=(1, 35), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 35	avg_acc: 0.0668	sec/iter: 29.4830
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243  254   45  903   37   22   20   31
   107  317  903   37  876  877   45  107  204  891  187  268   32  187
   107  317   18  107  985    6  157 2667]], shape=(1, 36), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 31	avg_acc: 0.0669	sec/iter: 28.7929
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  244   18  244   18  107  179   18  107
   109  196   45  903 2667]], shape=(1, 33), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0668	sec/iter: 26.3242
INFO:absl:predictions: tf.Tensor(
[[ 167  168   93  137   72   31  107  582   45  684  752   31  107  582
    45  287  124  105   31   93  137   31  107  582   45  357  238  222
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 30	avg_acc: 0.0669	sec/iter: 26.3539
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  113   56  107  296   45  903
    37  210  107  235  233   37  212  287  323   87  234  447  130  297
   238  177    6  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 31	avg_acc: 0.0670	sec/iter: 28.1099
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  113  187   31   56  107   20  107
   191  225   18  225   18  107  191  244   18  107  179   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 29	avg_acc: 0.0670	sec/iter: 28.7306
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18  225   18  225   18  107  243  438  254   45
  1234  194  187   31   56  130  297  107  317   18  225   18  225   18
   225   18  244   18  244  196 2667]], shape=(1, 35), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 34	avg_acc: 0.0671	sec/iter: 28.9599
INFO:absl:predictions: tf.Tensor(
[[  56   18  179  103  254  168  107  179    6  107   20  107   20  130
   297   45  107  582  107  109    7   18  107  317   22   45  498    6
   538    6  254   45  120  121 2667]], shape=(1, 35), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 34	avg_acc: 0.0671	sec/iter: 28.2773
INFO:absl:predictions: tf.Tensor(
[[ 174  719  124  107  226    7  107  296   45  268  222  107  582    6
   107   20  107  582  107   20  107   20 2667]], shape=(1, 23), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 25	avg_acc: 0.0670	sec/iter: 21.8933
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  191   19   18  225   18    7  243  438
   254   45  271  287  208    6  254  168  107  109  108  346  508   56
    31  107  108   45  694 2667]], shape=(1, 34), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0669	sec/iter: 29.1810
INFO:absl:predictions: tf.Tensor(
[[ 167  221  187   31  107  109  187  254  168   87  428   45  254  168
   238   87  428  203  187  876  877   45  107  602  254  168  238  508
   107  985   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 29	avg_acc: 0.0669	sec/iter: 28.8078
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  179   18  107  317  225   18  225   18  107  226   18
   225   18  225   18  225   18  225   18  244   18  225   18  107  243
    45  287 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 29	avg_acc: 0.0670	sec/iter: 25.4128
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107   20   45  107  179  357  237  107  109  876  877   45
   225   18  107  109  271  187  254   45  107  109  346  508  107  109
   438  420 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 30	avg_acc: 0.0671	sec/iter: 27.6143
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  225   18  107  179   18  107  317   19   18  107  317
   225   18  225   18  107  191   19   18  244   18  244   18   19   18
   244  179 2667]], shape=(1, 31), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 27	avg_acc: 0.0673	sec/iter: 25.5830
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18    7   18  107  317
    18  225   18  225   18   15   18  225   18  225   18  225   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0672	sec/iter: 25.3137
INFO:absl:predictions: tf.Tensor(
[[ 130  107  226  226  225  179   18  107  179  137   31  107  109  317
    18  107   73  708  284  645  237   48  208  242   56  254   45  417
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 30	avg_acc: 0.0673	sec/iter: 26.5190
INFO:absl:predictions: tf.Tensor(
[[  87  428  222  254  168  107  582   45  107   93   31  254  168  238
    87   31  107  582   45  107  109  105  420  238  222  254  168  238
   208  254 2667]], shape=(1, 31), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 31	avg_acc: 0.0673	sec/iter: 26.5746
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  317   18  225
    18  225   18  107  243   18  431 2667]], shape=(1, 22), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 27	avg_acc: 0.0672	sec/iter: 22.0167
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  107  243  438  254   45  287  238  208  254  168
    32  187  254  168  107  109   29  598  203  254  168  238  222  254
  2667]], shape=(1, 29), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 31	avg_acc: 0.0671	sec/iter: 25.3369
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  357   45  120  576   45  222  107  582   45  357   45
   287  166  222  271  287  238   87  733  357   45  120  283  645  238
   222 2667]], shape=(1, 30), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 29	avg_acc: 0.0671	sec/iter: 25.4895
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317   19   18  107  243  254
    45  317   18  225   18  225   18  107  109   63  287  208    6  254
    63  108 2667]], shape=(1, 31), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 35	avg_acc: 0.0671	sec/iter: 26.1565
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179  225  317   18   19   18  244   18  225   18
   225   18  225   18  244   18   19   18  244   18  244   18   19   18
   107  243 2667]], shape=(1, 31), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 26	avg_acc: 0.0676	sec/iter: 26.7171
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  225   18  225
    18  225   18  225   18  107  179   18  225   18   11   18  107  243
   254 2667]], shape=(1, 30), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0675	sec/iter: 25.3973
INFO:absl:predictions: tf.Tensor(
[[ 225  317   18  225   18  225   18  225   18  225   18  225   18  225
    18  225   18  225   18   19   18  107  109  317   18  107  243  305
    45  268  671 2667]], shape=(1, 32), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 31	avg_acc: 0.0674	sec/iter: 29.2784
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317   19   18  107  109  317
    18  225   18  107  109  105  187  254   45  317   18  107  109   29
   598 2667]], shape=(1, 30), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 36	avg_acc: 0.0673	sec/iter: 26.7965
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  357  237   56  254  168   56  130  297   45  417
   529   45  107  109  187  107  109  187  107  109  357   45  417  529
   254   87  234 2667]], shape=(1, 32), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 28	avg_acc: 0.0675	sec/iter: 31.0112
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  254  168  107  109   32  187  254
    45   48    6  357  212  187  254  168  107  108  238   87  234  694
   233 2667]], shape=(1, 30), dtype=int64)	labels: [[ 415  323  254  168   54  114    6  124  255  177    6  107  109  330
  1863  116  117   45    4  137  357   89 1307   42 1120 1937  203  286
   700]]	errs: 28	avg_acc: 0.0675	sec/iter: 27.4463
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   45   72   31  876  254   63  108    6
   254  168   32  187  254  168   32  187  254  168  238  222    6   45
   120  283   45  357 2667]], shape=(1, 33), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 33	avg_acc: 0.0675	sec/iter: 27.0326
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168   56  130  297   45  107  108  238  222  254  238
   222  254  238  222  107  179   18  244   18   67  192 2667]], shape=(1, 26), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 26	avg_acc: 0.0673	sec/iter: 24.7751
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  317  225   18  107  243  113   56  130  582   45  305
   564  187   31  107   73   19   18  107  243  301  187  268  284  115
   203  107   93  137   31 2667]], shape=(1, 34), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 32	avg_acc: 0.0674	sec/iter: 27.8474
INFO:absl:predictions: tf.Tensor(
[[   6   45  222  243  254  168    6  357  237    6  287  238   87   45
   357  238   56  130  297    6  254  168  107  317  268   63  108   45
   287  771 2667]], shape=(1, 31), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 29	avg_acc: 0.0675	sec/iter: 26.8348
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18   19  191
    19   18  225   18  225   18  225   18  225   18   19   18  225   18
    19   18  244   18 2667]], shape=(1, 33), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 32	avg_acc: 0.0675	sec/iter: 29.6276
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317  225   18  179  540   45  243  438  254  168   87 1209
   225  317  343  254   63  108 1017   87 1140  254   63  108    6  109
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 32	avg_acc: 0.0677	sec/iter: 28.9741
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  225   18  226  243  438  420  630  187  254   45
   208   31   56  130  297  107  109  108  187  254  107  824  508  107
   585 2667]], shape=(1, 30), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 31	avg_acc: 0.0676	sec/iter: 28.7368
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  317  225  317   18  107  243  438  254   45
   317  225   18  225   18  225   18  225   18  225   18  225   18  225
    18  339  109 2667]], shape=(1, 32), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 32	avg_acc: 0.0675	sec/iter: 30.0001
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  317   19  317   18   19   18  107  109  317
    18  107  109  317   18  107  191   19   18  225   18  225   18  109
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 27	avg_acc: 0.0674	sec/iter: 29.8171
INFO:absl:predictions: tf.Tensor(
[[ 167  168   93  137   31  107  582   45  120  283   31  107  582   45
   357  238   87  815  208  242  254  105   31  876  877  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 33	avg_acc: 0.0674	sec/iter: 26.7310
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  323   87   72   31  107   20   45
   120   56  130  297   87  733  254  105   31  323  222  254  105   31
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 30	avg_acc: 0.0674	sec/iter: 28.6615
INFO:absl:predictions: tf.Tensor(
[[ 107  109  179   18  107  317   18  225   18  107  243  438  254   45
   243  420  238  222  167  168   32  187   31  254   63  497 2667]], shape=(1, 27), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 27	avg_acc: 0.0673	sec/iter: 24.7168
INFO:absl:predictions: tf.Tensor(
[[ 130  336  274  357  237    6  105   31   62   63  108    6  357  237
   238  222  254   63  108   45  357  237  238  222  254  168  238  222
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 34	avg_acc: 0.0672	sec/iter: 30.2053
INFO:absl:predictions: tf.Tensor(
[[  87  254  168   45  222  130  297   45  107  317  225   18  107  336
    22   45  357   32  187  254  168  238  222  876  877  238  222  254
    45  176 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 28	avg_acc: 0.0672	sec/iter: 27.1384
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7   18  107  179   19   18  225   18  107  109  317
    18  225   18  225   18  107  109  105  187  254   45   18  107  109
    63  108   45 2667]], shape=(1, 32), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 35	avg_acc: 0.0672	sec/iter: 29.3336
INFO:absl:predictions: tf.Tensor(
[[   6  107  109  317   18  107  243  254   45  337  917   31  254  238
   187  254  238   87  428   87  733  357  238  222  254  538    6  254
    45  120  283  645 2667]], shape=(1, 33), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 35	avg_acc: 0.0670	sec/iter: 28.2159
INFO:absl:predictions: tf.Tensor(
[[ 130  602   62   63  108   45  301  537  420  498    6  109   29  598
   107  191  192  254   63  108   45  107  109  705  238   87   72   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 30	avg_acc: 0.0671	sec/iter: 24.8501
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437   84  225  317  225  317   18  107  243  438  254  238
    87  428   56  130  297   45  107  317  244  317  143  243  420  303
    30 2667]], shape=(1, 30), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 31	avg_acc: 0.0670	sec/iter: 32.2919
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  179   18  107  109  317   18
   107  243  254   45  287  208  254  168  107  109 2667]], shape=(1, 25), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 26	avg_acc: 0.0670	sec/iter: 22.7748
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  225  317   18  107  317   18  107  243   56   18  225
    18  225   18  107  243  113  722  110  105   31   18  225   18  107
   243  212  287  254 2667]], shape=(1, 33), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 32	avg_acc: 0.0669	sec/iter: 28.9521
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  107  109  317   18  225
    18  107  336  103  254  105  187  254  255  208  254  255    6  109
    29  598 2667]], shape=(1, 31), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 36	avg_acc: 0.0667	sec/iter: 26.5417
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  120  222   22   31  254  168  238
   222  254  168   32  187  254  105  323  222  254  222  254  168  238
   222  254  168  137   31 2667]], shape=(1, 34), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 36	avg_acc: 0.0668	sec/iter: 28.6194
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  287  238  222   87  815  208   31  107   20   45  287
   254   45  287  238   56  254  168  238  208  242  107  824  892 1103
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 35	avg_acc: 0.0667	sec/iter: 26.1435
INFO:absl:predictions: tf.Tensor(
[[ 208  242   56  130  297   45  107  109  317  268  694  107  582   45
   107  582  225   18  107  243  208  242  671 1291 2667]], shape=(1, 25), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 24	avg_acc: 0.0667	sec/iter: 24.6757
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  346  428  120 1047   45  196  817   56  130  297
   107  109  220  297   45  107  109  357  237  107  109   29  598  447
   889 2667]], shape=(1, 30), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 28	avg_acc: 0.0667	sec/iter: 26.6031
INFO:absl:predictions: tf.Tensor(
[[ 130  537  222  167  168   45  120  121  111  238   87   31  107  582
    45  210  233   22   45  357  238   87  234   87  249  357   29  297
    45  107   93  137   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 35	avg_acc: 0.0666	sec/iter: 28.3959
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  179   18  107  317  268   56
   107  243  107  243   18  225   18  225   18  225   18  225   18  107
   585 2667]], shape=(1, 30), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 29	avg_acc: 0.0668	sec/iter: 28.2370
INFO:absl:predictions: tf.Tensor(
[[ 167  221  187   31  107  317  225   18  225   18  225   18  244  179
    45  243  254   63  210  187  876  877  203  187  254  168  238  208
   254   45  107   93 2667]], shape=(1, 33), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 30	avg_acc: 0.0668	sec/iter: 27.0933
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  113  137   31  107   20   45  903   20
    45  287  208   72   31  107  109  187  130  297   45  120  121  143
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 29	avg_acc: 0.0669	sec/iter: 25.3525
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  191  225   18  225   18  225   18  225   18
   225   18  225   18  107  109   30    4   45  469  196  817   45 1637
   107   93  137 2667]], shape=(1, 32), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 31	avg_acc: 0.0669	sec/iter: 26.8616
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   45  254  168   45  671  143   31  130  297   45  107
   317  220  268  417  529  315  268  417  529   45  417  529   45  417
   529   45  211 2667]], shape=(1, 32), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 27	avg_acc: 0.0673	sec/iter: 30.6106
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  113  187   31  107   20   31
   107  582   45  271  287  124  143  187  107  582   45    5  950 2667]], shape=(1, 28), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 27	avg_acc: 0.0672	sec/iter: 25.3219
INFO:absl:predictions: tf.Tensor(
[[ 243  113   63  108    6  357  237  675   85  225   18  107  109  357
   237  238  208    6  109  357  237    6  109  357  238    6  109    6
   109  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 26	avg_acc: 0.0671	sec/iter: 29.4326
INFO:absl:predictions: tf.Tensor(
[[ 648  187   31  107   20   31  254   45   72   31  130  297  508  187
   254  238  208   31  107  109  508  187   31  107  537  420  365   87
    72   31 2667]], shape=(1, 31), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 30	avg_acc: 0.0669	sec/iter: 27.8836
INFO:absl:predictions: tf.Tensor(
[[ 225   18  225   18   19  191   19   18  225   18  225   18  225   18
   225   18  225   18  225   18   19   18  225   18  225   18  107  585
  2667]], shape=(1, 29), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 37	avg_acc: 0.0667	sec/iter: 28.1430
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   87   72   31   32  187  254  238  222
   254  238  222  254  168   32  187  254  168  238  222  254  168  238
   222  254   45  357 2667]], shape=(1, 33), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 32	avg_acc: 0.0666	sec/iter: 29.7253
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225   18  225   18  107  243  438  254   45
   225   18  225   18  244   18  244   18  244   18  244   18  107  243
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 33	avg_acc: 0.0666	sec/iter: 34.2854
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  238  222    6   32  187  254  168  238
   208  254  168   32  187  254   45  120  203  254  168  238  222  254
   168  157 2667]], shape=(1, 31), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 31	avg_acc: 0.0665	sec/iter: 28.2945
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  107  317   18  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  244  179  173  143   31  167   45  498
     6  262  316 2667]], shape=(1, 32), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 32	avg_acc: 0.0665	sec/iter: 28.8129
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45  120   31  107  582   45   48    6  235   87
    72   31  107  582   22   45  287  323   87  222  254  168  238   87
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 27	avg_acc: 0.0665	sec/iter: 26.9424
INFO:absl:predictions: tf.Tensor(
[[ 254   45    6  109  317   18  107  243  254  168   32  187  167  168
    32  187  254  168   32  187  254   45  120  283  222  254  168  238
   346  508  187   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 26	avg_acc: 0.0667	sec/iter: 31.2529
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  305  903   37   38   56
   130  297  107  582  107  582  420  238  187  107  824  508  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 28	avg_acc: 0.0666	sec/iter: 29.1373
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  107  317   18  107  243  254
    63  108   45  671  108  316  179   18  225   18  244   18  109   63
   108   45  103  254   63  497 2667]], shape=(1, 35), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 33	avg_acc: 0.0664	sec/iter: 31.5293
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  109  317  225   18  225   18  225   18  225
    18  225   18  107  243   56  130  297   45  120  283   45  243  420
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 28	avg_acc: 0.0663	sec/iter: 27.7361
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243   48  208    6  107  109  357
   237   56  187   31  107  109  357  237  675  187  268   45  107  109
    29  598 2667]], shape=(1, 31), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 32	avg_acc: 0.0662	sec/iter: 27.4758
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  815  208  242  254  168   32  187   31  107   20  254
   168  238  208  671  108  238  208  242  254  266  222  107  585   45
   889 2667]], shape=(1, 30), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 29	avg_acc: 0.0660	sec/iter: 25.8892
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  179  244  317   18  107  317   18  107  179   18  225
    18  107  243  113  187  876  877  675  374    7  191  244   18  225
    18  244  431 2667]], shape=(1, 32), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 29	avg_acc: 0.0662	sec/iter: 27.8119
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109  346  508  187   31  107  109  187   31  107  109
   317   45  287   48    6  107  582  316  254  168  107  582  316 2667]], shape=(1, 28), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 29	avg_acc: 0.0662	sec/iter: 27.6330
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  130  297   45  107  108    6  107   20  420  238
   208  254  238  222  107   20 2667]], shape=(1, 21), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 24	avg_acc: 0.0663	sec/iter: 22.6198
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  107  243  438  254   63
   108  187  225   18  107  191   19   18  244   18  244   18  244   18
   225   18  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 25	avg_acc: 0.0667	sec/iter: 28.7924
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  107  243  113  137  105  187  167   45  187  876
   877   45  799 2667]], shape=(1, 32), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 33	avg_acc: 0.0666	sec/iter: 28.0303
INFO:absl:predictions: tf.Tensor(
[[ 346  222  130  582   45   87   72   31   32  187   31   56  130  582
    45  271  287  238  208   31  107  537  420  365  115  516  517 2667]], shape=(1, 28), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 28	avg_acc: 0.0665	sec/iter: 25.1804
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107  243  254  108  187  254
   238  208  254  168   56  254  168   45  208   31 2667]], shape=(1, 25), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 25	avg_acc: 0.0665	sec/iter: 22.8384
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18   19   18  225   18  107  243  438  420   20   62
    63  108   45  187  107  179  502  115  502  254  168   45 2667]], shape=(1, 27), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 26	avg_acc: 0.0664	sec/iter: 28.3161
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  243  254   45
   287  238  208   31   18  107  109   48  208   31   18  107  109  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 26	avg_acc: 0.0664	sec/iter: 25.3144
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  107  191   19   18
   107  226  226   18  225   18  107  191   19   18   19   18  225   18
    19   18    7   18 2667]], shape=(1, 33), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 33	avg_acc: 0.0663	sec/iter: 32.9976
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317  489  828  107  317   18  225   18  244   18  225   18
   225   18  225   18  225   18  244  431   45  268   63  108   45   63
   108   45  310  585 2667]], shape=(1, 33), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 29	avg_acc: 0.0663	sec/iter: 35.8097
INFO:absl:predictions: tf.Tensor(
[[  56  404  269    4   84  146  255    6  235  233   37   45  903   37
     4   45  357  238  222  107  109  357   45  268  238  222  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 30	avg_acc: 0.0662	sec/iter: 26.8201
INFO:absl:predictions: tf.Tensor(
[[ 254  168  137   72   31  130  297   45  357   32  187  254  168  238
   222  254   45  357  238  222  254  168   32  187  107  108  238   87
   234  694 2667]], shape=(1, 31), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 32	avg_acc: 0.0661	sec/iter: 28.9638
INFO:absl:predictions: tf.Tensor(
[[  56  404  268   63  497   45  120  283   45  357  237   56  130  336
    45  357  238    6  357   29  598  357   45  357  237    6  357   29
   598    6  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 29	avg_acc: 0.0660	sec/iter: 26.3818
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  438  254
    63  497  234   45  301   38  284  645  238  208  242  671  716  238
   222  254   63  108 2667]], shape=(1, 33), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 34	avg_acc: 0.0659	sec/iter: 28.0114
INFO:absl:predictions: tf.Tensor(
[[ 167  168   87  222  254   87  234   87  428 1243  187   31  107   20
   254  238   56  508  187  107   93  137   45  684  694   45  120  283
   645  254 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 28	avg_acc: 0.0661	sec/iter: 28.1272
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  107  191   19   18
   225   18   19   18   19   18   19   18  244   18  107  109  317   18
   244   18  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0660	sec/iter: 29.1689
INFO:absl:predictions: tf.Tensor(
[[ 107  109   18  107  179   18  107  317   19   18    7   18  107  109
   317   45  614  630  187  254  168  107  109  105   31   18  225   18
   225   18  244   18  225   18  225   18 2667]], shape=(1, 37), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 39	avg_acc: 0.0659	sec/iter: 30.8812
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317  225   18  107  243   48  208   72   31  107
   336   87  815  208    6  357  238  208  242  187  254   45  287  238
   177    6  357 2667]], shape=(1, 32), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 28	avg_acc: 0.0659	sec/iter: 28.0872
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18  225   18  107  243
   113  137   45  268 2667]], shape=(1, 33), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 31	avg_acc: 0.0660	sec/iter: 28.3291
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   56  130  297   45  337  917  420  238
   208    6  254  168  107  108   45  107   20  107  108 2667]], shape=(1, 26), dtype=int64)	labels: [[  32  404    3  906  233  166  337  357  347  582  347  582  704  166
  1609  357  347  582  347  582  208    6  993 1869  235]]	errs: 25	avg_acc: 0.0659	sec/iter: 23.5884
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18  225   18  107  243  212  187   31  107  582
    45  287  238   56  357  237  212  287  771   48  208  120  107  109
   357  237   12 2667]], shape=(1, 32), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 36	avg_acc: 0.0658	sec/iter: 26.9044
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243  113  903   37   38  903   20  254
    87  733  876  877   45  287  208    6  107  109  752   45  694 2667]], shape=(1, 28), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 31	avg_acc: 0.0658	sec/iter: 28.6454
INFO:absl:predictions: tf.Tensor(
[[ 107  108   45  107  109   29  598  107  191  225   18  107  582   45
   355  420  238   56  130  582  107  109  105  139 2667]], shape=(1, 25), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 28	avg_acc: 0.0658	sec/iter: 26.0852
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  191  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18  225   18  107  582
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0656	sec/iter: 27.2869
INFO:absl:predictions: tf.Tensor(
[[  90  404  212  287  254  168  203  254   63  268   63  108    6   45
   417  672  203  417  529  107  109  357  237   12  365  222    6  538
     6  107  109  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 31	avg_acc: 0.0657	sec/iter: 28.5738
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18  107  243   48  208   72   31  107  582
    56  130  297  107  179  208  242  187  130  297  124  222  254   45
   120  283   31 2667]], shape=(1, 32), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 30	avg_acc: 0.0657	sec/iter: 26.7052
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  179   18  107  109  317   18
   225   18  225   18   19   18  107   73  244   18  244   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 27	avg_acc: 0.0657	sec/iter: 27.4223
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225  243  438  254
    63  108    6  995    4   84  146  357  237   12  238   56  130  582
    45  985    6  357 2667]], shape=(1, 33), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 33	avg_acc: 0.0657	sec/iter: 29.0248
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179    7  317   19   18  107  226   18  244
    18   19  109  317   18  107  109  317   19   18  107  317   18  107
   109  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0655	sec/iter: 26.9409
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   18  107  243  438  254   63  497
    87 1209   56  130  297   45   46   47   56  130  582  420  238  222
   305   45  671  268 2667]], shape=(1, 33), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 28	avg_acc: 0.0657	sec/iter: 27.8018
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195  222   45  357   45   54  115   87  140   87
   140   87   56  130  297   45   54  115  323   87  222    6  357  238
   222   22 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 30	avg_acc: 0.0658	sec/iter: 27.4862
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109   87  815  208  242   45  222  107  235  115   87
   828  130  297  187  254   45  107  109  876  877  238  222  254  168
   238   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 29	avg_acc: 0.0658	sec/iter: 32.3105
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  238  222    6   45  120  254  168  238
   208   72   31   56  254  168   32  187  876  877  203  108  238  222
   254  168  238 2667]], shape=(1, 32), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 31	avg_acc: 0.0657	sec/iter: 27.7975
INFO:absl:predictions: tf.Tensor(
[[ 130  222  254   45  130  297   45  120   31  107  582   45  268  254
   168   87  428    6  254  168  238  208  993  876  877   45  417  529
   671  108 2667]], shape=(1, 31), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 33	avg_acc: 0.0657	sec/iter: 26.4750
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  222  254  168   45  305  671  108  316  254   63  108
   187  254  238  222  107  109  271   45  271  716  238  222  254  168
   238  222   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 28	avg_acc: 0.0656	sec/iter: 27.4699
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  225   18  107  191   19
    18  225   18  107  226   18  107  109  317   18  107  191   19   18
   107  243  420 2667]], shape=(1, 32), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 31	avg_acc: 0.0654	sec/iter: 28.2847
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  254  168   32  187  254  168   56  130
   582  238  208  242  187  107  109   29  297  107  109  357   45  889
  2667]], shape=(1, 29), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 27	avg_acc: 0.0654	sec/iter: 27.3429
INFO:absl:predictions: tf.Tensor(
[[ 130  537  222  167  168   45  107  317  268   31  107  582   45  120
  1047  305   45  287  238   87  344  187  107  582   45  304   30  542
   137  542  916 2667]], shape=(1, 32), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 33	avg_acc: 0.0655	sec/iter: 27.3598
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  120   45  357   29  598    6  225   18  107  191   67
   192   45  120  283  222    6  357  237    6   18  107  582   45  120
   283  645 2667]], shape=(1, 31), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 33	avg_acc: 0.0655	sec/iter: 26.1849
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167   45   87  815  208   31  107  109  252  420   45  287
   208  242   48    6  287  323   22  254   87  222  254  168  238  633
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 26	avg_acc: 0.0656	sec/iter: 25.0729
INFO:absl:predictions: tf.Tensor(
[[ 187   31  130  297   45  120  283   31  167  168  107  582   45  357
    45  287  449  672   87  815  208  242   56  130  582  420  238  177
     6  357  108   45  357 2667]], shape=(1, 34), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 34	avg_acc: 0.0655	sec/iter: 28.6280
INFO:absl:predictions: tf.Tensor(
[[  87  254  168   32  187  254  168  238  222    6   45  130  297  238
    87  428  733  254  168  238   32  187  254  168  238  346  508  107
    93  137   31 2667]], shape=(1, 32), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 34	avg_acc: 0.0654	sec/iter: 27.2969
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254   45  357  222  254  168   32  187  254  168
    32  187  254  168   32  187  254  168   32  187  254   87  234 2667]], shape=(1, 28), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 31	avg_acc: 0.0653	sec/iter: 26.4514
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  107  179   18  107  109  317
    18  225   18  225   18   67  192  489   18  107  191  708  137  105
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 26	avg_acc: 0.0654	sec/iter: 27.9584
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18   19   18  107  317   18  107  109  317
    18  225   18  225   18  107  191  244   18  244   18  107  109   29
   598 2667]], shape=(1, 30), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 30	avg_acc: 0.0654	sec/iter: 28.3794
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317   18  107  243  438  254   45
   317  542  137  542  137  542  137  542  137  542  137  542  137  542
   137  542  916 2667]], shape=(1, 32), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 30	avg_acc: 0.0654	sec/iter: 29.7328
INFO:absl:predictions: tf.Tensor(
[[ 301   38  222  130  582   45  417  529  671  417  529  107  582   45
   417  529  671  790  238  208  242  107  109  876  877   45  417  529
  2667]], shape=(1, 29), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 28	avg_acc: 0.0653	sec/iter: 24.6110
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195    6  357  238  222    6   45  357  238   87
   140   54   51 2667]], shape=(1, 18), dtype=int64)	labels: [[ 130  107  179  215 1235 1932 1671  112   32  183 1055  242 2280  130
  1970 1932 1671  323  800  183 1738 1782]]	errs: 21	avg_acc: 0.0652	sec/iter: 19.5134
INFO:absl:predictions: tf.Tensor(
[[ 174   56  130  297   45  120  598  357  237   48   72   31  107  582
    45  225   18  244  179   18  244   73  244   18  244   18  107   73
   244   67 1423   45  357 2667]], shape=(1, 34), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 32	avg_acc: 0.0651	sec/iter: 30.5850
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  296   45  243  113  107   20   31
   107  109  187  254  168  107  109  105  187  107  109  187  254   45
  1283 2667]], shape=(1, 30), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 30	avg_acc: 0.0650	sec/iter: 25.4782
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  225  179   18  107  317   19   18  107  317   19   18
   107  317   19   18  107  582  107   73  244   18  107  109  357 2667]], shape=(1, 28), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 25	avg_acc: 0.0653	sec/iter: 28.7983
INFO:absl:predictions: tf.Tensor(
[[ 339  179   18  107  317   19   18  107  191  225   18    7   18  225
    18  225   18  225   18   19   18   19   18  107  191  225   18  225
    18  225  191  708 2667]], shape=(1, 33), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0657	sec/iter: 30.4554
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  222   62  216   37   38   37   38   37   45  120  121
    45  357  238  222   22   45  357  238  222   22   45  120  121   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 26	avg_acc: 0.0657	sec/iter: 29.5078
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  107  317   18  225   18  225   18  225   18  225
    18  225   18  244   18  107   73  244   18  244   18  107  191   15
    18  244  196 2667]], shape=(1, 32), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 31	avg_acc: 0.0657	sec/iter: 30.5417
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  431   45  243  113   56  130
   297  266  220  297   87   72   31  107  109  105   31   18  225   18
    19  109  105   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0655	sec/iter: 29.9625
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  225   18  225
    18  225   18  107  226   18   15   18  225   18  225   18  107  243
   254 2667]], shape=(1, 30), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 31	avg_acc: 0.0654	sec/iter: 33.1511
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  438  254
    45  671  716   18   19   18  226   18   67  192  103  254  168   45
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 35	avg_acc: 0.0653	sec/iter: 29.0993
INFO:absl:predictions: tf.Tensor(
[[ 648   87  815  208  242   56  254  168   56  130  297   45  357   31
   107   20  107   20   22   45  889  107  109  876  877   45  107  585
    71 2667]], shape=(1, 30), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 30	avg_acc: 0.0652	sec/iter: 28.9132
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  107  243   56  130  297   45  268   45  107  109
    45  107  109   29   45  137 2667]], shape=(1, 35), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 34	avg_acc: 0.0649	sec/iter: 29.6660
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  225   18  225   18  107  243  438  254   63  108
   187  254   45  187  254  168  107  109  357  238  208    6   45  108
   238  177    6  357 2667]], shape=(1, 33), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 31	avg_acc: 0.0650	sec/iter: 27.9858
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  254   45
   305   45  287  565   18  225   18  225   18  244   18  225   18  225
    18  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 31	avg_acc: 0.0650	sec/iter: 28.1551
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179  225  317   18   19   18    7  317   18
   225   18  107  317   18  244   18  244   18  244   18   19   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 26	avg_acc: 0.0654	sec/iter: 27.0273
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195    6   45  120  121   45   87  140    6   45
   357  238    6  357  238   87  344    6  357   45  287  238  222    6
    45   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 28	avg_acc: 0.0656	sec/iter: 27.0323
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  179   18  107  317   19   18  225   18  107  243   18
   244   18   19   18  107  243  254  268  694  208  242   63  108   45
   417  529  671 1291 2667]], shape=(1, 33), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 38	avg_acc: 0.0656	sec/iter: 29.4151
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  107  243  438  254   63
   108  316  179   18  107  191   19   18  244  179   18  107  824  443
   137   45  889 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 27	avg_acc: 0.0659	sec/iter: 27.3421
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  107  317   18  107
   226   18  244   18  107  179   18  244   18  244   18  107  317   18
   107  243 2667]], shape=(1, 31), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 31	avg_acc: 0.0659	sec/iter: 26.4520
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18    7  243  113  137 1209   56  187  254  168
   107  602  143   48  208  242  107  108  187  254  168  238  346  508
   107  108   45  187   31 2667]], shape=(1, 34), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0658	sec/iter: 29.1322
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225  317  225   18  225   18  225   18  225
    18  225   18  225   18  225   18  225   18  244   18  225   18  107
   243  438  254  108  316 2667]], shape=(1, 34), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 33	avg_acc: 0.0656	sec/iter: 34.1186
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225  317  268   19   18    7  317
   225   18  225   18   19   18  244   18  244  431 2667]], shape=(1, 25), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 26	avg_acc: 0.0655	sec/iter: 30.8365
INFO:absl:predictions: tf.Tensor(
[[  56  130  297   87   39  274    6   45  357  379  336   22    6  357
   238  222    6  287  238  208  242  107  109   30 2667]], shape=(1, 25), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 26	avg_acc: 0.0656	sec/iter: 27.8184
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  107  243  438  254
   238   56  130  582   56  130  582   45  243  420  238  346  508   56
    22   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 32	avg_acc: 0.0655	sec/iter: 30.7999
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   45  243  113   56  130  109  220  420  196
   220  420  498    6  357   45  287  208  242  391  267  167   45 1610
   262  316   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 29	avg_acc: 0.0656	sec/iter: 31.9277
INFO:absl:predictions: tf.Tensor(
[[ 267  268   63    4   45    6  109  357  237  238  208  242   56  417
   529   45  417  672  203  417   63  108    6  109  357  238  222  107
   109   12 2667]], shape=(1, 31), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 35	avg_acc: 0.0655	sec/iter: 32.4642
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  107  243  113   56  130  297   45
   107   20  107  109  187  876  877   45  107  179  284  645  237  238
   208    6  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 30	avg_acc: 0.0656	sec/iter: 31.1571
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  226   18  225   18  225   18
   225   18  225   18  225   18  225   18  244   18   11   18  107  243
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[1371 1324  660 2437    4  107 2163   18  225   16  163 1007   18  107
   243   20 1509  142  415  992 1607  391  244   18  708  290  901  829
   463   56  297  165]]	errs: 28	avg_acc: 0.0657	sec/iter: 34.0935
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  225   18  107  243  438  254   63
   497   87 1209   56  130  297    6  286  284  645  238  222  167   45
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 34	avg_acc: 0.0656	sec/iter: 29.6116
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  497  187  254   45   46  420 2667]], shape=(1, 23), dtype=int64)	labels: [[ 254  498  222  208  259 1257  313  254  458  259   90  635    6   20
  2179  420  254  745  493  452  696  259  917  420]]	errs: 22	avg_acc: 0.0656	sec/iter: 27.1005
INFO:absl:predictions: tf.Tensor(
[[ 167  168  315  316  179   18  107  317 1490  684  752   45  684  752
   160   62  112   85  143   31  876  877   31   18  107  191   19   18
   244  431 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 30	avg_acc: 0.0657	sec/iter: 29.2025
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  179   18  107  317   18  107  317   18  225   18
   107  109  317   18   19   18  107  191  244   18  107   18  107  585
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 31	avg_acc: 0.0658	sec/iter: 28.2199
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  305  317  225   18  225
    18  107  243  113  187   31  107  109  438  420  238  208    6  107
   109  187   31  107  585 2667]], shape=(1, 34), dtype=int64)	labels: [[ 995  438  336  274 1019  215  438  587 1282  470  267  160   62  120
   121   39  114  438  587  751  752  284  194    6  310  208  452  683]]	errs: 31	avg_acc: 0.0656	sec/iter: 32.1061
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  225   18   19   18
   226   18   19   18   11   18  225   18  225   18   19   18  225   18
    19  109  105   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0655	sec/iter: 31.1943
INFO:absl:predictions: tf.Tensor(
[[ 225  317   18  225   18  225   18    7  243  113  137   31  130  297
    45  187   31  167  168  212  582   45  355 1138  107  109  187  254
    45 1294   45  176 2667]], shape=(1, 33), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 40	avg_acc: 0.0656	sec/iter: 32.0965
INFO:absl:predictions: tf.Tensor(
[[ 174   56  107  109  317   18  107  243  113  187  107  235  233   37
    45  271  287  187  254  168  107  179  284  645  237  238  222  254
    45  268 2667]], shape=(1, 31), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 29	avg_acc: 0.0656	sec/iter: 30.6395
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179  225  317   18   19   18  244   18  225   18
   225   18  225   18  244   18  107  226   18  244   18   15   18  244
    18  107  431 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 26	avg_acc: 0.0660	sec/iter: 31.9862
INFO:absl:predictions: tf.Tensor(
[[ 315  179   18  107  317   18  225   18  225   18  225   18  225   18
   225   18  225   18  107  243   56  130  297   45  243 1231   18  225
    18  107  336 2667]], shape=(1, 32), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 28	avg_acc: 0.0659	sec/iter: 28.6995
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  191  244
    18   19   18  225   18  107   18  225   18  225   18  107  191  225
    18  225   18   11  191  708 2667]], shape=(1, 35), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 30	avg_acc: 0.0663	sec/iter: 36.9289
INFO:absl:predictions: tf.Tensor(
[[ 301   38  222  130  582   45  417  529  671  108  187  107  582   45
   120  121  111  238  187  876  877   45  303  629 2667]], shape=(1, 25), dtype=int64)	labels: [[1386  357   61 1283 1577  325  313 2471 1055  296 2397  810  224  175
   110  469  191 1623 1170  204 1231 1444 1283 1577  876  645  325  789]]	errs: 28	avg_acc: 0.0662	sec/iter: 27.8922
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  107  243  438  254   45
   317  225   18  225   18  225   18   15   18  244   18  109  317   18
     7   18  244   18    7   18 2667]], shape=(1, 35), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 34	avg_acc: 0.0659	sec/iter: 40.3461
INFO:absl:predictions: tf.Tensor(
[[ 167   45   87  222  107  317   18  107  243  113  187   31  107   20
    45  917  238   56  107  582   45  120  283  645  238  222  254   45
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 29	avg_acc: 0.0660	sec/iter: 27.9807
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  225   18  225
    18  225   18  107  243  438  254  105  139  187   18  107   18    7
    18  107  109 2667]], shape=(1, 32), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 29	avg_acc: 0.0658	sec/iter: 28.9136
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179  225  317   18   19   18    7   18  225   18
   225  317   18  317   18  107  226   18  244   18  244   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 26	avg_acc: 0.0663	sec/iter: 30.5368
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  107  109  317   18  225   18  225   18  225   18
   225   18  225   18    7   18   11   18  107   73  708  222  243  112
    85   45  196  108 2667]], shape=(1, 33), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 31	avg_acc: 0.0660	sec/iter: 34.2061
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179    7  317   18  107  243  113   56  130  297  107
   602  225   18  225   18  225   18  244  431 2667]], shape=(1, 24), dtype=int64)	labels: [[ 208  837 1337  220  578   22  777  370  513  524  208    6  310  694
   777  220  208    6  458  694 1337  220  208    6 1124  694]]	errs: 26	avg_acc: 0.0660	sec/iter: 29.5033
INFO:absl:predictions: tf.Tensor(
[[ 346  222  130  582   45   87   72   31  130  297   45  222  254  238
   346  508   87  234   31  107  109  105   31  130  109  105   31  254
    45  889 2667]], shape=(1, 31), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 34	avg_acc: 0.0659	sec/iter: 31.9807
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  225   18  179  208  243  113   63  497  187  254
   168  238  208  137  708  323  738   87   72   37  365   87  428    6
   346  508  222  107  602 2667]], shape=(1, 34), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 31	avg_acc: 0.0660	sec/iter: 33.4139
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  107  109  317   18
   107  109  317  225   18  225   18  107  109  317   18  107  109  196
   708  137 2667]], shape=(1, 31), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 33	avg_acc: 0.0659	sec/iter: 30.1698
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317   18  225   18  107  243  438
   254   63  497   56  130  297   45  357  238  222    6  538    6  357
   108   45  120  283  645 2667]], shape=(1, 34), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 35	avg_acc: 0.0658	sec/iter: 31.5077
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  191  225   18
   225   18  225   18  225   18  225   18  244  431   45  103  105  187
   254   45 2667]], shape=(1, 31), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 30	avg_acc: 0.0658	sec/iter: 28.4857
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  107  336  258  195  113  107  191  225   18  107  191  225
    18  225   18  225   18 2667]], shape=(1, 34), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 32	avg_acc: 0.0657	sec/iter: 31.3486
INFO:absl:predictions: tf.Tensor(
[[  87  222  254   45  222  254  168  428  222  130  107  179   45  254
   238  222  254  238   56  107  235  233   37   22   45  357  238   87
   346  508  107  585   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 27	avg_acc: 0.0659	sec/iter: 31.3482
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225  317  225   18  225   18  225   18  225
    18  225   18  107  243  438  675  374    9   18  244   18  107  243
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 31	avg_acc: 0.0659	sec/iter: 29.9293
INFO:absl:predictions: tf.Tensor(
[[ 254   45  222    6  254  168  107  108   45  120  166   72   31  167
   168   45  287  238   87  234  694  254   87   72   31  876  877   45
   357   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 29	avg_acc: 0.0661	sec/iter: 28.8434
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243  113  137   45  268   32  187  254
   238  208    6  107  109    6  107  179  107  824  694   45  694  233
    37   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0659	sec/iter: 28.9980
INFO:absl:predictions: tf.Tensor(
[[ 349  296   56  130  297   45  225   18  225   18  225   18  107   20
   254  108  316  179   18  225   18  225   18  225   18  225   18  225
    18  225   18  107  109  357 2667]], shape=(1, 35), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 33	avg_acc: 0.0658	sec/iter: 31.6279
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   48    6  107  582   45  107   20   31  107
   582   45  357  238  187  107  109  357  238  222  107  109  357   45
   254  168 2667]], shape=(1, 31), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 31	avg_acc: 0.0658	sec/iter: 28.2553
INFO:absl:predictions: tf.Tensor(
[[ 187   31    6  107  109  357   45  417  529  107  109   56  130  297
    45  417  529  107  585   45  107  109  876  877   45  417  672   87
   234 2667]], shape=(1, 30), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 24	avg_acc: 0.0662	sec/iter: 28.0523
INFO:absl:predictions: tf.Tensor(
[[ 346  222  254  168   45  130  297   45  107  108   45  120  254  238
   346  508  107  582   45   72   31  107   20   31  107  109  108   45
   120  121  254  168   87  234 2667]], shape=(1, 35), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 32	avg_acc: 0.0662	sec/iter: 33.4576
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  191  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  244   18  107  191  708 2667]], shape=(1, 26), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 30	avg_acc: 0.0662	sec/iter: 29.0261
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  108    6  538  508    4   45  187   31  107  537  420  365
   222  633   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 32	avg_acc: 0.0661	sec/iter: 28.8789
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18  107  243  438  254  538
    37   45  708  222  254  538    6  339   18   19   18  244  179   18
    19  109   87  234   87 1257 2667]], shape=(1, 35), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 38	avg_acc: 0.0660	sec/iter: 33.0074
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317    7  243   20   31   45  337  917  238  208    6  254
   238  208    6   45  107  109  108  238  208  238  222  130  582  316
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 29	avg_acc: 0.0659	sec/iter: 31.2451
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317  225   18  107  243  438  420  238  208
     6  107  243  113  187  876  877   45  107   73  708  752   45  120
   283 2667]], shape=(1, 30), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 31	avg_acc: 0.0659	sec/iter: 29.2070
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  113  187   31  107  336
   238  208    6  107  109  357   45  107  109  317  268   63  108   45
   671  716 2667]], shape=(1, 31), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 29	avg_acc: 0.0659	sec/iter: 29.0919
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254  168  238  222  254  255    6  107  582   45
   287  238  222  254  168  107  109  876  415    6  109 2667]], shape=(1, 26), dtype=int64)	labels: [[ 414  415  167  168   87 1329 2502  592  349  582 1211   20 1036 1025
   414  696  175 1746 1036  323  222  735  105 1129  508  103  261  624
   115]]	errs: 27	avg_acc: 0.0659	sec/iter: 28.7037
INFO:absl:predictions: tf.Tensor(
[[  56  167  168  315  191  225   18  244  431   45  614  630  187  254
    87  428   87  428   87  428   87 1140  254  168   87  346  508  107
   109  317   18  107  191   31 2667]], shape=(1, 35), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 35	avg_acc: 0.0658	sec/iter: 31.8134
INFO:absl:predictions: tf.Tensor(
[[   6  357  221    6  107  109  317   18  244   18  107  109   56  254
    45  243  254  168   71   87  143   31   18  244   18  109  108   45
   120   31   18  225   18  109   45 2667]], shape=(1, 36), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 35	avg_acc: 0.0659	sec/iter: 32.7851
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  489  254   63  108  187   31   56  254
    63  357  238   56  357   45  208   72   31  808  254  168  238  208
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 33	avg_acc: 0.0659	sec/iter: 31.9057
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   56  130  297   45  355  420  238  222
   254   87   72   31  130  222   32  187  254   87  222  254   87  234
    87  234   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 30	avg_acc: 0.0658	sec/iter: 32.0658
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  113   56  254   45  903   37  210  107
   537  420   45  107  582  107  109   22   45  107  109  508  107  824
    72   31   18  107  109  357 2667]], shape=(1, 35), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0657	sec/iter: 35.6034
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  226  225  179   18  107  317   18  225   18  225   18
   225   18  225   18  107  109  317   18  107  243  254  268  694   45
   355  420   45  268 2667]], shape=(1, 33), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 38	avg_acc: 0.0657	sec/iter: 30.9856
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   18  107  243  254   63  108  316
   179  708  916   39  274  254  168   56  130  297   87  234    6  357
   238   87  234 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 29	avg_acc: 0.0658	sec/iter: 29.0426
INFO:absl:predictions: tf.Tensor(
[[ 254   45  179   18  107  317  225   18  107  317   18  107  243  254
    45  357  238   87  222    6  357  108  316  254  238  222  254   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 29	avg_acc: 0.0658	sec/iter: 28.8882
INFO:absl:predictions: tf.Tensor(
[[  39  274  130  582   45  120  283  645   87  222    6  254  238   87
   222  254   45  287  238    6  254   87  222  254  168   45 2667]], shape=(1, 27), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 35	avg_acc: 0.0658	sec/iter: 28.9724
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  113  137   31   32  187  254
    45  187   31  876  877   56  130  582  167  168   32  187   31  107
   537  420  323   45  120   31 2667]], shape=(1, 35), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 33	avg_acc: 0.0657	sec/iter: 32.3529
INFO:absl:predictions: tf.Tensor(
[[ 130  336  238  222  254   45  357  237    6  357  237    6  357  237
     6  254  168  107  109  357  237   56  254  168  203  254   45  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 32	avg_acc: 0.0657	sec/iter: 28.3781
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254   45  357   72   31  254  168   32  187  254
   238  222   32  187  876  877   45  357  238  222  254  168  238  222
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  168   87   32 1306 2392 1897   87 2522 2522 1806 1806 1000  274
  1764  468  238 1000  274   42  895  208 1764  468  266  234    6 2398
  2399   45 1764  468 1145]]	errs: 31	avg_acc: 0.0657	sec/iter: 29.7494
INFO:absl:predictions: tf.Tensor(
[[ 346  222   32  187  254  222  254   63  222    6  235  115   45  357
   238  222  254  238  222  107  109  317   45  120  283  222  254  168
   238  177    6  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 32	avg_acc: 0.0657	sec/iter: 32.4478
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243 1209  187   31  143   31  254
    87  234   45  212  287   48  208  254   87  234  694  254   87  234
    87  428   87   31 2667]], shape=(1, 33), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 30	avg_acc: 0.0656	sec/iter: 30.4449
INFO:absl:predictions: tf.Tensor(
[[  87  815  208   20  130  222  254  255  208  120  121   45  357  238
   208  222  254  168  107  109  357   45  120  107  109  357 2667]], shape=(1, 27), dtype=int64)	labels: [[  87  815  208  625  626  916  120  255  208  625  626 1444 1734 1444
   598  825  120  825  598  625  626  120 1609  120  337  365  107  582]]	errs: 22	avg_acc: 0.0658	sec/iter: 32.9381
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179  107  317   19   18  225   18  107  191   19   18
    19  191  708  226   18   19   18  244   18  107  191   19   18  107
   243  112   85 2667]], shape=(1, 32), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 31	avg_acc: 0.0657	sec/iter: 29.0176
INFO:absl:predictions: tf.Tensor(
[[ 174   56  107  109    7  317   45  243  113  107  582  233   37  210
   107   20   31  107  271  287  208  254   45  120  107  824  828  233
  2667]], shape=(1, 29), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 28	avg_acc: 0.0657	sec/iter: 29.0938
INFO:absl:predictions: tf.Tensor(
[[   6  107  179   45  107  317   18  225   18  107  243   31  254   45
   243  113  137 1209   31  143   31   18  225   18  109  105   31   18
   225   18  225  191   31 2667]], shape=(1, 34), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 35	avg_acc: 0.0658	sec/iter: 34.7385
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317   18  225   18  225   18  225   18  225   18
   225   18  107  226   18  107  226   18  225   18  225   18  225   18
   225   18  107  191   15 2667]], shape=(1, 34), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 33	avg_acc: 0.0657	sec/iter: 35.2543
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  222  254  168   32  187  130  297   45  107   20
   254   87  428   87  428  733  357  237  238  222  254  168  238  222
   254  168   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 34	avg_acc: 0.0657	sec/iter: 31.8889
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  113   56  274  708  903   20   31  107
   317  225   18  107  109  187  254  268   45  107  317   18  107  109
    45  208  242 2667]], shape=(1, 32), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 30	avg_acc: 0.0657	sec/iter: 30.2461
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  107  243  438  254   63
   108  316  179   18  225   18  244  179   18  107  191  179   45   18
   107  985   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 32	avg_acc: 0.0656	sec/iter: 34.5617
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6   18   19  243  254  168   56  130  297  107  179
   357  237  238   56  357  828  107  109  357  238   56   18  244   18
   244   18  107  824 2667]], shape=(1, 33), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 26	avg_acc: 0.0657	sec/iter: 36.2926
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87  815  208  242  238   87  251   31  107   20  254
    45  287  238  208  238   87  208   20   45  917  420  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 726  206  417 1299  268  538  772  614  724  817    6  353   35  287
    54  414  500  501  268  206 1536  887  630  831   54  380  117]]	errs: 29	avg_acc: 0.0656	sec/iter: 29.6453
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  222  254  222   22   31  254   87
   428  222  254  108    6  254  168   45  107  109  254  168   45  254
   168   93  137   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 32	avg_acc: 0.0656	sec/iter: 31.8915
INFO:absl:predictions: tf.Tensor(
[[  18  317  225   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18   15   18  225   18  225   18  225   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0655	sec/iter: 31.0329
INFO:absl:predictions: tf.Tensor(
[[ 167  168  315  316  179   11   18  107  317   18  107  824   72   31
   107  191  225   18   11   18  225   18  244  431   45  357   45  303
    30 2667]], shape=(1, 30), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 29	avg_acc: 0.0656	sec/iter: 35.7055
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225   18  107  243  438  107  243  438  254
    63  108    6  538  508   87  428  675  374  303  629    6  187  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 35	avg_acc: 0.0656	sec/iter: 37.7334
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  244   18  244   18
   244   18  244   18  244   18  244   18  244   18  244   18  244   18
   244  109 2667]], shape=(1, 31), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 35	avg_acc: 0.0655	sec/iter: 29.5227
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  225   18  107  243
    18  225   18   19   18   19   18   11   18   11   18  225   18  225
    18  244   18  225   18  225   18   67 2667]], shape=(1, 37), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0655	sec/iter: 33.6975
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317  489  225   18  107  109  317  137   48  708  195  858
   284  115  238   56  274  254   63  210    4   45  120  121  111  238
   208   72   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 31	avg_acc: 0.0654	sec/iter: 30.0001
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  179  107  317  225   18  225   18  225   18  244  431
    45  671  716  297   87  815  208  242   45  107  109  876  877   45
   671 1291   48    6  585 2667]], shape=(1, 34), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 32	avg_acc: 0.0654	sec/iter: 31.9058
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  191   19   18  225   18  107  179   18  107
   109  317   18   19   18  107  191   19   18  107  191   19   18  244
    18  107  585 2667]], shape=(1, 32), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 31	avg_acc: 0.0654	sec/iter: 30.4498
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  107  243  438  112   85  265  903   20
    31  808  648  187  268  720  224  146  391   19   18  107  109  357
   266  315  268   63  108 2667]], shape=(1, 34), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 31	avg_acc: 0.0655	sec/iter: 30.8169
INFO:absl:predictions: tf.Tensor(
[[ 130  222   62   63   45  120  598   45  357   45  120  598    6  357
   238   56  130  582  346  508   54  115  694 2667]], shape=(1, 24), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 27	avg_acc: 0.0656	sec/iter: 27.6794
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  489   72   31  243  489  254   63  108
     6  254  255    6  357  508  187  107  109  317  420  238   56  254
   168  238  208   31 2667]], shape=(1, 33), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 31	avg_acc: 0.0656	sec/iter: 30.5712
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  489  225   18  225   18  225   18  107
   109  317   18  107  243   56  274  254  168   32  187  254  168  238
   208  254   45 2667]], shape=(1, 32), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 33	avg_acc: 0.0655	sec/iter: 28.6960
INFO:absl:predictions: tf.Tensor(
[[  56  107  179   18  107  317   18  107  243  113  107  243   56  254
    63  108   45   46  420  238  187  167  168   56  130  297   45    8
    52 2667]], shape=(1, 30), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 32	avg_acc: 0.0654	sec/iter: 27.1016
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179  225  317  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  244  431   45  268   63  108   45  357
   266  856  614  630  239 2667]], shape=(1, 34), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 27	avg_acc: 0.0658	sec/iter: 33.8735
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  179  107  317   18  225   18  225   18  244   18  244
    18  225   18   19   18  225   18  107  191  244   18  244   18  225
    18  244   18 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 33	avg_acc: 0.0657	sec/iter: 32.8249
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   87  222  254  168   32  187  254  238
   222  254   45   72   31  254  168  238  222  254  168  238  222   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[  62   63  491 2234 1501  480  234 1814  925  330  383   87 1103    4
   691  603  748   32  323  238  105  187  107  109   13  634  512   45
   234]]	errs: 29	avg_acc: 0.0656	sec/iter: 28.9633
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  243  254  168   56  130  297   45  903   20   45
   903   20  254   87   72   31  876  877  238  222  708  222  254  168
   238   87  633   31 2667]], shape=(1, 33), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 31	avg_acc: 0.0655	sec/iter: 31.6169
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18  107  243  113  137   62  296   45  196
    56  130  297   87   56  130  297  187  107  191   19   18  107  243
   254  266  222 2667]], shape=(1, 32), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 30	avg_acc: 0.0654	sec/iter: 30.3901
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  222   32  187  254  168   32  187
   254  238  222  254  238  222  254  168  238  346  222  254  168  238
   208   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  344   45  542  916   39  852  640  542    6  633 1077   32  187
   167  168 1070  187  254  862  501  234  422  305 2508  706  237  405
    20 1559 1937]]	errs: 27	avg_acc: 0.0655	sec/iter: 30.7017
INFO:absl:predictions: tf.Tensor(
[[ 225   18  107  179   18  107  317   18  244   18  225   18   15  317
    18  225   18  225   18   19   18    9   18  107  191  244   18  225
    18  244  179  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 32	avg_acc: 0.0655	sec/iter: 31.1374
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317  225   18  107  243  438  254   63  497
   187  254   45  903   37  876  877   45  120  283  645  238  222    6
    45  196   45  120   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0653	sec/iter: 32.9312
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  238  222  130  297   45  107  108   45  254   87
   428   87  222  254  238  222  254  238  222  254  238  222  107   93
   137   31 2667]], shape=(1, 31), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 34	avg_acc: 0.0653	sec/iter: 28.3002
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  225  317  225   18  225   18  225   18  244  243  438
   254   45  708  225   18  244  191  244   18  708    6   18  244   18
   244   18  244   18  244   18  107 1077 2667]], shape=(1, 37), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 30	avg_acc: 0.0655	sec/iter: 34.6111
INFO:absl:predictions: tf.Tensor(
[[ 130  107  226  226  225  179   18  107  179  137   31  107  109  317
    18  107  336   87  284  645  238  177    6   18  244   18  225   18
   107  336 2667]], shape=(1, 31), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 28	avg_acc: 0.0656	sec/iter: 28.2141
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317   18  225   18  107  243  438  254   45
   208   31   56  130  107  109  187  876  877   45  120  283  645  237
   238  208    6  107  109 2667]], shape=(1, 34), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 31	avg_acc: 0.0657	sec/iter: 31.0370
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  238  222  108    6  254  168  238  222
   254   63  108   45  222   32  187  254  238  222  254  168  238  222
   254   45  357 2667]], shape=(1, 32), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 32	avg_acc: 0.0656	sec/iter: 30.1083
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18  107  317   19   18  107   73  244   18
   107  109  317   18  225   18  107  191  225   18  244   18  107  109
    30 2667]], shape=(1, 30), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 29	avg_acc: 0.0656	sec/iter: 32.6171
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  107  179   18  107  317   19   18  225   18  225   18
   244   18   19   18  107  191  179   18  244   18  244   18  225   18
   244   18  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0656	sec/iter: 34.7991
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  222  315  254  168   32  187  254
   238  222    6   45  222    6  254  168  303  120  283  222  254  238
   222  254   45  211  212 1209   31 2667]], shape=(1, 36), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 36	avg_acc: 0.0655	sec/iter: 36.8380
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  222  130  297   45  120  121   45  357  237  238
   222  254   87  428  222  254  168   45  107  109  222  254  168   45
   105   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 31	avg_acc: 0.0655	sec/iter: 30.6200
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107  243  438  420   45  187
   254   45  234  208    6  357  238  208   72   31  107  824  892  893
    31  107  109  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 29	avg_acc: 0.0656	sec/iter: 31.6108
INFO:absl:predictions: tf.Tensor(
[[ 130  297   45  222  254  222    6   18  107  109  357  237  254   45
   287  238  222   87 1140  254  168  238  222  254  168  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 27	avg_acc: 0.0655	sec/iter: 30.3334
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  225   18  107  317   18  107  243  438  254   45
   317  225   18  107  336  274   63  108  316  179   18  225   18  225
    18  244  431   45  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 33	avg_acc: 0.0654	sec/iter: 35.3905
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18   19   18  107  317   18  107  109  317
    18  225   18  107  179   18  107  191  244   18  244   18  107  109
    30 2667]], shape=(1, 30), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 29	avg_acc: 0.0654	sec/iter: 29.6374
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18   19   18  107  243  438  420   32  187  254  238
    87  428   56  357  238  222  254  168   32  187  167 2667]], shape=(1, 26), dtype=int64)	labels: [[1285 1283  336  274 1019 1433  903 1198  233   37 1050  128   59 1050
   128  214 1198  219 2348  903  457  610 1285  110  116  840]]	errs: 26	avg_acc: 0.0653	sec/iter: 28.4940
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   20   31    4   45  903   20   31  107
   109   30  187  254   45  208  107  109  876  877   45  208    6  107
   109  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 284  645  237  220  897  898  115 1276 1436  850  620   93  137    6
  1068  449 1982  356 1363 1957  508 1178 1773  284  645  237   88   39
   160   62]]	errs: 30	avg_acc: 0.0653	sec/iter: 30.0386
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87  815  208  242   56  130  297  107   20   45  917
    87  917  107   20   22   45  287  323  738   87  222  254  168  238
    87   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 29	avg_acc: 0.0653	sec/iter: 32.1440
INFO:absl:predictions: tf.Tensor(
[[ 174   56  107  109  317   18  107  243  113  187  107  243  438  254
   238  208  242  187   31  107  271  287  323  738  502  254   45  120
   283  645   31 2667]], shape=(1, 32), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 29	avg_acc: 0.0653	sec/iter: 31.1232
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  225   18  107  179    7  317  225   18  225   18  225
   317  225   18  107  226   18   19   18   19   18  107  109    7   18
   107  109 2667]], shape=(1, 31), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 30	avg_acc: 0.0652	sec/iter: 29.5172
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  179    6   18  107  243  254
   238  208  671  254   63    4  208  893  194  208  671  716  238  208
   671 1291 2667]], shape=(1, 31), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 30	avg_acc: 0.0652	sec/iter: 28.3054
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179    7  317   18  107  243  438  420  630  187   19
   109  317   18  107  109  108   45  271  187  254   63  108   45  287
   771  601   87 1257 2667]], shape=(1, 33), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 28	avg_acc: 0.0653	sec/iter: 31.2241
INFO:absl:predictions: tf.Tensor(
[[ 225   18  225  317   18  225   18   19   18  225   18  225   18  225
    18  225   18  226   18  179   18  225   18  107  191   19   18  225
    18  225   18  244   18 2667]], shape=(1, 34), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 37	avg_acc: 0.0652	sec/iter: 31.0375
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  317  225   18  225   18  225   18  225   18
   225   18  225   18  107  243  489  391  267  268   63  108   45   63
   108  316 2667]], shape=(1, 31), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 29	avg_acc: 0.0652	sec/iter: 33.7269
INFO:absl:predictions: tf.Tensor(
[[ 225   18    7  317  225   18  225   18  225   18   19  243  438  254
   238   87  222  243   56  357   29   22  822    4   63  108   45  357
   108   45 1230   87 1257 2667]], shape=(1, 34), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 35	avg_acc: 0.0652	sec/iter: 34.5234
INFO:absl:predictions: tf.Tensor(
[[ 254   45  287    6  254  168  107  109  108   45  287  166   72   31
   349  109   87   72   31  130  537  420  238  222  254  168  428  203
   254   45   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 27	avg_acc: 0.0654	sec/iter: 31.1969
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  243  254
   538   37   45  671  120  254   63  266  222  254   63  108   45  120
   283   31  107  985   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 30	avg_acc: 0.0655	sec/iter: 33.1431
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  497  187  876  877   45  120   31  107  317   18  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 34	avg_acc: 0.0655	sec/iter: 29.6464
INFO:absl:predictions: tf.Tensor(
[[ 174   87   39  274    6   45  120  166  222   31  876  254  168   56
   130  297   45  876  877   45  120   22  107  109  222  254  266  222
   254   45  271  187  254  168 2667]], shape=(1, 35), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 32	avg_acc: 0.0654	sec/iter: 32.7336
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  109  317   45
   243  254  266   18  225   18  225   18  244  431   45  303   30 2667]], shape=(1, 28), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 32	avg_acc: 0.0653	sec/iter: 27.1733
INFO:absl:predictions: tf.Tensor(
[[  56  107  179   18  107  317  225   18  225   18  107  243  438  254
    45  225   18  225   18  244  179   18  107  191  244   18  244   18
   244   18  107  109 2667]], shape=(1, 33), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 31	avg_acc: 0.0653	sec/iter: 33.8455
INFO:absl:predictions: tf.Tensor(
[[ 130  222   62  216   37   38   37   38   37   45  120  283  222    6
   834  880  222  876  877   45  903   37   38   37   45  211  203  478
   233 2667]], shape=(1, 30), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 37	avg_acc: 0.0653	sec/iter: 31.8261
INFO:absl:predictions: tf.Tensor(
[[ 107  109  195   45  196  417  529   72  196   45  107   20   45  469
    37  196   45  107  109   29  598   45  120  121   63  108    6  109
   108  316 2667]], shape=(1, 31), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 27	avg_acc: 0.0654	sec/iter: 32.4312
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243 1231   45  903   37   22  489    6
    45  903   37  903   37   45  903   37    4   45  268  238  222  107
   985    6  157 2667]], shape=(1, 32), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 31	avg_acc: 0.0654	sec/iter: 34.5293
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  225   18  107  179  220   19   18  107  179   18    7
   317  225   18  107  179   18  107  191   19   18  107  191   19   18
   244  254 2667]], shape=(1, 31), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 31	avg_acc: 0.0654	sec/iter: 33.2457
INFO:absl:predictions: tf.Tensor(
[[ 167  168   32  187   31  130  297   45  313   22   31  254  168  238
   208   31  107  108   45  254  168  107   20  684  694  254   63  108
    45  889 2667]], shape=(1, 31), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0653	sec/iter: 32.6409
INFO:absl:predictions: tf.Tensor(
[[   9  179   18    7  317  225   18  225   18  225   18  225   18  225
    18  225   18  225   18  244   18  244   18   67  192  103  254 2667]], shape=(1, 28), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 25	avg_acc: 0.0653	sec/iter: 29.7388
INFO:absl:predictions: tf.Tensor(
[[  18  317  225   18  225   18  107  243  113  187   31  903   20   31
   130  297  187   31  107  109  105   31  107  109  105   31   18   67
   192 2667]], shape=(1, 30), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 29	avg_acc: 0.0653	sec/iter: 31.3737
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  225   18  107  243   56  254   45
   903   37  876  877   45  107  179   18  225   18  225   18  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 32	avg_acc: 0.0653	sec/iter: 33.8628
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225   18  225  317
   225   18  225   18  225   18  225   18   19   18  244   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 29	avg_acc: 0.0653	sec/iter: 35.0758
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  113  187  254   63  497
   187  254  238  222  187   45  187   31  107  109 2667]], shape=(1, 25), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 25	avg_acc: 0.0653	sec/iter: 31.3041
INFO:absl:predictions: tf.Tensor(
[[ 174   39  274    6  120   45  120  166   31  130  297   45  130  582
    45  876  877   45  287  238  222  806  287  124  222  254  168  238
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 31	avg_acc: 0.0653	sec/iter: 31.8562
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  268  720  224  274  405  406  515  274  254
    45  718  238  208   72   31  107  537  420  238  208  242  107  824
   892 1103   31   45   31 2667]], shape=(1, 34), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 32	avg_acc: 0.0653	sec/iter: 36.9933
INFO:absl:predictions: tf.Tensor(
[[   6  107  109  317   18  107  243  113   56  254   45  287   20   22
   822   45  187  254  168  255  187   31  143  187  143   31   18  225
    18  225   18  225   18  225   18  244   18 2667]], shape=(1, 38), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 38	avg_acc: 0.0652	sec/iter: 44.9269
INFO:absl:predictions: tf.Tensor(
[[ 187   31   19   18  107  179   18  107  317   18  107  226   18  107
   317   18  225   18  244   18  244   18  244   18  107   18  107  243
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 29	avg_acc: 0.0652	sec/iter: 39.9885
INFO:absl:predictions: tf.Tensor(
[[  56  167  168   71  447  130  297   45   87   22   31  107   20   31
   107   20  254   45  271   45  107  109   22   20  420   22 2667]], shape=(1, 27), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 28	avg_acc: 0.0652	sec/iter: 33.2027
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   18  107  243  113  107  317  225
    18  107  336  103  187  268   63  210  107  191   19   18  107  191
    19   18  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 25	avg_acc: 0.0655	sec/iter: 36.4183
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   20   45  903   37   22   31  107  109
   346  508  187  167  168  107 1025  212  187  254  168   45   12 2667]], shape=(1, 28), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 28	avg_acc: 0.0656	sec/iter: 33.9340
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  107  243  208  242   56  254  168
    56  130  297  107  336  103  187  107  109  187  254  107  585   45
   889 2667]], shape=(1, 30), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 33	avg_acc: 0.0656	sec/iter: 32.9045
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   56  254   45  903   37   22   45  287
   771   48    6  708  222   87  143   31  107  109  420   45   87  234
    87   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 29	avg_acc: 0.0656	sec/iter: 35.6907
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317   18  225   18  225   18  225   18  225
    18  225   18  225   18  107  226   18  225   18  225   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0655	sec/iter: 40.5798
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  179   19  317  225   18  107  191  225
    18  107   18   19   18  107  226   18  244   18  107  109  317   18
     9   18  107  109  705 2667]], shape=(1, 34), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 33	avg_acc: 0.0655	sec/iter: 45.7693
INFO:absl:predictions: tf.Tensor(
[[ 174  208    6  107  109  357   45  417  529  107  109  138   56  130
   297   45  417  529  107  109  196   45  107  109  196  417  529  254
    45  107  109 2667]], shape=(1, 32), dtype=int64)	labels: [[ 187 1178 1159  183 1637  160  357   45  417  529  276 1907  942 1907
    56  167 1209   45  901  420 1857  474  904   31  107  109  183 1637
   160  417  529  364  672  505]]	errs: 25	avg_acc: 0.0658	sec/iter: 42.2673
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  582  346
   187   18  107  243   18  225   18  225   18  225   18  109 2667]], shape=(1, 27), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 28	avg_acc: 0.0657	sec/iter: 37.1319
INFO:absl:predictions: tf.Tensor(
[[ 107  296  254  108    6  254   45  107  108    6  107  109  346  508
   254  168  107  109  187  254  107  537   72   31  254   45  417  529
    45  417  529   72   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 907  208  254    6   31  458   33  261  128 1734  346  222  254  266
   177    6 2441  238  408   87   72 2441  758  254  347  348  178]]	errs: 28	avg_acc: 0.0656	sec/iter: 46.5020
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45  287  238   87  222  254   87  222    6  254   87  234
    45  317  343  254   87  140    6  357  238  222  254   45  287  771
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 25	avg_acc: 0.0657	sec/iter: 36.9228
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179   18  107  317  225   18   19   18   19   18
   225   18  225  317   18  107  179   18  244   18   19   18  244   18
   244   18  244   18  107  243 2667]], shape=(1, 35), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 27	avg_acc: 0.0659	sec/iter: 37.4037
INFO:absl:predictions: tf.Tensor(
[[ 107  317  225   18  225  317  225   18  107  226   18  225   18  225
    18  225   18  225   18  225   18  225   18  107  243  113  187  268
   542  137  542  916   45 2667]], shape=(1, 34), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 36	avg_acc: 0.0658	sec/iter: 36.0855
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168   56  130  297   45  107  108    6  254  168  107
   109   56  130  297   45  107   20   45  107   20  420  238  222  254
    45  889 2667]], shape=(1, 31), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0657	sec/iter: 34.8518
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  107   18  225   18  107
   191  244   18   19   18  107  191   19   18   19   18  107  191  225
    18  225   18   11  243 2667]], shape=(1, 34), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0660	sec/iter: 36.6893
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18  107  243  438  254   87
   208  254  238   56  107  372 2667]], shape=(1, 21), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 29	avg_acc: 0.0660	sec/iter: 37.8429
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243  113  114  112   85  225   18  107
    20   45  243   56  167   45  903   37  876  877   45  120  283  645
    31  107  109   29   22 2667]], shape=(1, 34), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 34	avg_acc: 0.0660	sec/iter: 38.5451
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  191  225   18  225   18  225   18  244   18
   225   18  225   18   15   18  244   73  244   18  109   63  108    6
   708  893  194  357 2667]], shape=(1, 33), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 30	avg_acc: 0.0659	sec/iter: 35.8431
INFO:absl:predictions: tf.Tensor(
[[   7  317   18  107  243  113  107  226  225   18  107  235  258  195
   858  357  261  346  508  268  694  107  226   18  109  108  316  254
    45  310  585   45 2667]], shape=(1, 33), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 36	avg_acc: 0.0659	sec/iter: 36.0413
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  438  112   85  265  187  254
    63  108  675  187  167   45  187   31  107  109  187  254   45  187
   254  168 2667]], shape=(1, 31), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 29	avg_acc: 0.0657	sec/iter: 33.6621
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  243  254   45
   287  238  208   31   18  107  179  208   31   18  225   18  109 2667]], shape=(1, 28), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 26	avg_acc: 0.0657	sec/iter: 32.4196
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  113  114  451  187  254
    45  187  130  297  508  187   31  187   31  107  109 2667]], shape=(1, 26), dtype=int64)	labels: [[   9  179  137 1138 1713  313   33  412 1104  642   22  187  764  614
  1070  727  636  143  642   20  683  497 1659  516  469  764  614]]	errs: 26	avg_acc: 0.0657	sec/iter: 29.2993
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  226    7  107  109  317   19   18  225   18  225   18
   107  243  113  137   72  262  179   18  225   18  109  346  508  187
   254   45  187  254   87  234 2667]], shape=(1, 35), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 36	avg_acc: 0.0656	sec/iter: 34.7949
INFO:absl:predictions: tf.Tensor(
[[ 346  222 1329  167  168   45  107  582   45  107  109  200  420  238
   208  242   45  107  109  876  877   45  107  582  167 2667]], shape=(1, 26), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 30	avg_acc: 0.0655	sec/iter: 32.6836
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  107   93  137   31  107  582   45  120  283   31
   107  582   45  287  323  738   87  815  304   30   22  827  357  254
   168 2667]], shape=(1, 30), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 32	avg_acc: 0.0655	sec/iter: 34.0938
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18   19   18  107  243  438  254   45  287
   124   87  815  208    6  357  238  177    6  357  238  208    6  538
     6  107  602 2667]], shape=(1, 32), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 30	avg_acc: 0.0655	sec/iter: 32.6705
INFO:absl:predictions: tf.Tensor(
[[  56  107  109    7   18  107  109  317   18  107  243  438  254  168
    56  130  582   56  274  225   18  109  317  268   63  108   45  305
    45  310  305 1027   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 32	avg_acc: 0.0655	sec/iter: 35.5257
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   19   18  107  317   18  107  296   56  130
   297   45  120  107  109  317   18  107  191  225   18  107  824  892
    18  225   18  107  109 2667]], shape=(1, 34), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 32	avg_acc: 0.0654	sec/iter: 34.7284
INFO:absl:predictions: tf.Tensor(
[[ 107  226   18   19  179  107  317   18  225   18  244   18  107  179
    18  107  191   19   18   19   18   11   18  244   18  107  824  892
   262  316  254   45  489    8   52 2667]], shape=(1, 36), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 42	avg_acc: 0.0653	sec/iter: 38.4116
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107   20   45  243 1231  107  296  137   45  903
    37   45  107  372  238  187  107  109  105  107  824  892  572 1111
    31  107  109  357   45 2667]], shape=(1, 34), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 33	avg_acc: 0.0652	sec/iter: 39.5385
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179   18  107  317   19   18  225   18  225  317
   268   19   18  225   18  225   18  107  191   19   18  225   18   19
   109  105   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0651	sec/iter: 33.8264
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  225   18  225   18  225   18  244   18  107  243
    56  130  109  317   18  107  191   19   18  244   18  107  824  892
   262   45  614  630 2667]], shape=(1, 33), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 31	avg_acc: 0.0651	sec/iter: 33.3452
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87 1257  313  222  130  297   87   31  167  168   45
   357  238   87  346  508  187  876  877   45  107  582  238  222    6
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 29	avg_acc: 0.0650	sec/iter: 30.4685
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  107  317   18  107  243  254
   238   56   18   19   18  107  109  317   18  107  191  708  137  105
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 27	avg_acc: 0.0650	sec/iter: 36.9285
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  107  243  438  254   63  108
   187  254   63  108    6  357  108   45   46  420  238  222  167  168
   238  177    6  357 2667]], shape=(1, 33), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 32	avg_acc: 0.0651	sec/iter: 34.2565
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  226  243   48  187   31  305  107  317  225
   317  225   18  107  243  107  109  187  268   45  107  317   18  107
   645  630   45  271  224 2667]], shape=(1, 34), dtype=int64)	labels: [[   6   45 1840  115   31  569 2364  708 1275 1840   87  115 2364  745
   415    6  107  537 1136 1099 2226  564   45  373  145 2068  750  413
   790   45  910  399]]	errs: 30	avg_acc: 0.0651	sec/iter: 36.2885
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  337  917  420  238  222  254
   238   87  733  254  238  222  254  238  222  254  168  238  222  107
    93  137   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 30	avg_acc: 0.0650	sec/iter: 31.9720
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87  222  130  297   45    6   45  107  582   45  287
   238   87  344    6  357   45  107  109   22   45  287  238  222  254
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 34	avg_acc: 0.0651	sec/iter: 32.1292
INFO:absl:predictions: tf.Tensor(
[[ 107  226  179   18  107  317   19   18  107  243  113   63  497  187
   225   18  107  243  438  254  105   31  107  191   19   18  244   18
   244  179    6  244   18  244   18  244  109 2667]], shape=(1, 38), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 45	avg_acc: 0.0650	sec/iter: 38.6357
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  107  191  225   18    7   18
   225   18  225   18  225   18   19   18   15   18  225   18  225   18
    11  243 2667]], shape=(1, 31), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0652	sec/iter: 33.7680
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179  107  317  225   18  107  179   18  107  179    6
    18  225   18  107  243  254   63   19   18    7   73  244   18  225
    18  244  179  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 30	avg_acc: 0.0654	sec/iter: 33.9009
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18  225   18  244  254  268
    18  225   18  107  226   18  225   18  107  109   56  130  109  317
    18   19   18  107  109 2667]], shape=(1, 34), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0653	sec/iter: 39.5355
INFO:absl:predictions: tf.Tensor(
[[ 107  317   18  225   18  225   18  225   18  225   18  225   18  225
    18  225  243   56  274  187  130  297   45  243  113  187  268   63
   108   45  107  109  705 2667]], shape=(1, 34), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 33	avg_acc: 0.0651	sec/iter: 34.4447
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  107  243  113  107  317
   225   18  107  582  346  508  187  107  109  502  254   63  497 2667]], shape=(1, 28), dtype=int64)	labels: [[ 107  226    9  225  179   18  107  317 2336 1181  301  297  964  236
   234  789  262  684  236  362 2357  740 1803  704  964   41  169  105
   187 2357   45  107  109  216]]	errs: 27	avg_acc: 0.0653	sec/iter: 31.9848
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317  225   18    7  317   18  225   18  225   18  107  582
    45  243   56  130  582  196  313  107  191  708   18  225   18  225
    18    7   18  107  372 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130 2221  687  286  222  315  243  210  292  687  828  947  292  887
    45  687  286   56  391  208   72   14  947  292  887  287 2631   56
   160  553  690  903   22]]	errs: 31	avg_acc: 0.0653	sec/iter: 37.0923
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  238  222    6   45  222  254  168   32
   187  254  168  323   87  428   87  105   31  876  877  238  222    6
   235  233 2667]], shape=(1, 31), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 30	avg_acc: 0.0653	sec/iter: 34.7248
INFO:absl:predictions: tf.Tensor(
[[ 167  221    6  107  109  187  254   45   87  234   87  428   87  428
    87  428   87  187  254  168  238  222    6  107  109  187  254   45
   107  985   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 28	avg_acc: 0.0654	sec/iter: 32.5525
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317   18  107  317  225   18
   107  226  226   18   19   18  107  191  225   18  107   18  107  109
    63  268   63  497   45  310  585   45   45 2667]], shape=(1, 38), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0653	sec/iter: 38.8877
INFO:absl:predictions: tf.Tensor(
[[   6  107  109  317  143  243  113  107  296   45  337  917  420  238
   208    6  564  187  254 1017   87 1257  107  109  108 1017 2667]], shape=(1, 27), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 31	avg_acc: 0.0653	sec/iter: 28.6627
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18   19   18  225   18  225   18   19   18  225   18
    19   18  107  109  357 2667]], shape=(1, 34), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 32	avg_acc: 0.0653	sec/iter: 36.7920
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   56  254   45  287  208    6  254  168
   107  109  187  254   45  903   37  203  254  168  238  222  254   45
   120  283  645 2667]], shape=(1, 32), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 29	avg_acc: 0.0654	sec/iter: 32.6536
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   18  225   18   19   18  107  109
   317   18   19   18  107  109    7   18  244   18   19   18   19  109
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 35	avg_acc: 0.0653	sec/iter: 34.6463
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  268   19   18   19   18  107  109
   317  220   61  107  191   19   18  244   18   19   18  225   18   19
   191   19   18  244  109 2667]], shape=(1, 34), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 33	avg_acc: 0.0651	sec/iter: 35.7650
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179   19  317   18  107  179    7  317   18
   107  317   18  225   18  107  191   19   18  244   18    7   18    7
   191  192 2667]], shape=(1, 31), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 34	avg_acc: 0.0651	sec/iter: 34.0759
INFO:absl:predictions: tf.Tensor(
[[ 648   72   31  166   72   31  130  297   45  120  121   45    6  357
   238  222  254  107  108  316  179    6   98   73  107  109   87 1209
   254   45  120   31 2667]], shape=(1, 33), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 30	avg_acc: 0.0650	sec/iter: 33.5954
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   19   18  107  243   56   18  107  179   18
   107  317  225   18  107  243   18  107  109  317   18  107  191  708
   137  105 2667]], shape=(1, 31), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 28	avg_acc: 0.0650	sec/iter: 35.1208
INFO:absl:predictions: tf.Tensor(
[[ 167  168  315  316  179   18  107  317  143  243  438   87  815  208
   242   56  130  297   45  107  109  105   31  107  582  346  508  107
   243  420 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 30	avg_acc: 0.0650	sec/iter: 32.1667
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107   20   45  107  179  107  109  317   18  225   18  107
   109  876  877   45  305   45  107   73  244   18  107  243  420 2667]], shape=(1, 28), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 32	avg_acc: 0.0650	sec/iter: 33.3309
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  225  317   18  225   18  107  317   18  225   18  225
    18  225   18  107  243   56  130  297  498    6   18  225   18  225
    18  225   18  431 2667]], shape=(1, 33), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 32	avg_acc: 0.0650	sec/iter: 37.5200
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   18  107  243  113  107  317  225
    18  225   18   19   18   19   18  244   18  107  109   63  108   45
   268   63  268 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226  225  225  179    9  317  416   63 1637  225  131  599 1920
  1505  903  146  268   45   15  290 1343  284  614   56  215 1750 1238
    97  274 1416 2051  268]]	errs: 28	avg_acc: 0.0651	sec/iter: 35.4979
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243 1231   45  903   37   22   45  903
    37  107  109  876  877   45  903   37    4   45  107  317   18  107
   985   31 2667]], shape=(1, 31), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 33	avg_acc: 0.0651	sec/iter: 32.9730
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45 1342  195  140   87  222    6   45  357  238   87  140
     4  238   87  428   55  918   22   45  357  238  222    6   45  357
   238   87   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 28	avg_acc: 0.0651	sec/iter: 34.3707
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18   19   18  107  243  208  708  187  254  168
    32  187  254   87  208    6  708  107  109  357  108  238  222  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 613    4   56  115  860  982 1080 1459  610 2240  103  208  708  115
  1321  610 1080  339 1758   87  733  708  858   45  860  982 1159   56
  1826  624   22]]	errs: 28	avg_acc: 0.0651	sec/iter: 32.2116
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109    8   72   31  107  109  357  266  222  254  168
    56  130  297   45  107  582  107  109  346  222  254   45  287  771
  2667]], shape=(1, 29), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 28	avg_acc: 0.0651	sec/iter: 33.8081
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317   18  225   18  107  243   56  196   45
   243   56  107  243  420   18  244   18  225   18  107  243  438  254
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[ 613    4    4  248  672  834  284 2245  817  391    6  632  196   45
    49   85 1800  494  672  834  203 1019   84   46 1086  284 2245  817
   238    6  107  752   49   85]]	errs: 32	avg_acc: 0.0651	sec/iter: 31.2782
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  113  187  107  109  317
    45  243  254  168  498    6   18  225   18  244   18  225   18  225
    18   67  192 2667]], shape=(1, 32), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 32	avg_acc: 0.0650	sec/iter: 31.7866
INFO:absl:predictions: tf.Tensor(
[[ 130  336   87  222  254   45  222  130  222  254  222  254  168   45
   469   45  357  254  168  238  222  254  105   31  222  254  222  254
    45  108   45  610   45  120   31 2667]], shape=(1, 36), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 35	avg_acc: 0.0651	sec/iter: 36.3265
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  107  191  244   18  225
    18  225   18  225   18  225   18  225   18  225   18  225   18   11
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0654	sec/iter: 34.8460
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45  120  254  168   56  130  297   45  107  109
    45   87   22   45  120  733  254  168   45  917  420   22   45  917
   420  323   87 1257 2667]], shape=(1, 33), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 35	avg_acc: 0.0653	sec/iter: 36.9976
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18  107  191  192   45
   243  238   56   18  244   18  244   18  244   18   67  192 2667]], shape=(1, 27), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 25	avg_acc: 0.0655	sec/iter: 32.2667
INFO:absl:predictions: tf.Tensor(
[[ 648  107  109  317   18  225   18  225   18  225   18  225   18  225
    18  225   18  225   18  107  179   18  107  191   15   18  225   18
   244  196 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 34	avg_acc: 0.0654	sec/iter: 34.0570
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  243  489  254   45  305  317  225   18  225   18
   225   18  225   18  107   73  107  243   45  271  187  254  168  238
    87  234   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 243  113   87  815 1490 1070  435 1191  138  149  323  738  255  893
   323  625  291  435 1191    6   42  156  435 1191    6 1756  156]]	errs: 30	avg_acc: 0.0652	sec/iter: 32.4224
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  225   18    7  317
    18  107  226   18  225   18  107  109  317   18  107   18  107  109
     7   73    7   18 2667]], shape=(1, 33), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0652	sec/iter: 35.7508
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  305   45  243  113  107  108  187   31
   107   20   31  254   63  108   45  108  566   37  108   45  208   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 764  362  764  326   37  362  326   37 1302  514  362 1302  514  269
   565   45   64  645 1867  705  656 1014 1357  296  233   56   62 1611
   629  405]]	errs: 30	avg_acc: 0.0651	sec/iter: 35.0082
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  225   18  225   18  107  243  254
    63  108  187  254   45  355 1138  417  529  671  108  238   87  234
    87  633   31 2667]], shape=(1, 32), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 30	avg_acc: 0.0651	sec/iter: 37.2025
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  226  225   18  107  179    7  179  708   31  130  297
   187  254  107  109  317   18   19   18  107  191   19   18  107  109
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 31	avg_acc: 0.0650	sec/iter: 32.5121
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  489  225   18  225   18  225   18  225
   317  225   18   19  243  438  420  498    6  109  317   18  225   18
    19   18  109  566  187  268 2667]], shape=(1, 35), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0649	sec/iter: 36.7494
INFO:absl:predictions: tf.Tensor(
[[ 346  222  130  297   45  222  167  168  107  582   45  357  238  346
   508  107  582  107  582  346  508  876  877   45  107  824  892 1103
    31  107   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 33	avg_acc: 0.0649	sec/iter: 37.0416
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  107  226   18  225   18
   225   18   19   18  107  243  301   38  284  645  237  675  374   18
   244  196 2667]], shape=(1, 31), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 34	avg_acc: 0.0649	sec/iter: 33.6985
INFO:absl:predictions: tf.Tensor(
[[  56  107  226  226  225  179  107  179   18  107  109  317  210  107
   109  317   18  107  243  113  107  109    7   18  244  179   18  107
   296  137 2667]], shape=(1, 31), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 30	avg_acc: 0.0649	sec/iter: 31.8716
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  179   18  107  317  225   18  107  317   18  107
   317   18  107  133 1069   19   18  107  191  225   18  225   18  225
    18  107  109   63  497  187   18  244   18  244   18  244   18   67
  2667]], shape=(1, 43), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 40	avg_acc: 0.0649	sec/iter: 44.6620
INFO:absl:predictions: tf.Tensor(
[[  56  107  226  226    7  179   18  107  317  225   18  107  109  317
    18  107  226   18  107  226   18  107  431   45  107  317  107  179
     6  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 29	avg_acc: 0.0651	sec/iter: 33.3741
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  107  243  438  254   63
   497  187  254  238  187   62   63  210  208  893  194  208    6  107
   582   45  671 2667]], shape=(1, 32), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0650	sec/iter: 31.8684
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  317   18  225
    18  225   18  107  243   18  225   18  225   18  225   18  225   18
   109 2667]], shape=(1, 30), dtype=int64)	labels: [[ 296  664  107  235 1031 1105  578  317  883 2131  893 1031  620  287
  1031  203  848  582  203  491  903  582  651  208 1751 1045 1041  233]]	errs: 27	avg_acc: 0.0649	sec/iter: 31.3936
INFO:absl:predictions: tf.Tensor(
[[ 130  131   56  130  107  317   18  225   18  225   18  225   18  225
    18  225   18  107  582   45  268  179   18  107  317   18  225   18
    67 1423   45  211  120 2667]], shape=(1, 34), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 31	avg_acc: 0.0649	sec/iter: 37.7499
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  222  254   45  222  130  109   29  598  107   20   45
   196  708  222  107  317   18  107  226   18  225   18   15   18  107
    18  244   18  107  191  143 2667]], shape=(1, 35), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 38	avg_acc: 0.0648	sec/iter: 38.2278
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107  243  113   56  130  297
    45  271  287  266  222   22  822   37   22  822    4  834  880  211
   203 2667]], shape=(1, 30), dtype=int64)	labels: [[ 255    6   45  268  565  847  377 1036 2073 1329 1748  323   87  324
   269 1023  788  267  466  564  637 1340 1102  339   18  310  323  602
  1637   87  324]]	errs: 31	avg_acc: 0.0647	sec/iter: 33.9776
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  179    7   18  107  317   18  107  243  438  254   45
   287  238   87  815  208   72   31  107  109  317  268   63  108   45
   120  283   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 31	avg_acc: 0.0647	sec/iter: 34.6646
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254  168   45  903  606  208  242   56
   130  297   87  208   72   31  130  297   87  234  694  107  824  892
  1103   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0646	sec/iter: 35.2152
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  225   18  225   18  225   18  107  243  438  254
    45  287  238  222  337  917  107   20   45  120  283  645  238  222
     6  107  109  357   45 2667]], shape=(1, 34), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 35	avg_acc: 0.0646	sec/iter: 33.8970
INFO:absl:predictions: tf.Tensor(
[[ 346  222  167  168  383  548   45  120  121   45  305   87  428   87
   346  508  187  254  107  582  238  208  242   45  107  824  892 1103
    31  107  109  187   45 1335 2667]], shape=(1, 35), dtype=int64)	labels: [[ 829  197  258  703  290  441  196   45  812  112   45  294  933 1300
    89  624 1108  212  582  812  111  311  160  110  812  112 1401 1536
   809 1889  124  571  357  516 1177]]	errs: 33	avg_acc: 0.0646	sec/iter: 35.3697
INFO:absl:predictions: tf.Tensor(
[[ 107  317  225   18  225   18  107  243  113  187   31  107  582   45
   187   31   56  130  107  179  137  105  187   62   63    4   63  108
     6  107  179    6  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 30	avg_acc: 0.0646	sec/iter: 34.5102
INFO:absl:predictions: tf.Tensor(
[[ 374  179   18  107  317  225   18  225   18  225   18  225   18  225
    18  225   18   19   18  107  243  489  391  267  268   63  108   45
   211  904  268 2667]], shape=(1, 32), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 30	avg_acc: 0.0645	sec/iter: 34.4287
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  357   45  120  283  645  237    6  235  233   37   45
   357   45  287  238  222  806  107  109  357   61  222  107  109  357
   238  222  254   45  357   45 2667]], shape=(1, 35), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 35	avg_acc: 0.0644	sec/iter: 36.6090
INFO:absl:predictions: tf.Tensor(
[[ 167  168  315  316  179   18  107  317  143   31  107  824   72  254
   108  316  266  115   11   18  225   18  244   18   11   18  225   18
   244  431 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 30	avg_acc: 0.0645	sec/iter: 32.4447
INFO:absl:predictions: tf.Tensor(
[[ 167  168   32  187   31  130  297   45  107  317   22   45  684  752
    45  357  238  222   87  222   22   45  107  317   22   45  357  238
   222   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 30	avg_acc: 0.0646	sec/iter: 32.9332
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  438  254
    63  108  187  254   45  208  893   31  107  372  238  222  254   45
   120  283  645 2667]], shape=(1, 32), dtype=int64)	labels: [[ 130  109  438 1363  967  968  160  449  244  642  286  514  298  449
   286 1554  817   98  191   67   73  292  179  204  891  303  438  817
   244   18  226  914  202]]	errs: 33	avg_acc: 0.0645	sec/iter: 37.3883
INFO:absl:predictions: tf.Tensor(
[[ 187   31  107  179   18  107  317   19   18  107   18  225   18  225
    18  225   18  107  243   18  244   18  244   18  107  191  244   18
   107  243 2667]], shape=(1, 31), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 31	avg_acc: 0.0645	sec/iter: 31.9521
INFO:absl:predictions: tf.Tensor(
[[  56  107  296   20  130  297   45  107  109  648  187  254  168  107
    20  107   20   31  107   20  254   87   72   31   18  107  108  238
   208   31 2667]], shape=(1, 31), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 30	avg_acc: 0.0645	sec/iter: 33.4626
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243   56  130  297   45  305  934  420
   648  107  243  113  107  109  187  107   73  107  191  225   18    7
    18  107  109  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 315 2230  794  138  149   72 1321 1332 1673 2556  642  815   39    4
  1236  483  107  765  801  968  391  374 1055 1234   18   19  914   98]]	errs: 30	avg_acc: 0.0643	sec/iter: 32.8861
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   19   18  225   18  225   18
   225   18   19   18  107  226   18  244   18  107  109  317   18  107
   243  113  137   45  268 2667]], shape=(1, 34), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0643	sec/iter: 35.8444
INFO:absl:predictions: tf.Tensor(
[[  56  107  109   29  598  107  109   29  598  107  582   45  598  107
   226  225   18  107  109  317   18  244   18  244   18  244   18  107
   243  254 2667]], shape=(1, 31), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 32	avg_acc: 0.0643	sec/iter: 36.7691
INFO:absl:predictions: tf.Tensor(
[[ 174   56  107  109    7  317   18  107  243  113  107  243  438  254
    45  287  238   56  357  237  675  374  303  120  283   45  120  283
   645   31  107  985   31 2667]], shape=(1, 34), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 29	avg_acc: 0.0643	sec/iter: 36.3624
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  109  179   18  107  317   18  107  296   56  130  297
    45  271   19   18  107   73   19   18  244   18  244   18  107  179
   269   22 2667]], shape=(1, 31), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 34	avg_acc: 0.0643	sec/iter: 33.7569
INFO:absl:predictions: tf.Tensor(
[[ 174   56  107  109   29  297   45  107  109  357  237   56  130  297
    87  234  917  238   56  130  297  107  109  105   31  167   45  357
   420 2667]], shape=(1, 30), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 26	avg_acc: 0.0644	sec/iter: 34.0591
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  179   18  107  317   18  225   18  107  243  438  254
    63  108   45  671  108  187  268  694  391  267  268   63  276  671
   716 2667]], shape=(1, 30), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 37	avg_acc: 0.0644	sec/iter: 33.8911
INFO:absl:predictions: tf.Tensor(
[[  56   70  316  179   18  107  317   19   18  107   18  107  179   18
   107  243   56  107   18  107  243   56  254  268  694   45   18  107
   191   15   18  107  585 2667]], shape=(1, 34), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 36	avg_acc: 0.0645	sec/iter: 38.4794
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179  107  317   19   18  107  179    7  317
   225   18  225   18  107  191   19   18  244   18  244   18  107  179
   137 2667]], shape=(1, 30), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 29	avg_acc: 0.0646	sec/iter: 31.1593
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  130  297   45  120  283  222   22   31  254   87
   428  222  254  238  222  254  168  428   87  105   31  107  109  105
    31  107  109  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 254  647  242  907  168  422  254  160  649  225   18  244  109  342
   671  917 1454  862 1337  463  671  120  254  391  445  254  538  428
  1163  167  168  116  105  671  195]]	errs: 32	avg_acc: 0.0646	sec/iter: 37.2176
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  357  238  222  254  168  238
    87   72   31  254  105   31  167   45  107  109  357  238  222  254
   168  238   87  234   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 42	avg_acc: 0.0646	sec/iter: 37.4300
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18   19   18  225   18
   107  243  113  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0645	sec/iter: 38.5699
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317  225   18  107  109  317
    18  107   73   19   18  107   73   19   18  244   18  244   18  225
    18    7   73  708 2667]], shape=(1, 33), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 32	avg_acc: 0.0644	sec/iter: 38.6098
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  179   18  107  317   18  225   18  225   18  226
    18  225   18  225   18  244   18  244  431   45  614  630  187  254
    45   87  234 2667]], shape=(1, 32), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 31	avg_acc: 0.0644	sec/iter: 36.4605
INFO:absl:predictions: tf.Tensor(
[[  39  274    6  357  130  582   45  120  283  222    6   87  428   87
  1257  222    6  357   45  120  283  645  238  222  254  168   45  107
    93  137 2667]], shape=(1, 31), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0643	sec/iter: 34.7690
INFO:absl:predictions: tf.Tensor(
[[ 130  336  258  195   45  357  237  675   85  225   18  107  336   45
   268  238  222  107  109  357  237  238  222  254  168   45  614  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 622 1209   31  564  195  564 1957  854  709  266  622 1209   31  451
    70  266  195   45  310  585  130  239  542  137  542  105  187  357
   168   45  211  970]]	errs: 28	avg_acc: 0.0644	sec/iter: 33.2021
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317  225   18  225   18    7   18  225   18
   107  243  113  187  107  109   30   45  268  238  222  107  109   45
     5  950 2667]], shape=(1, 31), dtype=int64)	labels: [[ 187   31  502  120  598 1568  968 1394  893  194  266  208  284  115
   757  671  276  671   45   46   42  326  631  478  537  429 1112 1116
   598   45 1841 1945]]	errs: 31	avg_acc: 0.0643	sec/iter: 34.5313
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  108   45   46  420  238  208  671  120  121  120   56  254
    63  108    6  107  109 2667]], shape=(1, 34), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 34	avg_acc: 0.0643	sec/iter: 38.9513
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  191  244
    18   19   18  107  191   19   18   19   18  107  191  225   18  225
    18   11  243  113 2667]], shape=(1, 33), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0645	sec/iter: 37.5405
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18  107  243   48  208   72   31  107  235
   233   37  107  179    6  107  109  357  237  391  267  222  254   45
   120  283   45  176 2667]], shape=(1, 33), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 30	avg_acc: 0.0645	sec/iter: 36.9253
INFO:absl:predictions: tf.Tensor(
[[ 107  317  225   18  225   18  107  243  113  137  630  187   31  130
   297   45  103  187   31  876  877  238  208    6  301   38  284  645
    31  107  985   31 2667]], shape=(1, 33), dtype=int64)	labels: [[1637  225  208  993  566 1534  889  314  203 2095  414   45  194 1332
   889  314  128   41   93  137  329  508  284  115  301   38  208  158
   452  284  115  633  566 1534  889  314]]	errs: 33	avg_acc: 0.0645	sec/iter: 36.3276
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18  107  243  113  187  107  582   45  284
   645  237   56  187  876  877   45  120  283  645  187  254  168  137
  2667]], shape=(1, 29), dtype=int64)	labels: [[  40 1223  566 1557  603  431  317   48  414  529  187  848 2357  169
  1814 1290  238  315  357  565  245  316  323  254   45  718  238  266
   116 1184   31]]	errs: 30	avg_acc: 0.0645	sec/iter: 36.5231
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18   19  243  208  242   56  130  297   45  107
   109   48  208    6  357  237  107  109  187  107   73  708  357  237
     6  107  109  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 30	avg_acc: 0.0645	sec/iter: 36.4222
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168   32  187  130  297   45  130  297   87
   428   87  254  168  238   32  187  254  168  238  346  508  107   93
   137   31 2667]], shape=(1, 31), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 34	avg_acc: 0.0645	sec/iter: 35.5237
INFO:absl:predictions: tf.Tensor(
[[ 167  221  187   31  107  317   18  225   18  225   18  225   18  225
    18  225   18   15   18  244   18  244   18  244   18  107  191   15
    18  107  985 2667]], shape=(1, 32), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 28	avg_acc: 0.0645	sec/iter: 39.7434
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  243  254  168   32  187   31  107   20   45  903
    37   45  903   37   45  903   37   45  876  415    6  254   45  120
   283  645 2667]], shape=(1, 31), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 32	avg_acc: 0.0645	sec/iter: 36.1418
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18   19   18  107  109  317   18  107  109
   317  225   18  107  243   56  244   18  244   18  244   18  107  109
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 29	avg_acc: 0.0646	sec/iter: 33.8723
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254   45  903   37   38   56  130  297
    87  733  254  168   32  187  130  297   45  107  537  420  238  222
   254   45  889 2667]], shape=(1, 32), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0645	sec/iter: 36.6412
INFO:absl:predictions: tf.Tensor(
[[ 349  287  254  168  365    6  107  296   45  107  336   22   31  130
   297   45  357  238  222  107  109  105   31  130  537  420  238  222
   254   45  799 2667]], shape=(1, 32), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 29	avg_acc: 0.0646	sec/iter: 35.4215
INFO:absl:predictions: tf.Tensor(
[[ 107  109  195   45  120   56  130  297   45  107  109  196  708   87
   428   87  428   56  254  168  238   87  428   87  428   87  346   45
   357 2667]], shape=(1, 30), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 29	avg_acc: 0.0646	sec/iter: 35.6319
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18  107  243  438  254
    63  108    6  357  237  238  222  243  113  137   31  167 2667]], shape=(1, 27), dtype=int64)	labels: [[ 876  315 1342  195  586  194  112   85   43  496  110  508  137    6
    45 1342  195  542  178  542 1279 1014  174  238    6   45 1342  195
   124  422  178 2556   31]]	errs: 32	avg_acc: 0.0645	sec/iter: 33.0632
INFO:absl:predictions: tf.Tensor(
[[  87  222  130  297   45  357  238  222  107  109  105   31  254  168
   238   87  815  208  242   45  107  582  238  222  254  238  222  254
   238  222  254   45  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 43	avg_acc: 0.0645	sec/iter: 37.4535
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  317   18  225   18   19   18  244   18
   107  191   19   18  244  179   18  244   18  244   18   67  192 2667]], shape=(1, 28), dtype=int64)	labels: [[ 404    4  362 2005  836  831  157   45  345  284 2245  315  195  357
   237  238   14  225   67  708  357  179  346   49  583  244   73   67
   192  508   22]]	errs: 25	avg_acc: 0.0646	sec/iter: 34.4578
INFO:absl:predictions: tf.Tensor(
[[  56  107  226  225   18  107  179   18  107  109  317   22   20  107
   243  420   20   31   56   22  137   72   31  107  109    7    8   52
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 32	avg_acc: 0.0646	sec/iter: 36.9882
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  226  179   18  107  317   19   18  225   18  107  179
    18  225   18   19   18  107  243  254  268  694   45   63  108   45
   671 1291 2667]], shape=(1, 31), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 38	avg_acc: 0.0646	sec/iter: 35.8217
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317  225   18  107  109  317
    18  225   18  225   18  225   18  244   18  244   18  107  109   63
   497 2667]], shape=(1, 30), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 36	avg_acc: 0.0645	sec/iter: 35.1032
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   45  243  113   56  130  297   45  196   45
   130  297  508   56  130  582  167   45  107  109  708  222  254  168
   137 2667]], shape=(1, 30), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 29	avg_acc: 0.0645	sec/iter: 34.6403
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   18  107  243   56  187   31   18  107  179   18
   107  243  254   45  107  179  103  254  168  107  191  708  187  167
    45 2667]], shape=(1, 30), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 29	avg_acc: 0.0645	sec/iter: 34.7417
INFO:absl:predictions: tf.Tensor(
[[  56   18  179   18  107  317  268   18  107   18  107  243   56  130
   297   45  287  238  222   22  822  268  694  391  107  243   18  107
    73  244   18    7  191   15   18  244   18 2667]], shape=(1, 38), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 38	avg_acc: 0.0645	sec/iter: 43.1301
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  243  438
   254   63  497  187  254   45  301   38   56  254   63  108   45  208
   254  168   45  310 2667]], shape=(1, 33), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 35	avg_acc: 0.0645	sec/iter: 36.3056
INFO:absl:predictions: tf.Tensor(
[[  18  317  225   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18  225   18  225   18
   225  243 2667]], shape=(1, 31), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 33	avg_acc: 0.0644	sec/iter: 37.1490
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  225   18  225   18  225
    18  225   18  225   18  225   18  225   18  225   18  225   18  225
    18  107  191   19   18  109 2667]], shape=(1, 35), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 39	avg_acc: 0.0643	sec/iter: 39.0444
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18  225   18  225   18   15   18  225   18
   225   18  225   18  225   18  244    9  243 1231   18  107  109   29
   598 2667]], shape=(1, 30), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 33	avg_acc: 0.0642	sec/iter: 36.4617
INFO:absl:predictions: tf.Tensor(
[[ 225   18  225  317   18  225   18  225   18  225   18  225   18  225
    18  225   18  225   18  225   18  225   18  225   18  225   18  225
    18  225   18  244   18 2667]], shape=(1, 34), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 37	avg_acc: 0.0641	sec/iter: 37.5676
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243 1209   56  107  109  317
    18  107  226  226   18  225   18  225   18   11   18  225   18  225
    18  225   18  107  191  268   63   18  244   18  244   18  244   18
    11 2667]], shape=(1, 44), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0641	sec/iter: 49.8393
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  107  317  225   18  107  243  438  254   63  108  238
    87  815  208  242   56  417  529  323  107  109  317  225   18  107
   296   56  130  297   45  357 2667]], shape=(1, 35), dtype=int64)	labels: [[ 375  194  195   33   34  222   60  195  284 2245 1932  438  789 1124
   195  913  834   49   85  632  651  323  428  623  614  195  913  834
    49  779 1245 1313]]	errs: 33	avg_acc: 0.0640	sec/iter: 39.3236
INFO:absl:predictions: tf.Tensor(
[[ 648  208    6  107  109  357   45  417  529  671  108   56  130  297
    45  120  107  109  876  877   45  630   45  107  602  254   45 2667]], shape=(1, 28), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 29	avg_acc: 0.0640	sec/iter: 34.2880
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19  243  113   56  254  168  107
   317  225   18  225   18  225   18  225   18  225   18  225   18  225
    18  225   18  107  109 2667]], shape=(1, 34), dtype=int64)	labels: [[1249  296 1321 1862  903  366  196  574  365  385  254  316  752  808
   206 1073  489  564  107  637   87    4  340  380 2172 2274 2172 1724
  2172  615 2172   45]]	errs: 32	avg_acc: 0.0640	sec/iter: 39.9206
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317   19   18  225   18  107  109  317
    18   19   18   19   18   19   18  107  109  317   18  107  109  357
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 215 1235 1789  642   37   60   61  876  877  799 1026  482  178   67
   334 1011 1374 1147  522  173 1144  234 1579  154   31   37  210    9
    18  131  842 1253  146  717  705]]	errs: 34	avg_acc: 0.0639	sec/iter: 37.5559
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179  244  317  225   18  107  179   18  107  109  317
    18  107  109  317   19   18  244   18  244   18  109  317   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 30	avg_acc: 0.0641	sec/iter: 35.1813
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225  179   18  107  317   19   18  225   18    7  317  225
    18  225   18   19   18  107   73  244   18  244   18   67  192 2667]], shape=(1, 28), dtype=int64)	labels: [[  51  497  286  157 1568 1248  752  902 1069  744  133  852  583   51
   876  415  662  492  112  769   31  664  420  492  112  508  404 1996
    51  244   67  192]]	errs: 30	avg_acc: 0.0641	sec/iter: 32.8920
INFO:absl:predictions: tf.Tensor(
[[ 225   18  225  317   18  225   18   19   18   19   18  225   18  225
    18  225   18  225   18  107  191   19   18  225   18  225   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[1523  755 1096  746  411  293  575  505  967   56 1446 1008  690  439
   505  297   87  916  629  111  222    4   63  513  524  357 1969  806
   422 1523  755 1096  746  411   45  807  111]]	errs: 37	avg_acc: 0.0640	sec/iter: 36.3644
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18  107  179   18  107  226
    18  244   18   19   18  244  179   18  107  317   18   19   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 34	avg_acc: 0.0639	sec/iter: 36.3312
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  112   85  225   18
   225   18  225   18  225   18  225   18  244  431   45  268   63    6
   107  109   29   45 1230  196  108   45 2667]], shape=(1, 37), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 36	avg_acc: 0.0638	sec/iter: 44.5290
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  107  179   18  107  317  225
    18  225   18   19   18  107  179   18  107  191  708   18  225   18
   244  431 2667]], shape=(1, 31), dtype=int64)	labels: [[ 316  179   60   61  598    7  191   74  984 2113  272   32 1300 1747
  1366  434  871  842  679  342   19   67  192  371  297   62   84 1236
  1237]]	errs: 28	avg_acc: 0.0637	sec/iter: 37.4621
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  225   18  225   18  225   18  107  243  438  254
    45  287  238   56  130  297  107  109  317   18  225   18  107  191
   225   18  244   18  244   18  244  196 2667]], shape=(1, 37), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 35	avg_acc: 0.0637	sec/iter: 41.7195
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  107  243   56  244  196  268  694  107  191  225   18  107
    73  244   18  107  191   15 2667]], shape=(1, 35), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 34	avg_acc: 0.0636	sec/iter: 37.7207
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18    7  243
   254   45  287   48    6  708  222  254   87  428   87  222  254  105
    31  107  108   45  357 2667]], shape=(1, 34), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 32	avg_acc: 0.0636	sec/iter: 37.8947
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  317  225   18  107  243  438  254   45  903
    37  210   87  428    6   46   32  187  130  107  824  892  238  208
     6  107  109   45  176 2667]], shape=(1, 34), dtype=int64)	labels: [[ 349  610   28  415  428 1243  252  598  296  523  187  845  348  266
    87  428  252  357  330 1863   45  586   42  269  268 1295 1947  447
   656 1447   45  171 2442]]	errs: 32	avg_acc: 0.0636	sec/iter: 38.7484
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  317  225   18  225   18  225   18  225   18
   225   18  107  243  113  133 1069   19   18  107  243  489  893  194
   187  254   45  310  585 2667]], shape=(1, 34), dtype=int64)	labels: [[1399 1307   37  209  187  196  492 1119  359   37  196 1300  305  359
   359   37  196 1300  880  439   37  880 1036 1480   63  108  826  827
   202 1780   37]]	errs: 33	avg_acc: 0.0634	sec/iter: 39.2554
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109    8  107  109  357  237   56  130  297   45  107
   109  179   18  107  109  179  540   45  107  109  317   22 2667]], shape=(1, 27), dtype=int64)	labels: [[  72 1134  215  302  516   71   72  105  794   45   13 1538  473 1762
  1279  857   56  881   58 1055 1031   20   81   82   90  212  808  254
   726  889]]	errs: 30	avg_acc: 0.0634	sec/iter: 38.8023
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107   18  225   18  225   18
   225   18  225   18  107  109  317   18  244   18  107  109   29  598
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 32	avg_acc: 0.0633	sec/iter: 36.4934
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  107  243  113  187   56  254   45  903   37
   210    4   87   22  187  107   73  107  191  225   18  107  179   45
   212  187   31 2667]], shape=(1, 32), dtype=int64)	labels: [[ 403  469  178   52  537 1186  857  600  187  233 1251 1186  857  203
   275  706  598  272   11   74  121 1586   98   73  244  191  163 1422
   107  179 1825 1336]]	errs: 29	avg_acc: 0.0634	sec/iter: 38.9924
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222  254  168   32  187  254
   168   32  187  254  168   32  187  876  415  323  130  297    6  538
   508  107   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 32	avg_acc: 0.0633	sec/iter: 38.5550
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  438  254
    63  497  187  254   45  301 1958  207  208  893  194  187  254   45
   120  283  645 2667]], shape=(1, 32), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 34	avg_acc: 0.0632	sec/iter: 36.0492
INFO:absl:predictions: tf.Tensor(
[[ 130  602   62   63  497   87  140   45  337  917  420  238  222  254
   238  222  254  238  222  254  238   87  234  236  238  346  508  107
   985   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 578  143  130  107  952   39 1123 1340  183   45  513  524   16  137
   166   28  208    6  264  908  921  970  328  208    6 2029  176  203
   547  441]]	errs: 30	avg_acc: 0.0632	sec/iter: 37.8455
INFO:absl:predictions: tf.Tensor(
[[ 167  168  315  316  179   18  107  317   18  107  243  438  254   63
   108  316  254  168   87  815  208  893  194  357  108   45  357  237
   238  177    6  357 2667]], shape=(1, 33), dtype=int64)	labels: [[ 167  168  315  903   37   72  204   46  315  133 1069  233   72 2397
   487   37  566 1247  993  143  748   45 2397  357 1132  344  357   91
   523  819 1217 1261  100  687]]	errs: 29	avg_acc: 0.0633	sec/iter: 37.4375
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18   19   18  179    7  317
    18  107  109  317   18   19   18  244   18  244   18   19   18   19
   109  357 2667]], shape=(1, 31), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 34	avg_acc: 0.0632	sec/iter: 36.6813
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   18  107  317   18  225   18
   244  317   19   18  107   73   19   18  244   18  107  317   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 33	avg_acc: 0.0633	sec/iter: 35.5857
INFO:absl:predictions: tf.Tensor(
[[ 130  109  317   18  107  243  438  420  498  208  254  168   32  187
    31  107  109   29  598  203  254  168  238  346  508  187  167  168
   238   87  234 2667]], shape=(1, 32), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 31	avg_acc: 0.0632	sec/iter: 36.5686
INFO:absl:predictions: tf.Tensor(
[[ 167  168   32  187   31  130  297   45  630  187   31  107  179   45
   254  238  222  254  238  222  254  168  107  191   19   18  107   93
   137   31  107   93  137 2667]], shape=(1, 34), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0631	sec/iter: 38.1209
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   19   18  107  317   18  107  296   56  130
   297   45  243   18  107  109  317   18  107  109  317   18  225   18
   225   18  107  109 2667]], shape=(1, 33), dtype=int64)	labels: [[ 583 2224  208 1500  303  143  103  606  208  208 1500 1120 1299  600
   701   45  583 2224  208 1500  357   54  414 1181 1087  789 1257  538
     6 1103  208 1500  357]]	errs: 32	avg_acc: 0.0631	sec/iter: 35.0646
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18    7  317   18  107  109  317   18  107  243   56
   254   45  284  645  237  675  374   18  244  179   18   19   18  244
   109  317  137   45  310  585 2667]], shape=(1, 35), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 35	avg_acc: 0.0631	sec/iter: 40.8853
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  225   18  225   18   19   18  107  243
   113  137 2667]], shape=(1, 31), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 31	avg_acc: 0.0632	sec/iter: 39.8782
INFO:absl:predictions: tf.Tensor(
[[ 346  222   32  187  254   45  222    6  107  317   18  107   20   45
   357  237  238  222  107   73  244  179   18  244   18  107  109   45
   337   12 2667]], shape=(1, 31), dtype=int64)	labels: [[ 203 1217  107  582    6  571 1275  571  372   45  528   33  362  557
   691 2431  415  107   29  221  566 1151  721  252  283   48 1112  598
   247 1334   45  383  296]]	errs: 32	avg_acc: 0.0631	sec/iter: 38.5589
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  105   31  130  297   45  630  268   32  187
   254  238   87  428   87  344    6  254  238  222  254  168  238  222
   254   87  346  508  187   31 2667]], shape=(1, 35), dtype=int64)	labels: [[1557  428  284  161   85 1936  391 1577  357  676 2659  268  458   63
   286  157 1765  645   47 1697  175  110   87  501  267  458   63 1624
    87  346  344]]	errs: 31	avg_acc: 0.0630	sec/iter: 39.0767
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18  225   18  107  243  438
   254   45  243  113  137  892 1103   31   18  179   18  107  317   18
   225   18   11   18   15   18    7    8   52 2667]], shape=(1, 38), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 44	avg_acc: 0.0630	sec/iter: 44.8786
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   18  107  109  317  143  243  254   45  287   48    6
   254  238   87  234  917   31 1017   87  234   45  287  238    6  262
   316  254 2667]], shape=(1, 31), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 33	avg_acc: 0.0630	sec/iter: 37.0363
INFO:absl:predictions: tf.Tensor(
[[  56  107  179   18  107  317  225   18  107  243  438  254   63  108
   238  187  254   63  108   45  268  694  254  168  238  222  542   45
   542  916 2667]], shape=(1, 31), dtype=int64)	labels: [[ 130  297   45 1275  201  140  590  586  323  161  269  238  498  612
  1572  296  417 1151  140  244  194  107  479 1148  731   45 1257  970]]	errs: 29	avg_acc: 0.0629	sec/iter: 35.9623
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  225   18
   225   18  225   18  225   18  244  431   45  120  283  645  238  222
     6   45  187   45  120 2667]], shape=(1, 34), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0629	sec/iter: 40.5476
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107   20   45  107  109  317   18  225   18  107  582   45
   267  268    6   18  107  191   15   18  244   18  244   18  107  243
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 167  284  115 1496 1699  658  160  694   45  694   42  671   46   42
   162 2068  687  194  237  498  208 1568  504  304  687  194  116   62
   346  508  160   62 1616  233]]	errs: 32	avg_acc: 0.0629	sec/iter: 38.6061
INFO:absl:predictions: tf.Tensor(
[[ 107  226  179   18  107  317   19   18  107  243  113   56  130  297
    87 1209  225   18  225   18  225   18  225   18   19   18   67  192
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 332 1794  893  122  498  908  554  454   94   56 1017 1212   45 1897
   885 1455 1016  165 1369  447  132 2019  841  167  935 1129  132 2407
    56 1857  526 1757]]	errs: 32	avg_acc: 0.0628	sec/iter: 37.1412
INFO:absl:predictions: tf.Tensor(
[[ 130  107  226  226  225  179   18  107  179  137   31  107  109  317
    18  107  317   19   18  244   18  107  109  317   19   18   67  192
    45  357 2667]], shape=(1, 31), dtype=int64)	labels: [[ 629  830  107  226  226    9  179  511  899 1445  122  210    4  750
   708    6  190   32  753  362   87  190   32  753    6  190   32  753
   442  487    6  176  233  336]]	errs: 30	avg_acc: 0.0629	sec/iter: 34.2741
INFO:absl:predictions: tf.Tensor(
[[ 107  109  881   45  222  254   87   72   31  107  296   45   56  254
   238   56  130  297    6  107  109  317  143   31   18  107  109  108
   316  254  266  633   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 205  489   45  649  610 1634  901  346 1178 1773  107  179   45 1401
   434  817  584  268   56  107  296  210 2537  784  323   20  238   87
   234  391  112   37 2310 1835]]	errs: 32	avg_acc: 0.0629	sec/iter: 38.9940
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  225   18  107  243
   212  287  238  187  254  168  137  105  187   31  167  168   45  355
   694 2667]], shape=(1, 30), dtype=int64)	labels: [[ 826  827  195  222 1019 1302  975  606  208    4 1009  583  770  137
   623  269  107  212  287  238  187 1019 1302  975  922  674   31  196
   817   45  266  195  286  234]]	errs: 28	avg_acc: 0.0630	sec/iter: 36.7946
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  489  225   18  225   18  225   18  225
    18  225   18  225   18  107  109  105  187  254  168  238  208  254
    45  310  585 2667]], shape=(1, 32), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 33	avg_acc: 0.0630	sec/iter: 36.2435
INFO:absl:predictions: tf.Tensor(
[[  56   63  108    6  357   45  107  109   29  297   45  196  107  109
   357  237  238  208  242   56  130  109   38   37   45  107  109   29
   598  357  108 2667]], shape=(1, 32), dtype=int64)	labels: [[ 404  565 1393 1758 1070  187  163  684  704  196  601  328  310  208
   620  621 1804   52  163  684   45  149  156  238  704 1867  601  113
    97  328 1331 1883 1113  377]]	errs: 34	avg_acc: 0.0629	sec/iter: 36.8418
INFO:absl:predictions: tf.Tensor(
[[ 339  179   18  107  317  225   18   19   18  225   18  107  191  244
    18   19   18  107  191   19   18   19   18  107  191  225   18  225
    18   19  191  708  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0631	sec/iter: 38.6354
INFO:absl:predictions: tf.Tensor(
[[ 167  168   32  187   31  107  317  343  254  168   32  187  876  877
   238   87  222   22  238    6  107  191   19   18  244   18  107  985
    31 2667]], shape=(1, 30), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 29	avg_acc: 0.0631	sec/iter: 34.8298
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179  107  317   18  225   18  244   18  225   18
   244   18  244   18   19   18   11   18  244   18  244   18  107  191
    19   18  244   18  244   18 2667]], shape=(1, 35), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0631	sec/iter: 41.4446
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  109  317   19   18  107  109
   317   18  107  109  317   18  107  109  317   18  107  109   63  108
    45  120  283  645 2667]], shape=(1, 33), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 36	avg_acc: 0.0630	sec/iter: 39.9171
INFO:absl:predictions: tf.Tensor(
[[ 404    4   84  146  203  107  582   45  268  720  224   37  210  107
   582  107  582  107  824  892  893  194  357   29  297   45  107  985
    31  107  985   31 2667]], shape=(1, 33), dtype=int64)	labels: [[1090 2329 1474  537  203  598  842   45  296  441 1120 1299    6  190
   362 1490  362  130  107 1532  565   45  243  204  891 1136  202 1366
   434  243 1275 1863  985  831  157]]	errs: 31	avg_acc: 0.0631	sec/iter: 38.4459
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  179  225  317   18   19   18    7   18  225   18
   225  317   18  107  179   18  244   18  107  226   18  244   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 26	avg_acc: 0.0633	sec/iter: 38.3904
INFO:absl:predictions: tf.Tensor(
[[   7  317   18  225   18  225   18  107  243  113  187   31  107  235
   403  274  187   19  109  317   18  107   73   19   18  225   18  107
   243   45  268 2667]], shape=(1, 32), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 36	avg_acc: 0.0633	sec/iter: 37.7471
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  225   18  225   18  107  191
   244   18   19   18  225   18  225   18    7  191   15   18   15   18
   225   18  225   18  107  191  708 2667]], shape=(1, 36), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0635	sec/iter: 41.4874
INFO:absl:predictions: tf.Tensor(
[[ 107  226  225   18  107  179    7   18  107  317  225   18  107  109
   317   18  107  109  317   19   18  107  109  317   18  107  109    7
   196 2667]], shape=(1, 30), dtype=int64)	labels: [[ 274  222 1267  940   22 2426  576  636  140 1275  671  517  323  391
   986  417 1332 1196   12  567   72  107  474  515  274  443  428  893
    13 1731  196  122]]	errs: 30	avg_acc: 0.0635	sec/iter: 37.2830
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  130  297   45  222  167  168   45  196   32  187
   254   45  357  238  222  107  317   22   45  120  283  222  254  168
   238  222  107   93  137 2667]], shape=(1, 34), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 34	avg_acc: 0.0635	sec/iter: 42.2973
INFO:absl:predictions: tf.Tensor(
[[ 254   45  222    6  254  168  107  109  108   45  903   20   31  167
    45   87   72   31  254   87   72   31  130  109  420  238   87   72
    31  254   45   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 30	avg_acc: 0.0635	sec/iter: 39.2741
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179   18  107  317  225   18  317   18  244   18  225
    18  225   18   19   18  244  179   18  244   18  244   18  244   18
   244  179  137 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 29	avg_acc: 0.0637	sec/iter: 41.2055
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109  346  508  187   31  107  109  876  877   45  357
   238  222  254  238  208    6  107  109  187  107  602 2667]], shape=(1, 26), dtype=int64)	labels: [[ 167  142  415    6 1286 2182   45 1216  830 1216  830 2177  246  357
   479 2177  246  876  877 2177  246 1257  970  338 2178  458   33 2177
   246  107  985]]	errs: 27	avg_acc: 0.0638	sec/iter: 31.9449
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317  225   18  107  243  438  254
    63  497   56  280   48  208  893  194  357  237   56  254   45  103
   254  168 2667]], shape=(1, 31), dtype=int64)	labels: [[ 611  284  357    6  511  208  242  994  284  357 1170  401  312  664
   480  284  379  994  284  357    6  511  208  242  611  284  357  892
  1103  114  312  664  480  284  379]]	errs: 33	avg_acc: 0.0638	sec/iter: 36.9289
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  179   18  107  317   18   19   18  107  109  317
    45  243  113  137   72   31  254   87  234   87  234  208  137   72
    31  107  109   87  234   87  428 2667]], shape=(1, 36), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 39	avg_acc: 0.0639	sec/iter: 42.0305
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  229  107  317  225  317   18  107  243  438  254   63
   108  238  187  876  877   45  225   18  107  191  244   18  107  191
   244   18  107  191   67  192 2667]], shape=(1, 35), dtype=int64)	labels: [[ 444  417  222 1040 1180 1998  176   45  107  537  417   29   32  267
    56  986  987  417  326  362  700 1610  203  452 1502   22   45 1328
   242  444  417   48    6  247  417  269 1271]]	errs: 37	avg_acc: 0.0638	sec/iter: 42.9039
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  113   45  120   56  254  168  107   20
   143  107  582   45  287  187  876  877   45  187  254  168  238  208
    31  107   93  137 2667]], shape=(1, 33), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 31	avg_acc: 0.0638	sec/iter: 38.7879
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  243   18  225
    18  225   18  225   18  225   18  225   18  225   18  225   18  107
   243 2667]], shape=(1, 30), dtype=int64)	labels: [[ 903  366  216  848  642  409  411 1503  690  812  195    6 2173  163
   164  374  243  722  110  105 1756    4  115 1401 1217  175  305  812
   190  175  204 1414]]	errs: 32	avg_acc: 0.0637	sec/iter: 37.8236
INFO:absl:predictions: tf.Tensor(
[[ 254  168  130  297   45  107  179  222  107  109  317   45   46  420
   238   87   72   31  167  168   22   45  120  222  254   87  222  254
    45  120  283   31 2667]], shape=(1, 33), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 40	avg_acc: 0.0638	sec/iter: 38.7936
INFO:absl:predictions: tf.Tensor(
[[ 254   45    6  107  179  107  317   18  225   18  244   18  109  317
    18  109  317   18  107  109  357  237  405  406   45  287  771  254
   168   45 2667]], shape=(1, 31), dtype=int64)	labels: [[ 244  317   45  107  296   20  196  434   58  642   22 1953  893  501
   708  434  610  346   48  177    6  649  610 1788  498  633  107  784
   784  828    4  470]]	errs: 31	avg_acc: 0.0637	sec/iter: 44.5925
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225   18    7  243  113  137  892  262  903   37
   210    4   84  146  203  357   29  598  447   98  109  105   31  167
    45  305   45  357 2667]], shape=(1, 33), dtype=int64)	labels: [[2470  243   45   13  554  220   15  191   89  357  815  666 1272  574
   266    6  225  191  708 1647  197  357 1337  344 1300  109 1271 1082
   127 1086   45 1026  238  177    6]]	errs: 33	avg_acc: 0.0637	sec/iter: 40.7702
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  357  238  222  254  168   45
   357  108   45  222  254  168   45  469   60  222  254  168  238  222
   254   45  799  120  283   45  120   31 2667]], shape=(1, 37), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 42	avg_acc: 0.0637	sec/iter: 47.0636
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  254  255  208  120   56  254  168  107
   317   45  120   56  130  297  107  582  107  824  508  107  109   29
    45  107  109  187   31  316 2667]], shape=(1, 35), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 33	avg_acc: 0.0637	sec/iter: 42.4800
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  107  179   18  107  317   18  225   18   15   18  107
   109  317   18   19   18   19   18  244   18  244   18  107   18   19
    18   19  109 2667]], shape=(1, 32), dtype=int64)	labels: [[  46   32  141 2658  379  254  229  195  858   31  323  738   85  179
  1594 1573  274   42  156  203  575  113  323  121  120   45 1610  223
   828  828  362   30  189  831  832]]	errs: 35	avg_acc: 0.0636	sec/iter: 39.8600
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  254  168  130  297   45  614  630  107  582   45
   349  582  254  168  107  108   45  107  109   29   22   45  120  121
   111  238   87   72   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 32	avg_acc: 0.0636	sec/iter: 41.3169
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   45  243  420   45  305    6  254  107  108   45  287
    48    6  254   45  287   20   31  876  254  108  238  222  254  168
   238  222  254 2667]], shape=(1, 32), dtype=int64)	labels: [[ 225 1953  115  708  115  379 2487  268   45  427  554  862  790  391
   379 2487  268  427  554   45  957 2086 2085  352  391  831 1041   45
   427  554  183  352]]	errs: 31	avg_acc: 0.0635	sec/iter: 39.4312
INFO:absl:predictions: tf.Tensor(
[[  18  107  179  137   31  254   45  903   37   22   31  107  317  143
    31  130  297   45  799  365   87  234   31  130  297   87  346  508
   187  254   45  268 2667]], shape=(1, 33), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 34	avg_acc: 0.0635	sec/iter: 37.9955
INFO:absl:predictions: tf.Tensor(
[[ 130  582   45   87  222  130  297  107  317   45    6   45  107  109
   317   22   45  243  238   87  428   87  428   87  428   87  428    6
    18  107  109  705 2667]], shape=(1, 33), dtype=int64)	labels: [[ 130  537  178   52  828  828  502  922  190  542  708   45 1234  194
  1159  105  704 1937  831   39  542  271  186  679  542  708   45 1234
   194 1159  105  704 1937  831   39  542  196]]	errs: 35	avg_acc: 0.0635	sec/iter: 42.5823
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297   45  222  254  168   32  187  254
   168   32  187  254  168  238  208    6  107  109  222    6  538  508
   107  109  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 830  420  105  172  830  337  105 2038   45 1685  554  454 1533 1533
   935  935    4  163    4 1508  498  208  697  420  910 1199  298  222
     6  242  897   54]]	errs: 30	avg_acc: 0.0635	sec/iter: 39.8799
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  107  108  187  254  168  238   56  130  297   45
   254  238  222  107  109  420   45  107  582   45  107  109   29  598
     6   18  244   18  244   18  244   18  244  109 2667]], shape=(1, 39), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 43	avg_acc: 0.0635	sec/iter: 45.8557
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  225   18  225  317  225   18  225   18  225   18  225
    18  225   18  225   18  244  191  244   18  244   18  244   18  107
   109  179   18  107  109  357 2667]], shape=(1, 35), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 30	avg_acc: 0.0636	sec/iter: 42.9839
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  179  225  317   18   19  243   18    7   18  225   18
   225  317   18  225   18  244   18  225   18  244   18  244   18  107
    73  708  916 2667]], shape=(1, 32), dtype=int64)	labels: [[ 107  226  226   19  179  225  317  225   18   19  243   22 1509    7
  1679  216  160 1202   59 1202  623  371  244  220  963  108 1732  996
   244  357  893  278 2224 1274 1826  624]]	errs: 25	avg_acc: 0.0639	sec/iter: 40.8564
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243  438  254   45  287  238   87  815  208
   254  168  107  109  508  107  109  357  237  238  208  254  168  238
   208  254 2667]], shape=(1, 31), dtype=int64)	labels: [[1279 2324 1281  292   79 1398  956 1255  220  465  620  222   58  666
    20  107  830  571  152   45  843 1095  203  635   68  633  107  835
   843   68  432  666]]	errs: 32	avg_acc: 0.0638	sec/iter: 37.4278
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107  243  438  254   63  497
   187  254   45  187  254  168  107  108   45  196  708  222  542  137
   542  137  542  137  542  137  542  137  542   87  542  137  542 2667]], shape=(1, 42), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 41	avg_acc: 0.0636	sec/iter: 50.8670
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187  222   19   18  225   18    7  243  438  254   63
   108   45  357  508  187  254  168   56  130  297   87  222  254  168
   238  222  254   45  614  630  268 2667]], shape=(1, 36), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 38	avg_acc: 0.0636	sec/iter: 42.0106
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  238  222  268   63  108  238  222  107  582   45
   268  238  222  254  168  238  222    4   45  107  191   67  192 2667]], shape=(1, 28), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 34	avg_acc: 0.0635	sec/iter: 36.3621
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  226  225  179  107  317   18  107  317   18   19   18
   107  191   19   18  107  226   18  244   18  244   18  107   18  107
   243  113   63 2667]], shape=(1, 32), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0635	sec/iter: 37.5918
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  113   56   18  225   18
   225   18  225   18  107  336  103  254  268   18  107  109   63  108
    45   63  108   45  211  203   63 2667]], shape=(1, 36), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 36	avg_acc: 0.0634	sec/iter: 43.4321
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  243  438  254  168   32  187   31  107  317
    45  317  225   18  225   18  225   18  225   18   19   18  225   18
    19   18   15  191   67  192 2667]], shape=(1, 35), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 34	avg_acc: 0.0633	sec/iter: 42.3894
INFO:absl:predictions: tf.Tensor(
[[ 254   45  222    6  109  317  143  243  113  137   45  287   87  428
    87  428   87  234  917  238  222  254  168  238   56  130  297   45
   917   31 2667]], shape=(1, 31), dtype=int64)	labels: [[ 254  414  287    6  585 1308   99  803  266  203  167  375  889  140
    31 1024  998 1505  109  307 1696 1691 1734  238  194  254 1300  923
   420  365 1115  840  633   31]]	errs: 29	avg_acc: 0.0633	sec/iter: 37.9183
INFO:absl:predictions: tf.Tensor(
[[  56  107  109  317   45  243  113  107  243  113  137  542   45  542
   137  542   45  542  137  542   13  542  137  542  137  542  137  542
   137  542  137  542  137 2667]], shape=(1, 34), dtype=int64)	labels: [[ 128  635  346  803  323 1257  233 2014  542 1130  542  708  542 1130
   542  324  542 1130  542  161  130  903 1300  447  349  903  130  794
   892  447  349  794]]	errs: 28	avg_acc: 0.0634	sec/iter: 41.1949
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317  225   18  107  109  317
    18  225   18  225   18   19   18  244   18  244   18  107  109   63
   497   87  234 2667]], shape=(1, 32), dtype=int64)	labels: [[ 133 1069  130  765 1091  236 1803 1801  690  143   89  688 1004   45
  1036 1086  403  231  210 1400 1003 1163   54  323  231  143   89 1353
    63   45 1036 1086  403 1803   63  240 1163]]	errs: 36	avg_acc: 0.0634	sec/iter: 38.5929
INFO:absl:predictions: tf.Tensor(
[[ 107  226    7  317  225   18  225   18  225   18  107  243  438  254
    63  108   45  301  537  502  115  357  237  675  374   18   19   18
   107  179    6   18  244  357   45  301  537 2667]], shape=(1, 38), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 37	avg_acc: 0.0633	sec/iter: 44.5800
INFO:absl:predictions: tf.Tensor(
[[ 167   45    6  254  168  107  109   45  287  167  168   45  196   45
    48    6   45   72   31  107 1025  917  238   87   72   31  876  877
    45  120  283  645  323   22  316 2667]], shape=(1, 36), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 33	avg_acc: 0.0633	sec/iter: 43.9572
INFO:absl:predictions: tf.Tensor(
[[ 404    4  255    6  107  109  179   18  107  109  317   20  254   45
    20  254  238   56  130  582  238  208  242  107  109   56  254  168
  2667]], shape=(1, 29), dtype=int64)	labels: [[ 266   56  349 1366 2471 1857  474  124   13   13   20   20 1245  447
   339  784  799  238    6  847 1269 1149  238    6 1247  859   45  784
   653]]	errs: 27	avg_acc: 0.0633	sec/iter: 32.7964
INFO:absl:predictions: tf.Tensor(
[[   6  107  109    8   19   18   19   18  107  109  561   45  469  179
   708  222  254  168  255  222  196  108   45  120  283  222    4   45
   222  254   45  357 2667]], shape=(1, 33), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 35	avg_acc: 0.0634	sec/iter: 41.8821
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  107  243  438  254   45  903
    20  254  108  346  508  187  254  168  238  346  187   31  107  108
    45  107  109   30 2667]], shape=(1, 33), dtype=int64)	labels: [[   6   45  856  237  187 1137 1297 1318    4  143  326 2224  480  672
   508  602 1448  825 2017 1418  630 1780 2223   31  163  164  238 2223
    31  474 1510  191 1623]]	errs: 33	avg_acc: 0.0633	sec/iter: 41.0182
INFO:absl:predictions: tf.Tensor(
[[ 648   72   31  315  130  582   45   72   31  107  336   87   72   31
   254  238  208    6  357  508  187  254   87  234  694  107  824  892
   262   31  107   93  137 2667]], shape=(1, 34), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0632	sec/iter: 41.7491
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317  225   18  225   18  225   18  225   18  225   18  225
    18  225   18  107  191   19   18  244   18  244   18  225   18  244
   196   45  799 2667]], shape=(1, 32), dtype=int64)	labels: [[ 190  115 1383  449 1403  346  508  115  299  836  862 1152  154  836
   993  480  672  315  614  112  824  892  806   72  583  480  233  585
   189   30  122   72  122  284 2245]]	errs: 35	avg_acc: 0.0632	sec/iter: 39.3999
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  225   18    7   18   19   18  225
    18  107  243 1209   56  187  254   63  210  391  267  268   63  203
    45  268   63  497 2667]], shape=(1, 33), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 36	avg_acc: 0.0631	sec/iter: 41.3939
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  225   18  225   18  225   18  225   18
   225   18  107  243   56  130  297  107  179   18  107  317   18  107
   243  113  137 2667]], shape=(1, 32), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 34	avg_acc: 0.0630	sec/iter: 40.8669
INFO:absl:predictions: tf.Tensor(
[[  87  254  168  238  222  254  168   32  187  254  168   32  187  254
   168  238   87  815  208  238  208  254  168  238  346  508  107   93
   137   31 2667]], shape=(1, 31), dtype=int64)	labels: [[  63  497  231  237  281   63  497  716 1547  575   85 1801  603   61
  1332   84   84   85  708 1371  261  733  238  107  212  489  828 1011
   160   71  830  357   61 1283 1577]]	errs: 34	avg_acc: 0.0630	sec/iter: 42.5625
INFO:absl:predictions: tf.Tensor(
[[ 305  199  437  225  317  225   18  225   18  225   18  225   18  225
    18  225   18  107  243  438  254   63  108  187  708  916  225   18
   244  191  244   18  244   18  244   73  244   18  244   18  107  243
  2667]], shape=(1, 43), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 35	avg_acc: 0.0629	sec/iter: 53.4067
INFO:absl:predictions: tf.Tensor(
[[ 174  222  167  168   45   48    6  107   20   45  107   20  254   45
   120   45  357  238  208    6  109  357  238  222  107 1025 2667]], shape=(1, 27), dtype=int64)	labels: [[1329 1059  719  220   11   18  179  540    7  191  197  525    6  791
   253   15  191  708   99  323  295  244  191  244   18  708   60  197
   815  525    6  791  253   18  107   99]]	errs: 34	avg_acc: 0.0629	sec/iter: 39.0524
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  225   18  225   18  107  243  438  254
    63  497  187  254   45  287  187  254  168  266  222  167   45  303
    30 2667]], shape=(1, 30), dtype=int64)	labels: [[ 362  404  212  287  484  247 1445   12   63 1577  708  199 2582   54
  1691  770 1427  405 1034  484  964  478  138   70  212 1353  452  243
    52 1019  690 2218 1217 1764  138]]	errs: 35	avg_acc: 0.0629	sec/iter: 36.0691
INFO:absl:predictions: tf.Tensor(
[[ 315  502  115  130  582   45  212  582  316  179  708  222  254  238
    87  222  167  168   45   54  115   45  115  238  222    6  115    8
   318  238  222  167   45   87  428 2667]], shape=(1, 36), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 43	avg_acc: 0.0628	sec/iter: 44.8590
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  130  297   45  222  167  168   45  120 1047   87
    45  357  238  187  167  168  238  222   87  428   87  222  254   45
   120  121  143 2667]], shape=(1, 32), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0628	sec/iter: 39.7421
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317   18  225   18  225   18  225   18  225   18
   225   18  107  431   45  107  179   17   18  225   18  225   18  225
    18  244  431   45 2667]], shape=(1, 33), dtype=int64)	labels: [[  60   61  637  233  252 2053  325  873  252  592  405  903  537  635
  2130  903  598   77  315  379  107  537  252  808 1181   29  252  589
   120 1845   60  195 1141  893]]	errs: 33	avg_acc: 0.0627	sec/iter: 42.0987
INFO:absl:predictions: tf.Tensor(
[[ 174    6  107  109  317   18   19   18  225   18  107  243  438  254
    45  271  287  187  876  877   45  187  876  877   87  346  508  107
   109   30 2667]], shape=(1, 31), dtype=int64)	labels: [[ 379  357 2411  630 1249   18  244  602   20  175  103 1181 1087 1300
  1601  433   98   89  441  294  357  851 1885 1249 1568  175  244  602
   433  107   89  441]]	errs: 30	avg_acc: 0.0627	sec/iter: 35.6783
INFO:absl:predictions: tf.Tensor(
[[  56   18  225   18  107  179   18  107  317   19   18  107  243   18
   225   18  225   18  107  179   18  107   73  244   18  244   18  107
   191  244   18  244  431   45  357 2667]], shape=(1, 36), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 38	avg_acc: 0.0627	sec/iter: 45.5089
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  243  438  254   63  497  187
   254   63  497  187  254   63  497  187  876  877   45  120  283   45
   120   31  107  109  357  237 2667]], shape=(1, 35), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 35	avg_acc: 0.0627	sec/iter: 42.7860
INFO:absl:predictions: tf.Tensor(
[[ 167  222  107  108  187   31  107  109   29   45   31  107  582  420
   238   87  815  337  238  187  876  877  238  222  254  238  222  254
   168  238   87  234 2667]], shape=(1, 33), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 43	avg_acc: 0.0627	sec/iter: 39.3926
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  179   18  107  317   18  107  317   18  107  317
    18  225   18  107  243  254   63  210   19   18  107   73    7  191
   244   18  225   18  107 2667]], shape=(1, 34), dtype=int64)	labels: [[ 126   17  295  179  244  317   62   37 1586  181 1086  583 2224 1342
   195  211 2395  115  804    3  834  880   19   73    7  191  244   18
    67  192  115  274 2294  285  195  497]]	errs: 31	avg_acc: 0.0628	sec/iter: 42.2267
INFO:absl:predictions: tf.Tensor(
[[   7  317  225   18  225  317  225   18  225   18  225   18  225   18
   225   18  225   18   19   18   19   18  225   18   19   18  225   18
    19   18  244   18  244  243 2667]], shape=(1, 35), dtype=int64)	labels: [[  19  317  225   18   11  243  243  224  142  770  642  917 1647 1019
   215 1837  642  917 1647 2392  224  514  193 1000  394  146  212  243
   224  629  405   31 1261  977  138]]	errs: 32	avg_acc: 0.0628	sec/iter: 44.1203
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  130  297   45  120  283  645  238   87   22   45
   222  254  238  222  254  168   45  107  109   29  297  238  222  254
    45  107   93  137  105   31 2667]], shape=(1, 35), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 43	avg_acc: 0.0628	sec/iter: 44.4218
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  107  179   18  107  317   19   18  107  317   18
   225   18   15   18   19   18  107  109  179   18  107  109  317   18
    15   18  244   18  244   18    7   63 2667]], shape=(1, 37), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0627	sec/iter: 48.6571
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317  225   18  107  317   18  107  243   56   18
   225   18  225   18  225   18  225   18  107  109  268   63  486  658
   303  629    6   18  107   18    7  191 2667]], shape=(1, 37), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 39	avg_acc: 0.0628	sec/iter: 47.3173
INFO:absl:predictions: tf.Tensor(
[[ 648   72   31  166   71  447  107  287  167  168   45  304  238   87
   234   45  357  238   87   72   31  107  582  420  323  738   87   72
    31   18  107   93  137 2667]], shape=(1, 34), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0627	sec/iter: 46.5084
INFO:absl:predictions: tf.Tensor(
[[ 167  222  107  226  226  225   18  225   18  225   18  107  179  266
    87  428  187  254   87  815  208  242   45  107  109   29  297    6
   107  109    6  107  109   29   22  316 2667]], shape=(1, 37), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 43	avg_acc: 0.0627	sec/iter: 47.4824
INFO:absl:predictions: tf.Tensor(
[[ 130  107  179   45  254  168   45  305  107  108  316  254  238   87
  1209   31  254   87 1209   31  254  255    6  254   45  417  529   29
    45  417  529   45  799 2667]], shape=(1, 34), dtype=int64)	labels: [[  17  274 1818 1198  417  529   45    5  105   47  222 1198  542  280
   418  417  529  212  268   46  417  529  465  474  417  529 1240  822
   148  417  529  969   41   45  128  635]]	errs: 31	avg_acc: 0.0628	sec/iter: 44.1908
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  179   18  107  317  225   18  107  243  438  254   45
   287  238  222   22   45  268  694  108  238  222  315  268   63  108
   238   87  344    6  357 2667]], shape=(1, 34), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 38	avg_acc: 0.0628	sec/iter: 43.2777
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226    7  317  225   18  107  243  438  254   63  497  187
   254   87  222  254   63  497  187  268  391  267  222  267  238  222
     6   18  107  109   29  705 2667]], shape=(1, 35), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 38	avg_acc: 0.0627	sec/iter: 45.9248
INFO:absl:predictions: tf.Tensor(
[[   6  107  109  317   18   19   18  107  243   45  243  254  168  212
   287  187  254  168   56  187    4   45  287  187  167  168  137   31
  2667]], shape=(1, 29), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 35	avg_acc: 0.0627	sec/iter: 39.2917
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  107  243   56  254   45  903   20   31  254  168
    45  287  187   31  143   31  143  137   45  287  187  254  168  238
   222   31   45  610   45  187   31 2667]], shape=(1, 36), dtype=int64)	labels: [[   6  336   96    6  290   45  630  108  166  271  287 2020  561  561
  2466  344  937    4  165  142  415  626  137  534  760  534  760   45
   758 1182  372  349  222 1182 1055  534   45  137   31]]	errs: 35	avg_acc: 0.0628	sec/iter: 47.7170
INFO:absl:predictions: tf.Tensor(
[[ 254  168  238  222  108   45  357  237  238  222  254  168   45 1271
    45  120  283   45   72   31  167  168   87   72   31  254  168  238
   222  254   45  662  357 2667]], shape=(1, 34), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 42	avg_acc: 0.0628	sec/iter: 45.1464
INFO:absl:predictions: tf.Tensor(
[[ 107  226  226  226  225   18  107  179    7  179    7  107  179   18
   107  317   19   18  107   73   19   18  107  191  225   18  107  109
     7   18  107  191   19   18    7   18 2667]], shape=(1, 37), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0628	sec/iter: 48.6466
INFO:absl:predictions: tf.Tensor(
[[ 107  179   18  107  317  225   18  107  243  254  168  107  108   45
   287  266  658  120  121  120  283  645  237   56  254   63  497 2667]], shape=(1, 28), dtype=int64)	labels: [[ 903 1039    6  879   97 1787  268 1509  508  103  828  828  346  508
   908   72  610 1661  441 1943 1051  323  105   45  244  343  666 1121
  1271  187  334  666]]	errs: 32	avg_acc: 0.0627	sec/iter: 38.1388
INFO:absl:predictions: tf.Tensor(
[[ 339  179   18  107  317   19   18  107  191   19   18  107  191   19
    18   19   18  107  191  225   18  225   18   11   18   67  192 2667]], shape=(1, 28), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 31	avg_acc: 0.0629	sec/iter: 41.0052
INFO:absl:predictions: tf.Tensor(
[[ 339  109  317   18  107  191   19   18  107   18  107  191  244   18
    19   18  225   18  107  191   19   18  244   18  225   18  225   18
    19  109  357 2667]], shape=(1, 32), dtype=int64)	labels: [[ 566 1002  383 2044  547 1600  211  345   52  183 1738  293  575  107
   191  244   18    7  537  374  225  191 1373    7   67 2341  345   52
   566  285  488   14  225  191  225   18   11   67  708  192]]	errs: 32	avg_acc: 0.0631	sec/iter: 41.4884
INFO:absl:predictions: tf.Tensor(
[[ 316  179   18  107  317   18  107  317   18  225   18  225   18  225
    18  107  226  226   18   19   18  225   18  225   18  225   18  225
    18  225   18   19   18  244   18  225   18 2667]], shape=(1, 38), dtype=int64)	labels: [[ 296 1177  286   70  414  233  238  622 1209  130  107    6  190  287
   286   56  286   70 2294  374  405  178   31   61  248  451   70  566
   285  478  537   63  121 1143  182  121  111  120  452   18  375 1014
  2460]]	errs: 41	avg_acc: 0.0631	sec/iter: 50.5027
INFO:absl:predictions: tf.Tensor(
[[   7  317   18  225   18  225   18  107  243  438  254   63  108  187
   254   63  108    6  357  237  675  374  303   30  374  303  120   45
   614  630  187  268 2667]], shape=(1, 33), dtype=int64)	labels: [[1803    8 2331  257  740  292  690  994  667  411  945  233  403 1803
  2170  146  379 1763  502  115 1906    8   47 2331  257  740  451  945
   233  403  294    8  224  146  211  212  232  942]]	errs: 38	avg_acc: 0.0630	sec/iter: 44.1562
INFO:absl:predictions: tf.Tensor(
[[ 254  168  238  222  254  168  130  297   45  107   20  107   20   45
    20   45  107  109  317   22   45  469  323   87  428   87  234   45
   355 1138  107  109   87  234   45  120   31 2667]], shape=(1, 38), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 39	avg_acc: 0.0631	sec/iter: 52.2676
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243 1231  107   20   45  903   20
    45  187  107  109  357   45   72   31  167  168  212  582   45  355
  1138  107  109  357  614  630   45  208 2667]], shape=(1, 37), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 38	avg_acc: 0.0632	sec/iter: 52.8465
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  130  297   45  222  167  168   45  107  582   87
    45  357  238   56  357  238  222   22   45  120  283   31  107   93
   137   31  107   93  137   31 2667]], shape=(1, 35), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0632	sec/iter: 47.0009
INFO:absl:predictions: tf.Tensor(
[[ 254  168   32  187   31  130  297  107   20   31  107   20   45  254
    87  428   87   72   31  254   87  234   45  107  222  254  168  238
   222  254   87  222  254   45  120   31 2667]], shape=(1, 37), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 42	avg_acc: 0.0632	sec/iter: 53.4952
INFO:absl:predictions: tf.Tensor(
[[  56   18  107  179   18  107  317   19   18  225   18  107  243  254
    45  268  694   56   18  107  191  268  694   45   18  107  985   31
    18  107  191   31 2667]], shape=(1, 33), dtype=int64)	labels: [[  56  451   70 1867  149  268 1342  195   56  138 1191   22   54  508
   451   70  187  268  694   56  284  285   22   54  508 1728  497  187
   268  694  174  107  985  614  630  365  208 1386  357  316  696]]	errs: 34	avg_acc: 0.0633	sec/iter: 47.1006
INFO:absl:predictions: tf.Tensor(
[[  87  222  254  168  107  108   45  122  254  168  238  222  115  130
   297   45  107  582   45  107  109   29  598  357  238  222  254  168
   238  222  254   45   93  137 2667]], shape=(1, 35), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 44	avg_acc: 0.0632	sec/iter: 51.2243
INFO:absl:predictions: tf.Tensor(
[[ 167   45  317  225   18  225   18  107  243  113  137   31  107  582
    45  187   31  107  582    6   98 1025  917  107  824   72   31  107
   985    6  262   31   18  107 2667]], shape=(1, 35), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 34	avg_acc: 0.0632	sec/iter: 51.9079
INFO:absl:predictions: tf.Tensor(
[[ 167  168  137   31  130  297   45  222  167  168   45  120 1047   87
    45  357  238   56  187  876  877   45  355 1138  441  203  254  168
   107   93  137  105   31 2667]], shape=(1, 34), dtype=int64)	labels: [[ 665   45    4    5  301 1691  222   99  268   12  196 2423 2080  708
  1188 1324 1262  196  383  883 1489  632  759 2626 1566 1311  489 2654
    21  161 2574  271  323  918 2331]]	errs: 35	avg_acc: 0.0631	sec/iter: 53.0746
INFO:absl:predictions: tf.Tensor(
[[ 167    6  107  109  108   45  357  187  167  168  107  109   29  598
    45  107  109  876  877   45  107  109   29  598  107  109  317   18
   375   38  222  254   45  120  283  645 2667]], shape=(1, 37), dtype=int64)	labels: [[ 212  287  238  895  684   31  357  614  421  842  891 1270  202   35
    45  516  517  421  842  286  421  143   45  842  272 1616  843  891
  1270    6  190  274  527 1047  502  421  842  277  590 1448  375  303
  1456  630  115]]	errs: 42	avg_acc: 0.0631	sec/iter: 54.2551
INFO:absl:predictions: tf.Tensor(
[[ 107  109  317   18  225   18  107  243  438  112   85  265  196  107
   109  187   31   56  187   31  167   45  107  109  187  254   87  222
   254   45  187  254   87  234 2667]], shape=(1, 35), dtype=int64)	labels: [[ 830 1262  774  870   45  697  420  243 1231 1610 1189  447  428  908
    72 1047 1737 2067  137   45 2456 2456 1189  760 1189 1189  804  137
    45  707  222  107  109  695  264   87  234  166 1199   45 1023 1596
  1222 1281 1160]]	errs: 39	avg_acc: 0.0632	sec/iter: 52.9259
INFO:absl:decoding finished
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/alpha/guide/checkpoints#loading_mechanics for details.
[PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU'), PhysicalDevice(name='/physical_device:GPU:1', device_type='GPU')] [1]
Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
before filter by unk:30000
after filter by unk:30000
afiter filter by input length:29938
after filter by output length:29938
Model: "x_net"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         [(None, None, 40, 1)]     0         
_________________________________________________________________
conv2d (Conv2D)              (None, None, 20, 512)     4608      
_________________________________________________________________
batch_normalization (BatchNo (None, None, 20, 512)     2048      
_________________________________________________________________
tf_op_layer_Relu6 (TensorFlo [(None, None, 20, 512)]   0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, None, 10, 512)     2359296   
_________________________________________________________________
batch_normalization_1 (Batch (None, None, 10, 512)     2048      
_________________________________________________________________
tf_op_layer_Relu6_1 (TensorF [(None, None, 10, 512)]   0         
_________________________________________________________________
reshape (Reshape)            (None, None, 5120)        0         
_________________________________________________________________
dense (Dense)                (None, None, 512)         2621952   
_________________________________________________________________
positional_encoding (Positio (None, None, 512)         0         
_________________________________________________________________
dropout (Dropout)            (None, None, 512)         0         
=================================================================
Total params: 4,989,952
Trainable params: 4,987,904
Non-trainable params: 2,048
_________________________________________________________________
None
Model: "y_net"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_2 (InputLayer)         [(None, None)]            0         
_________________________________________________________________
embedding (Embedding)        (None, None, 512)         1366016   
_________________________________________________________________
positional_encoding_1 (Posit (None, None, 512)         0         
_________________________________________________________________
dropout_1 (Dropout)          (None, None, 512)         0         
=================================================================
Total params: 1,366,016
Trainable params: 1,366,016
Non-trainable params: 0
_________________________________________________________________
None
[1,0]<stderr>:INFO:absl:epoch: 0	loss: 222.1231	Accuracy: 0.0249	CTCAccuracy: 0.0000	

[1,0]<stderr>:INFO:absl:epoch: 1	loss: 134.1923	Accuracy: 0.2978	CTCAccuracy: 0.1588	

[1,0]<stderr>:INFO:absl:epoch: 2	loss: 72.5232	Accuracy: 0.8199	CTCAccuracy: 0.2669	

[1,0]<stderr>:INFO:absl:epoch: 3	loss: 45.1042	Accuracy: 0.9778	CTCAccuracy: 0.3523	

[1,0]<stderr>:INFO:absl:epoch: 4	loss: 24.9274	Accuracy: 0.9942	CTCAccuracy: 0.6054	

[1,0]<stderr>:INFO:absl:epoch: 0	loss: 8.0641	AverageLoss: 7.8889	

[1,0]<stderr>:INFO:absl:epoch: 1	loss: 8.0634	AverageLoss: 7.8882	

[1,0]<stderr>:INFO:absl:epoch: 2	loss: 8.0570	AverageLoss: 7.8819	

[1,0]<stderr>:INFO:absl:epoch: 3	loss: 7.4973	AverageLoss: 7.3341	

[1,0]<stderr>:INFO:absl:epoch: 4	loss: 7.2181	AverageLoss: 7.0606	

[1,0]<stderr>:INFO:absl:epoch: 5	loss: 7.1263	AverageLoss: 6.9704	

[1,0]<stderr>:INFO:absl:epoch: 6	loss: 7.0844	AverageLoss: 6.9293	

[1,0]<stderr>:INFO:absl:epoch: 7	loss: 7.0593	AverageLoss: 6.9049	

[1,0]<stderr>:INFO:absl:epoch: 8	loss: 7.0402	AverageLoss: 6.8864	

[1,0]<stderr>:INFO:absl:epoch: 9	loss: 7.0242	AverageLoss: 6.8693	

[1,0]<stderr>:INFO:absl:epoch: 10	loss: 7.0049	AverageLoss: 6.8516	

[1,0]<stderr>:INFO:absl:epoch: 11	loss: 6.9915	AverageLoss: 6.8373	

[1,0]<stderr>:INFO:absl:epoch: 12	loss: 6.9753	AverageLoss: 6.8234	

[1,0]<stderr>:INFO:absl:epoch: 13	loss: 6.9695	AverageLoss: 6.8190	

[1,0]<stderr>:INFO:absl:epoch: 14	loss: 6.9475	AverageLoss: 6.7968	

[1,0]<stderr>:INFO:absl:epoch: 15	loss: 6.9334	AverageLoss: 6.7837	

[1,0]<stderr>:INFO:absl:epoch: 16	loss: 6.9196	AverageLoss: 6.7711	

[1,0]<stderr>:INFO:absl:epoch: 17	loss: 6.9035	AverageLoss: 6.7545	

[1,0]<stderr>:INFO:absl:epoch: 18	loss: 6.8831	AverageLoss: 6.7359	

[1,0]<stderr>:INFO:absl:epoch: 19	loss: 6.8731	AverageLoss: 6.7255	

best_wer_checkpoint: 
[0, 1, 2, 3, 4]
Fbank params:  [('channel', 1), ('cls', <class 'athena.transform.feats.fbank.Fbank'>), ('delta_delta', False), ('dither', 0.0), ('filterbank_channel_count', 40), ('frame_length', 0.01), ('global_mean', [0.0]), ('global_variance', [1.000001]), ('is_fbank', True), ('local_cmvn', False), ('lower_frequency_limit', 60), ('order', 2), ('output_type', 1), ('preEph_coeff', 0.97), ('raw_energy', 1), ('remove_dc_offset', True), ('snip_edges', 1), ('type', 'Fbank'), ('upper_frequency_limit', 0), ('window', 2), ('window_length', 0.025), ('window_type', 'povey')]
before filter by unk:2495
after filter by unk:988
afiter filter by input length:988
after filter by output length:988
